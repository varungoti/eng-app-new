{
    "sourceFile": "vite.config.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 55,
            "patches": [
                {
                    "date": 1739006660995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739299733445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,16 @@\n       }\r\n     }\r\n   ],\r\n   resolve: {\r\n-    alias: [\r\n-      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n-      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n-      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n-      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n-      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n-      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n-    ]\r\n+    alias: {\r\n+      '@': path.resolve(__dirname, './src'),\r\n+      '@/lib': path.resolve(__dirname, './src/lib'),\r\n+      '@/components': path.resolve(__dirname, './src/components'),\r\n+      '@/types': path.resolve(__dirname, './src/types'),\r\n+      '@/hooks': path.resolve(__dirname, './src/hooks'),\r\n+      '@/contexts': path.resolve(__dirname, './src/contexts'),\r\n+    }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n"
                },
                {
                    "date": 1739299798639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,14 +17,14 @@\n     }\r\n   ],\r\n   resolve: {\r\n     alias: {\r\n-      '@': path.resolve(__dirname, './src'),\r\n-      '@/lib': path.resolve(__dirname, './src/lib'),\r\n-      '@/components': path.resolve(__dirname, './src/components'),\r\n-      '@/types': path.resolve(__dirname, './src/types'),\r\n-      '@/hooks': path.resolve(__dirname, './src/hooks'),\r\n-      '@/contexts': path.resolve(__dirname, './src/contexts'),\r\n+      '@': path.resolve(__dirname, 'src'),\r\n+      '@lib': path.resolve(__dirname, 'src/lib'),\r\n+      '@components': path.resolve(__dirname, 'src/components'),\r\n+      '@types': path.resolve(__dirname, 'src/types'),\r\n+      '@hooks': path.resolve(__dirname, 'src/hooks'),\r\n+      '@contexts': path.resolve(__dirname, 'src/contexts')\r\n     }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n"
                },
                {
                    "date": 1739300049035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,16 @@\n       }\r\n     }\r\n   ],\r\n   resolve: {\r\n-    alias: {\r\n-      '@': path.resolve(__dirname, 'src'),\r\n-      '@lib': path.resolve(__dirname, 'src/lib'),\r\n-      '@components': path.resolve(__dirname, 'src/components'),\r\n-      '@types': path.resolve(__dirname, 'src/types'),\r\n-      '@hooks': path.resolve(__dirname, 'src/hooks'),\r\n-      '@contexts': path.resolve(__dirname, 'src/contexts')\r\n-    }\r\n+    alias: [\r\n+      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n+      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n+      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n+      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n+      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n+      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n+    ]\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n"
                },
                {
                    "date": 1739302426527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n-import path from 'path';\r\n+import path from 'path';npm\r\n import viteExpress from 'vite-express';\r\n \r\n \r\n export default defineConfig({\r\n"
                },
                {
                    "date": 1739302597938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n-import path from 'path';npm\r\n+import path from 'path';\r\n import viteExpress from 'vite-express';\r\n \r\n \r\n export default defineConfig({\r\n"
                },
                {
                    "date": 1739302920417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,30 +2,19 @@\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n import viteExpress from 'vite-express';\r\n \r\n-\r\n export default defineConfig({\r\n-  plugins: [\r\n-    react(),\r\n-    {\r\n-      name: 'vite-express-custom',\r\n-      configureServer(server) {\r\n-        server.middlewares.use('/api/process-image', (req, res) => {\r\n-          require('./src/api/process-image').default(req, res);\r\n-        });\r\n-      }\r\n+  plugins: [react(), viteExpress()],\r\n+  resolve: {\r\n+    alias: {\r\n+      '@': path.resolve(__dirname, './src'),\r\n+      '@lib': path.resolve(__dirname, './src/lib'),\r\n+      '@components': path.resolve(__dirname, './src/components'),\r\n+      '@types': path.resolve(__dirname, './src/types'),\r\n+      '@hooks': path.resolve(__dirname, './src/hooks'),\r\n+      '@contexts': path.resolve(__dirname, './src/contexts')\r\n     }\r\n-  ],\r\n-  resolve: {\r\n-    alias: [\r\n-      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n-      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n-      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n-      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n-      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n-      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n-    ]\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n"
                },
                {
                    "date": 1739302932081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n import viteExpress from 'vite-express';\r\n \r\n+\r\n export default defineConfig({\r\n   plugins: [react(), viteExpress()],\r\n   resolve: {\r\n     alias: {\r\n"
                },
                {
                    "date": 1739302970448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,15 @@\n import viteExpress from 'vite-express';\r\n \r\n \r\n export default defineConfig({\r\n-  plugins: [react(), viteExpress()],\r\n+  plugins: [react(), {\r\n+    name: 'vite-express-custom',\r\n+    configureServer(server) {\r\n+      server.middlewares.use('/api/process-image', (req, res) => {\r\n+        require('./src/api/process-image').default(req, res);\r\n+      });\r\n+    }],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, './src'),\r\n       '@lib': path.resolve(__dirname, './src/lib'),\r\n"
                },
                {
                    "date": 1739302988061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n     configureServer(server) {\r\n       server.middlewares.use('/api/process-image', (req, res) => {\r\n         require('./src/api/process-image').default(req, res);\r\n       });\r\n-    }],\r\n+    }\r\n+  }],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, './src'),\r\n       '@lib': path.resolve(__dirname, './src/lib'),\r\n"
                },
                {
                    "date": 1739303001421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n-import viteExpress from 'vite-express';\r\n \r\n \r\n export default defineConfig({\r\n   plugins: [react(), {\r\n"
                },
                {
                    "date": 1739303053781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,98 +1,28 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n \r\n-\r\n export default defineConfig({\r\n-  plugins: [react(), {\r\n-    name: 'vite-express-custom',\r\n-    configureServer(server) {\r\n-      server.middlewares.use('/api/process-image', (req, res) => {\r\n-        require('./src/api/process-image').default(req, res);\r\n-      });\r\n-    }\r\n-  }],\r\n+  plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n-      '@': path.resolve(__dirname, './src'),\r\n-      '@lib': path.resolve(__dirname, './src/lib'),\r\n-      '@components': path.resolve(__dirname, './src/components'),\r\n-      '@types': path.resolve(__dirname, './src/types'),\r\n-      '@hooks': path.resolve(__dirname, './src/hooks'),\r\n-      '@contexts': path.resolve(__dirname, './src/contexts')\r\n+      '@': path.resolve(__dirname, 'src'),\r\n+      '@lib': path.resolve(__dirname, 'src/lib'),\r\n+      '@components': path.resolve(__dirname, 'src/components'),\r\n+      '@hooks': path.resolve(__dirname, 'src/hooks'),\r\n+      '@contexts': path.resolve(__dirname, 'src/contexts'),\r\n+      '@types': path.resolve(__dirname, 'src/types'),\r\n+      '@utils': path.resolve(__dirname, 'src/utils'),\r\n+      '@pages': path.resolve(__dirname, 'src/pages'),\r\n+      '@app': path.resolve(__dirname, 'src/app')\r\n     }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n-    hmr: {\r\n-      overlay: true,\r\n-    },\r\n-    headers: {\r\n-      'Access-Control-Allow-Origin': '*',\r\n-      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n-      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n-      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-    },\r\n-    proxy: {\r\n-      '/maps/api': {\r\n-        target: 'https://maps.googleapis.com',\r\n-        changeOrigin: true,\r\n-        secure: true,\r\n-        headers: {\r\n-          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-        },\r\n-        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n-      },\r\n-      '/maps/place': {\r\n-        target: 'https://maps.googleapis.com',\r\n-        changeOrigin: true,\r\n-        secure: true,\r\n-        headers: {\r\n-          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-        },\r\n-        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n-      },\r\n-      '/api': {\r\n-        target: 'http://localhost:5173',\r\n-        changeOrigin: true,\r\n-        secure: false,\r\n-        ws: true,\r\n-        rewrite: (path) => path.replace(/^\\/api/, '')\r\n-      }\r\n+    host: true,\r\n+    strictPort: true,\r\n+    watch: {\r\n+      usePolling: true\r\n     }\r\n-  },\r\n-  build: {\r\n-    rollupOptions: {\r\n-      output: {\r\n-        manualChunks: {\r\n-          'react-vendor': ['react', 'react-dom'],\r\n-          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n-        }\r\n-      }\r\n-    },\r\n-    chunkSizeWarningLimit: 1000\r\n-  },\r\n-  optimizeDeps: {\r\n-    include: [\r\n-      'lucide-react',\r\n-      'react',\r\n-      'react-dom',\r\n-      'react-router-dom',\r\n-      '@tanstack/react-query',\r\n-      '@supabase/ssr',\r\n-      '@supabase/supabase-js',\r\n-      '@supabase/gotrue-js'\r\n-    ]\r\n-  },\r\n-  envDir: './',\r\n-  envPrefix: 'VITE_',\r\n-  define: {\r\n-    'process.env': process.env,\r\n-    //'process.env': {},\r\n-    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n-    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n-    'process.browser': true,\r\n-    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n-    \r\n   }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303254857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,16 @@\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n \r\n export default defineConfig({\r\n-  plugins: [react()],\r\n+  plugins: [react(), {\r\n+    name: 'vite-express-custom',\r\n+    configureServer(server) {\r\n+      server.middlewares.use('/api/process-image', (req, res) => {\r\n+        require('./src/api/process-image').default(req, res);\r\n+      });\r\n+    }\r\n+  }],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n"
                },
                {
                    "date": 1739303296799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,9 @@\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n \r\n export default defineConfig({\r\n-  plugins: [react(), {\r\n-    name: 'vite-express-custom',\r\n-    configureServer(server) {\r\n-      server.middlewares.use('/api/process-image', (req, res) => {\r\n-        require('./src/api/process-image').default(req, res);\r\n-      });\r\n-    }\r\n-  }],\r\n+  plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n"
                },
                {
                    "date": 1739303319647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,76 @@\n     }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n-    host: true,\r\n-    strictPort: true,\r\n-    watch: {\r\n-      usePolling: true\r\n+    hmr: {\r\n+      overlay: true,\r\n+    },\r\n+    headers: {\r\n+      'Access-Control-Allow-Origin': '*',\r\n+      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n+      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n+      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+    },\r\n+    proxy: {\r\n+      '/maps/api': {\r\n+        target: 'https://maps.googleapis.com',\r\n+        changeOrigin: true,\r\n+        secure: true,\r\n+        headers: {\r\n+          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+        },\r\n+        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n+      },\r\n+      '/maps/place': {\r\n+        target: 'https://maps.googleapis.com',\r\n+        changeOrigin: true,\r\n+        secure: true,\r\n+        headers: {\r\n+          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+        },\r\n+        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n+      },\r\n+      '/api': {\r\n+        target: 'http://localhost:5173',\r\n+        changeOrigin: true,\r\n+        secure: false,\r\n+        ws: true,\r\n+        rewrite: (path) => path.replace(/^\\/api/, '')\r\n+      }\r\n     }\r\n+  },\r\n+  build: {\r\n+    rollupOptions: {\r\n+      output: {\r\n+        manualChunks: {\r\n+          'react-vendor': ['react', 'react-dom'],\r\n+          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n+        }\r\n+      }\r\n+    },\r\n+    chunkSizeWarningLimit: 1000\r\n+  },\r\n+  optimizeDeps: {\r\n+    include: [\r\n+      'lucide-react',\r\n+      'react',\r\n+      'react-dom',\r\n+      'react-router-dom',\r\n+      '@tanstack/react-query',\r\n+      '@supabase/ssr',\r\n+      '@supabase/supabase-js',\r\n+      '@supabase/gotrue-js'\r\n+    ]\r\n+  },\r\n+  envDir: './',\r\n+  envPrefix: 'VITE_',\r\n+  define: {\r\n+    'process.env': process.env,\r\n+    //'process.env': {},\r\n+    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n+    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n+    'process.browser': true,\r\n+    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n+    \r\n   }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303329123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,7 +87,7 @@\n     __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n     'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n     'process.browser': true,\r\n     'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n-    \r\n+    'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n   }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303335778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,5 +89,10 @@\n     'process.browser': true,\r\n     'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n     'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n   }\r\n+  host: true,\r\n+    strictPort: true,\r\n+    watch: {\r\n+      usePolling: true\r\n+    }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303356421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,10 +88,11 @@\n     'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n     'process.browser': true,\r\n     'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n     'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n-  }\r\n-  host: true,\r\n+  },\r\n+  server: {\r\n+    host: true,\r\n     strictPort: true,\r\n     watch: {\r\n       usePolling: true\r\n     }\r\n"
                },
                {
                    "date": 1739303363188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,5 +95,6 @@\n     strictPort: true,\r\n     watch: {\r\n       usePolling: true\r\n     }\r\n+  }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303372510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,13 +88,7 @@\n     'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n     'process.browser': true,\r\n     'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n     'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n-  },\r\n-  server: {\r\n-    host: true,\r\n-    strictPort: true,\r\n-    watch: {\r\n-      usePolling: true\r\n-    }\r\n   }\r\n+  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303384761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,13 @@\n     port: 5173,\r\n     hmr: {\r\n       overlay: true,\r\n     },\r\n+    host: true,\r\n+    strictPort: true,\r\n+    watch: {\r\n+      usePolling: true\r\n+    }\r\n     headers: {\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n       'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n"
                },
                {
                    "date": 1739303419783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,16 @@\n     },\r\n     host: true,\r\n     strictPort: true,\r\n     watch: {\r\n-      usePolling: true\r\n-    }\r\n+      usePolling: true,\r\n+      exclude: [\r\n+        '**/node_modules/**',\r\n+        '**/dist/**',\r\n+        '**/fish-speech/**',\r\n+        '**/.git/**'\r\n+      ]\r\n+    },\r\n     headers: {\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n       'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n@@ -61,15 +67,18 @@\n       }\r\n     }\r\n   },\r\n   build: {\r\n+    outDir: 'dist',\r\n+    sourcemap: true,\r\n     rollupOptions: {\r\n-      output: {\r\n-        manualChunks: {\r\n-          'react-vendor': ['react', 'react-dom'],\r\n-          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n-        }\r\n-      }\r\n+      external: [\r\n+        '@gradio/*',\r\n+        'gradio',\r\n+        'gradio_client',\r\n+        'svelte',\r\n+        'svelte-i18n'\r\n+      ]\r\n     },\r\n     chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n@@ -81,9 +90,10 @@\n       '@tanstack/react-query',\r\n       '@supabase/ssr',\r\n       '@supabase/supabase-js',\r\n       '@supabase/gotrue-js'\r\n-    ]\r\n+    ],\r\n+    exclude: ['@gradio/*', 'gradio', 'gradio_client', 'svelte', 'svelte-i18n']\r\n   },\r\n   envDir: './',\r\n   envPrefix: 'VITE_',\r\n   define: {\r\n"
                },
                {
                    "date": 1739303485870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     host: true,\r\n     strictPort: true,\r\n     watch: {\r\n       usePolling: true,\r\n-      exclude: [\r\n+      ignored: [\r\n         '**/node_modules/**',\r\n         '**/dist/**',\r\n         '**/fish-speech/**',\r\n         '**/.git/**'\r\n"
                },
                {
                    "date": 1739303498202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n \r\n+\r\n export default defineConfig({\r\n   plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n"
                },
                {
                    "date": 1739303504084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n+import vi\r\n \r\n-\r\n export default defineConfig({\r\n   plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n"
                },
                {
                    "date": 1739303509509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n-import vi\r\n+import viteExpress from 'vite-plugin-express';\r\n \r\n export default defineConfig({\r\n-  plugins: [react()],\r\n+  plugins: [react(), viteExpress()],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n"
                },
                {
                    "date": 1739303526381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n-import viteExpress from 'vite-plugin-express';\r\n \r\n+// https://vitejs.dev/config/\r\n export default defineConfig({\r\n-  plugins: [react(), viteExpress()],\r\n+  plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n@@ -19,92 +19,25 @@\n     }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n-    hmr: {\r\n-      overlay: true,\r\n-    },\r\n     host: true,\r\n     strictPort: true,\r\n-    watch: {\r\n-      usePolling: true,\r\n-      ignored: [\r\n-        '**/node_modules/**',\r\n-        '**/dist/**',\r\n-        '**/fish-speech/**',\r\n-        '**/.git/**'\r\n-      ]\r\n-    },\r\n-    headers: {\r\n-      'Access-Control-Allow-Origin': '*',\r\n-      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n-      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n-      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-    },\r\n     proxy: {\r\n-      '/maps/api': {\r\n-        target: 'https://maps.googleapis.com',\r\n-        changeOrigin: true,\r\n-        secure: true,\r\n-        headers: {\r\n-          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-        },\r\n-        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n-      },\r\n-      '/maps/place': {\r\n-        target: 'https://maps.googleapis.com',\r\n-        changeOrigin: true,\r\n-        secure: true,\r\n-        headers: {\r\n-          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-        },\r\n-        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n-      },\r\n       '/api': {\r\n-        target: 'http://localhost:5173',\r\n+        target: 'http://localhost:3000',\r\n         changeOrigin: true,\r\n         secure: false,\r\n-        ws: true,\r\n-        rewrite: (path) => path.replace(/^\\/api/, '')\r\n+        ws: true\r\n       }\r\n     }\r\n   },\r\n   build: {\r\n     outDir: 'dist',\r\n     sourcemap: true,\r\n     rollupOptions: {\r\n-      external: [\r\n-        '@gradio/*',\r\n-        'gradio',\r\n-        'gradio_client',\r\n-        'svelte',\r\n-        'svelte-i18n'\r\n-      ]\r\n-    },\r\n-    chunkSizeWarningLimit: 1000\r\n-  },\r\n-  optimizeDeps: {\r\n-    include: [\r\n-      'lucide-react',\r\n-      'react',\r\n-      'react-dom',\r\n-      'react-router-dom',\r\n-      '@tanstack/react-query',\r\n-      '@supabase/ssr',\r\n-      '@supabase/supabase-js',\r\n-      '@supabase/gotrue-js'\r\n-    ],\r\n-    exclude: ['@gradio/*', 'gradio', 'gradio_client', 'svelte', 'svelte-i18n']\r\n-  },\r\n-  envDir: './',\r\n-  envPrefix: 'VITE_',\r\n-  define: {\r\n-    'process.env': process.env,\r\n-    //'process.env': {},\r\n-    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n-    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n-    'process.browser': true,\r\n-    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n-    'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n+      input: {\r\n+        main: path.resolve(__dirname, 'index.html')\r\n+      }\r\n+    }\r\n   }\r\n-  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303539963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n+import viteExpress from 'vite-plugin-express';\r\n \r\n-// https://vitejs.dev/config/\r\n export default defineConfig({\r\n-  plugins: [react()],\r\n+  plugins: [react(), viteExpress()],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n@@ -19,25 +19,92 @@\n     }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n+    hmr: {\r\n+      overlay: true,\r\n+    },\r\n     host: true,\r\n     strictPort: true,\r\n+    watch: {\r\n+      usePolling: true,\r\n+      ignored: [\r\n+        '**/node_modules/**',\r\n+        '**/dist/**',\r\n+        '**/fish-speech/**',\r\n+        '**/.git/**'\r\n+      ]\r\n+    },\r\n+    headers: {\r\n+      'Access-Control-Allow-Origin': '*',\r\n+      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n+      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n+      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+    },\r\n     proxy: {\r\n+      '/maps/api': {\r\n+        target: 'https://maps.googleapis.com',\r\n+        changeOrigin: true,\r\n+        secure: true,\r\n+        headers: {\r\n+          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+        },\r\n+        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n+      },\r\n+      '/maps/place': {\r\n+        target: 'https://maps.googleapis.com',\r\n+        changeOrigin: true,\r\n+        secure: true,\r\n+        headers: {\r\n+          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+        },\r\n+        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n+      },\r\n       '/api': {\r\n-        target: 'http://localhost:3000',\r\n+        target: 'http://localhost:5173',\r\n         changeOrigin: true,\r\n         secure: false,\r\n-        ws: true\r\n+        ws: true,\r\n+        rewrite: (path) => path.replace(/^\\/api/, '')\r\n       }\r\n     }\r\n   },\r\n   build: {\r\n     outDir: 'dist',\r\n     sourcemap: true,\r\n     rollupOptions: {\r\n-      input: {\r\n-        main: path.resolve(__dirname, 'index.html')\r\n-      }\r\n-    }\r\n+      external: [\r\n+        '@gradio/*',\r\n+        'gradio',\r\n+        'gradio_client',\r\n+        'svelte',\r\n+        'svelte-i18n'\r\n+      ]\r\n+    },\r\n+    chunkSizeWarningLimit: 1000\r\n+  },\r\n+  optimizeDeps: {\r\n+    include: [\r\n+      'lucide-react',\r\n+      'react',\r\n+      'react-dom',\r\n+      'react-router-dom',\r\n+      '@tanstack/react-query',\r\n+      '@supabase/ssr',\r\n+      '@supabase/supabase-js',\r\n+      '@supabase/gotrue-js'\r\n+    ],\r\n+    exclude: ['@gradio/*', 'gradio', 'gradio_client', 'svelte', 'svelte-i18n']\r\n+  },\r\n+  envDir: './',\r\n+  envPrefix: 'VITE_',\r\n+  define: {\r\n+    'process.env': process.env,\r\n+    //'process.env': {},\r\n+    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n+    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n+    'process.browser': true,\r\n+    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n+    'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n   }\r\n+  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303554379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,15 @@\n import path from 'path';\r\n import viteExpress from 'vite-plugin-express';\r\n \r\n export default defineConfig({\r\n-  plugins: [react(), viteExpress()],\r\n+  plugins: [react(), viteExpress({\r\n+    server: {\r\n+      port: 5173,\r\n+      host: true,\r\n+      strictPort: true\r\n+    }\r\n+  })],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n"
                },
                {
                    "date": 1739303609938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,9 @@\n import path from 'path';\r\n import viteExpress from 'vite-plugin-express';\r\n \r\n export default defineConfig({\r\n-  plugins: [react(), viteExpress({\r\n-    server: {\r\n-      port: 5173,\r\n-      host: true,\r\n-      strictPort: true\r\n-    }\r\n-  })],\r\n+  plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, 'src'),\r\n       '@lib': path.resolve(__dirname, 'src/lib'),\r\n"
                },
                {
                    "date": 1739303627866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,37 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n-import viteExpress from 'vite-plugin-express';\r\n+import viteExpress from 'vite-express';\r\n \r\n+\r\n export default defineConfig({\r\n-  plugins: [react()],\r\n+  plugins: [\r\n+    react()\r\n+    // {\r\n+    //   name: 'vite-express-custom',\r\n+    //   configureServer(server) {\r\n+    //     server.middlewares.use('/api/process-image', (req, res) => {\r\n+    //       require('./src/api/process-image').default(req, res);\r\n+    //     });\r\n+    //   }\r\n+    // }\r\n+  ],\r\n   resolve: {\r\n-    alias: {\r\n-      '@': path.resolve(__dirname, 'src'),\r\n-      '@lib': path.resolve(__dirname, 'src/lib'),\r\n-      '@components': path.resolve(__dirname, 'src/components'),\r\n-      '@hooks': path.resolve(__dirname, 'src/hooks'),\r\n-      '@contexts': path.resolve(__dirname, 'src/contexts'),\r\n-      '@types': path.resolve(__dirname, 'src/types'),\r\n-      '@utils': path.resolve(__dirname, 'src/utils'),\r\n-      '@pages': path.resolve(__dirname, 'src/pages'),\r\n-      '@app': path.resolve(__dirname, 'src/app')\r\n-    }\r\n+    alias: [\r\n+      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n+      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n+      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n+      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n+      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n+      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n+    ]\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n       overlay: true,\r\n     },\r\n-    host: true,\r\n-    strictPort: true,\r\n-    watch: {\r\n-      usePolling: true,\r\n-      ignored: [\r\n-        '**/node_modules/**',\r\n-        '**/dist/**',\r\n-        '**/fish-speech/**',\r\n-        '**/.git/**'\r\n-      ]\r\n-    },\r\n     headers: {\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n       'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n@@ -68,18 +65,15 @@\n       }\r\n     }\r\n   },\r\n   build: {\r\n-    outDir: 'dist',\r\n-    sourcemap: true,\r\n     rollupOptions: {\r\n-      external: [\r\n-        '@gradio/*',\r\n-        'gradio',\r\n-        'gradio_client',\r\n-        'svelte',\r\n-        'svelte-i18n'\r\n-      ]\r\n+      output: {\r\n+        manualChunks: {\r\n+          'react-vendor': ['react', 'react-dom'],\r\n+          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n+        }\r\n+      }\r\n     },\r\n     chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n@@ -91,10 +85,9 @@\n       '@tanstack/react-query',\r\n       '@supabase/ssr',\r\n       '@supabase/supabase-js',\r\n       '@supabase/gotrue-js'\r\n-    ],\r\n-    exclude: ['@gradio/*', 'gradio', 'gradio_client', 'svelte', 'svelte-i18n']\r\n+    ]\r\n   },\r\n   envDir: './',\r\n   envPrefix: 'VITE_',\r\n   define: {\r\n@@ -103,8 +96,7 @@\n     __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n     'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n     'process.browser': true,\r\n     'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n-    'import.meta.env.PROD': JSON.stringify(process.env.NODE_ENV === 'production'),\r\n+    \r\n   }\r\n-  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303634342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,16 @@\n \r\n export default defineConfig({\r\n   plugins: [\r\n     react()\r\n-    // {\r\n-    //   name: 'vite-express-custom',\r\n-    //   configureServer(server) {\r\n-    //     server.middlewares.use('/api/process-image', (req, res) => {\r\n-    //       require('./src/api/process-image').default(req, res);\r\n-    //     });\r\n-    //   }\r\n-    // }\r\n+    {\r\n+      name: 'vite-express-custom',\r\n+      configureServer(server) {\r\n+        server.middlewares.use('/api/process-image', (req, res) => {\r\n+          require('./src/api/process-image').default(req, res);\r\n+        });\r\n+      }\r\n+    }\r\n   ],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n"
                },
                {
                    "date": 1739303639586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,9 @@\n \r\n export default defineConfig({\r\n   plugins: [\r\n     react()\r\n-    {\r\n-      name: 'vite-express-custom',\r\n-      configureServer(server) {\r\n-        server.middlewares.use('/api/process-image', (req, res) => {\r\n-          require('./src/api/process-image').default(req, res);\r\n-        });\r\n-      }\r\n-    }\r\n+    y\r\n   ],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n"
                },
                {
                    "date": 1739303646416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \r\n export default defineConfig({\r\n   plugins: [\r\n     react()\r\n-    y\r\n+    \r\n   ],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n"
                },
                {
                    "date": 1739303654498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n \r\n \r\n export default defineConfig({\r\n   plugins: [\r\n-    react()\r\n-    \r\n+    react(),\r\n+    viteExpress()\r\n   ],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n"
                },
                {
                    "date": 1739303660056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,17 @@\n \r\n \r\n export default defineConfig({\r\n   plugins: [\r\n-    react(),\r\n-    viteExpress()\r\n+    react()\r\n+    // {\r\n+    //   name: 'vite-express-custom',\r\n+    //   configureServer(server) {\r\n+    //     server.middlewares.use('/api/process-image', (req, res) => {\r\n+    //       require('./src/api/process-image').default(req, res);\r\n+    //     });\r\n+    //   }\r\n+    // }\r\n   ],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n"
                },
                {
                    "date": 1739303666044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,16 @@\n \r\n export default defineConfig({\r\n   plugins: [\r\n     react()\r\n-    // {\r\n-    //   name: 'vite-express-custom',\r\n-    //   configureServer(server) {\r\n-    //     server.middlewares.use('/api/process-image', (req, res) => {\r\n-    //       require('./src/api/process-image').default(req, res);\r\n-    //     });\r\n-    //   }\r\n-    // }\r\n+    {\r\n+      name: 'vite-express-custom',\r\n+      configureServer(server) {\r\n+        server.middlewares.use('/api/process-image', (req, res) => {\r\n+          require('./src/api/process-image').default(req, res);\r\n+        });\r\n+      }\r\n+    }\r\n   ],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n"
                },
                {
                    "date": 1739303678977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n \r\n export default defineConfig({\r\n   plugins: [\r\n-    react()\r\n+    react(),\r\n     {\r\n       name: 'vite-express-custom',\r\n       configureServer(server) {\r\n         server.middlewares.use('/api/process-image', (req, res) => {\r\n"
                },
                {
                    "date": 1739303696899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,19 @@\n       }\r\n     }\r\n   ],\r\n   resolve: {\r\n-    alias: [\r\n-      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n-      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n-      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n-      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n-      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n-      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n-    ]\r\n+    alias: {\r\n+      '@': path.resolve(__dirname, './src'),\r\n+      '@lib': path.resolve(__dirname, './src/lib'),\r\n+      '@components': path.resolve(__dirname, './src/components'),\r\n+      '@hooks': path.resolve(__dirname, './src/hooks'),\r\n+      '@contexts': path.resolve(__dirname, './src/contexts'),\r\n+      '@types': path.resolve(__dirname, './src/types'),\r\n+      '@utils': path.resolve(__dirname, './src/utils'),\r\n+      '@pages': path.resolve(__dirname, './src/pages'),\r\n+      '@app': path.resolve(__dirname, './src/app')\r\n+    }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n@@ -70,12 +73,17 @@\n       output: {\r\n         manualChunks: {\r\n           'react-vendor': ['react', 'react-dom'],\r\n           'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n+        },\r\n+        input: {\r\n+          main: path.resolve(__dirname, 'index.html')\r\n         }\r\n       }\r\n     },\r\n-    chunkSizeWarningLimit: 1000\r\n+    chunkSizeWarningLimit: 1000,\r\n+    outDir: 'dist',\r\n+    sourcemap: true\r\n   },\r\n   optimizeDeps: {\r\n     include: [\r\n       'lucide-react',\r\n"
                },
                {
                    "date": 1739303708365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,9 @@\n \r\n \r\n export default defineConfig({\r\n   plugins: [\r\n-    react(),\r\n-    {\r\n-      name: 'vite-express-custom',\r\n-      configureServer(server) {\r\n-        server.middlewares.use('/api/process-image', (req, res) => {\r\n-          require('./src/api/process-image').default(req, res);\r\n-        });\r\n-      }\r\n-    }\r\n+    react()\r\n   ],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, './src'),\r\n"
                },
                {
                    "date": 1739303719111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,9 @@\n \r\n \r\n export default defineConfig({\r\n   plugins: [\r\n-    react()\r\n-  ],\r\n+    react()  ],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, './src'),\r\n       '@lib': path.resolve(__dirname, './src/lib'),\r\n"
                },
                {
                    "date": 1739303734527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,19 +7,16 @@\n export default defineConfig({\r\n   plugins: [\r\n     react()  ],\r\n   resolve: {\r\n-    alias: {\r\n-      '@': path.resolve(__dirname, './src'),\r\n-      '@lib': path.resolve(__dirname, './src/lib'),\r\n-      '@components': path.resolve(__dirname, './src/components'),\r\n-      '@hooks': path.resolve(__dirname, './src/hooks'),\r\n-      '@contexts': path.resolve(__dirname, './src/contexts'),\r\n-      '@types': path.resolve(__dirname, './src/types'),\r\n-      '@utils': path.resolve(__dirname, './src/utils'),\r\n-      '@pages': path.resolve(__dirname, './src/pages'),\r\n-      '@app': path.resolve(__dirname, './src/app')\r\n-    }\r\n+    alias: [\r\n+      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n+      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n+      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n+      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n+      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n+      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n+    ]\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n@@ -64,17 +61,12 @@\n       output: {\r\n         manualChunks: {\r\n           'react-vendor': ['react', 'react-dom'],\r\n           'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n-        },\r\n-        input: {\r\n-          main: path.resolve(__dirname, 'index.html')\r\n         }\r\n       }\r\n     },\r\n-    chunkSizeWarningLimit: 1000,\r\n-    outDir: 'dist',\r\n-    sourcemap: true\r\n+    chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n     include: [\r\n       'lucide-react',\r\n"
                },
                {
                    "date": 1739303756265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,9 @@\n import viteExpress from 'vite-express';\r\n \r\n \r\n export default defineConfig({\r\n-  plugins: [\r\n-    react()  ],\r\n+  plugins: [react()],\r\n   resolve: {\r\n     alias: [\r\n       { find: '@', replacement: path.resolve(__dirname, './src') },\r\n       { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n"
                },
                {
                    "date": 1739303763990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n     port: 5173,\r\n     hmr: {\r\n       overlay: true,\r\n     },\r\n+    \r\n     headers: {\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n       'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n"
                },
                {
                    "date": 1739303770121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,10 @@\n     port: 5173,\r\n     hmr: {\r\n       overlay: true,\r\n     },\r\n+    strictPort: true,\r\n+    open: true,\r\n     \r\n     headers: {\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n"
                },
                {
                    "date": 1739303778231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import { defineConfig } from 'vite';\r\n+import react from '@vitejs/plugin-react';\r\n+import path from 'path';\r\n+import viteExpress from 'vite-express';\r\n+\r\n+\r\n+export default defineConfig({\r\n+  plugins: [react()],\r\n+  resolve: {\r\n+    alias: [\r\n+      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n+      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n+      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n+      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n+      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n+      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n+    ]\r\n+  },\r\n+  server: {\r\n+    port: 5173,\r\n+    hmr: {\r\n+      overlay: true,\r\n+    },\r\n+    strictPort: true,\r\n+    open: true,\r\n+    host: true,\r\n+    strictPort: true,\r\n+    watch: {\r\n+      usePolling: true\r\n+    },\r\n+    headers: {\r\n+      'Access-Control-Allow-Origin': '*',\r\n+      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n+      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n+      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+    },\r\n+    proxy: {\r\n+      '/maps/api': {\r\n+        target: 'https://maps.googleapis.com',\r\n+        changeOrigin: true,\r\n+        secure: true,\r\n+        headers: {\r\n+          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+        },\r\n+        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n+      },\r\n+      '/maps/place': {\r\n+        target: 'https://maps.googleapis.com',\r\n+        changeOrigin: true,\r\n+        secure: true,\r\n+        headers: {\r\n+          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n+        },\r\n+        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n+      },\r\n+      '/api': {\r\n+        target: 'http://localhost:5173',\r\n+        changeOrigin: true,\r\n+        secure: false,\r\n+        ws: true,\r\n+        rewrite: (path) => path.replace(/^\\/api/, '')\r\n+      }\r\n+    }\r\n+  },\r\n+  build: {\r\n+    rollupOptions: {\r\n+      output: {\r\n+        manualChunks: {\r\n+          'react-vendor': ['react', 'react-dom'],\r\n+          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n+        }\r\n+      }\r\n+    },\r\n+    chunkSizeWarningLimit: 1000\r\n+  },\r\n+  optimizeDeps: {\r\n+    include: [\r\n+      'lucide-react',\r\n+      'react',\r\n+      'react-dom',\r\n+      'react-router-dom',\r\n+      '@tanstack/react-query',\r\n+      '@supabase/ssr',\r\n+      '@supabase/supabase-js',\r\n+      '@supabase/gotrue-js'\r\n+    ]\r\n+  },\r\n+  envDir: './',\r\n+  envPrefix: 'VITE_',\r\n+  define: {\r\n+    'process.env': process.env,\r\n+    //'process.env': {},\r\n+    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n+    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n+    'process.browser': true,\r\n+    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n+    \r\n+  }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303785504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     },\r\n     strictPort: true,\r\n     open: true,\r\n     host: true,\r\n-    strictPort: true,\r\n+    \r\n     watch: {\r\n       usePolling: true\r\n     },\r\n     headers: {\r\n@@ -95,100 +95,5 @@\n     'process.browser': true,\r\n     'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n     \r\n   }\r\n-});\n-import { defineConfig } from 'vite';\r\n-import react from '@vitejs/plugin-react';\r\n-import path from 'path';\r\n-import viteExpress from 'vite-express';\r\n-\r\n-\r\n-export default defineConfig({\r\n-  plugins: [react()],\r\n-  resolve: {\r\n-    alias: [\r\n-      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n-      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n-      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n-      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n-      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n-      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n-    ]\r\n-  },\r\n-  server: {\r\n-    port: 5173,\r\n-    hmr: {\r\n-      overlay: true,\r\n-    },\r\n-    strictPort: true,\r\n-    open: true,\r\n-    \r\n-    headers: {\r\n-      'Access-Control-Allow-Origin': '*',\r\n-      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n-      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n-      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-    },\r\n-    proxy: {\r\n-      '/maps/api': {\r\n-        target: 'https://maps.googleapis.com',\r\n-        changeOrigin: true,\r\n-        secure: true,\r\n-        headers: {\r\n-          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-        },\r\n-        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n-      },\r\n-      '/maps/place': {\r\n-        target: 'https://maps.googleapis.com',\r\n-        changeOrigin: true,\r\n-        secure: true,\r\n-        headers: {\r\n-          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n-        },\r\n-        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n-      },\r\n-      '/api': {\r\n-        target: 'http://localhost:5173',\r\n-        changeOrigin: true,\r\n-        secure: false,\r\n-        ws: true,\r\n-        rewrite: (path) => path.replace(/^\\/api/, '')\r\n-      }\r\n-    }\r\n-  },\r\n-  build: {\r\n-    rollupOptions: {\r\n-      output: {\r\n-        manualChunks: {\r\n-          'react-vendor': ['react', 'react-dom'],\r\n-          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n-        }\r\n-      }\r\n-    },\r\n-    chunkSizeWarningLimit: 1000\r\n-  },\r\n-  optimizeDeps: {\r\n-    include: [\r\n-      'lucide-react',\r\n-      'react',\r\n-      'react-dom',\r\n-      'react-router-dom',\r\n-      '@tanstack/react-query',\r\n-      '@supabase/ssr',\r\n-      '@supabase/supabase-js',\r\n-      '@supabase/gotrue-js'\r\n-    ]\r\n-  },\r\n-  envDir: './',\r\n-  envPrefix: 'VITE_',\r\n-  define: {\r\n-    'process.env': process.env,\r\n-    //'process.env': {},\r\n-    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n-    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n-    'process.browser': true,\r\n-    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n-    \r\n-  }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739303794787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n     },\r\n     strictPort: true,\r\n     open: true,\r\n     host: true,\r\n-    \r\n     watch: {\r\n       usePolling: true\r\n     },\r\n     headers: {\r\n"
                },
                {
                    "date": 1739303824737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n-import viteExpress from 'vite-express';\r\n+;\r\n \r\n \r\n export default defineConfig({\r\n   plugins: [react()],\r\n"
                },
                {
                    "date": 1739303830976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n import { defineConfig } from 'vite';\r\n import react from '@vitejs/plugin-react';\r\n import path from 'path';\r\n-;\r\n \r\n-\r\n export default defineConfig({\r\n   plugins: [react()],\r\n   resolve: {\r\n     alias: [\r\n"
                },
                {
                    "date": 1739311816930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,16 @@\n \r\n export default defineConfig({\r\n   plugins: [react()],\r\n   resolve: {\r\n-    alias: [\r\n-      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n-      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n-      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n-      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n-      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n-      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n-    ]\r\n+    alias: {\r\n+      '@': path.resolve(__dirname, './src'),\r\n+      '@lib': path.resolve(__dirname, './src/lib'),\r\n+      '@components': path.resolve(__dirname, './src/components'),\r\n+      '@types': path.resolve(__dirname, './src/types'),\r\n+      '@hooks': path.resolve(__dirname, './src/hooks'),\r\n+      '@contexts': path.resolve(__dirname, './src/contexts')\r\n+    }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n"
                },
                {
                    "date": 1739312005585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,18 +70,10 @@\n     },\r\n     chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n-    include: [\r\n-      'lucide-react',\r\n-      'react',\r\n-      'react-dom',\r\n-      'react-router-dom',\r\n-      '@tanstack/react-query',\r\n-      '@supabase/ssr',\r\n-      '@supabase/supabase-js',\r\n-      '@supabase/gotrue-js'\r\n-    ]\r\n+    exclude: ['react-dom/client'],\r\n+    include: ['react', 'react-dom']\r\n   },\r\n   envDir: './',\r\n   envPrefix: 'VITE_',\r\n   define: {\r\n"
                },
                {
                    "date": 1739312039939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,18 @@\n     },\r\n     chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n-    exclude: ['react-dom/client'],\r\n-    include: ['react', 'react-dom']\r\n+    include: [\r\n+      'lucide-react',\r\n+      'react',\r\n+      'react-dom',\r\n+      'react-router-dom',\r\n+      '@tanstack/react-query',\r\n+      '@supabase/ssr',\r\n+      '@supabase/supabase-js',\r\n+      '@supabase/gotrue-js'\r\n+    ]\r\n   },\r\n   envDir: './',\r\n   envPrefix: 'VITE_',\r\n   define: {\r\n"
                },
                {
                    "date": 1739312045150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n     },\r\n     chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n+    exclude: ['react-dom/client'],\r\n     include: [\r\n       'lucide-react',\r\n       'react',\r\n       'react-dom',\r\n"
                },
                {
                    "date": 1739312217742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     },\r\n     chunkSizeWarningLimit: 1000\r\n   },\r\n   optimizeDeps: {\r\n-    exclude: ['react-dom/client'],\r\n+    //exclude: ['react-dom/client'],\r\n     include: [\r\n       'lucide-react',\r\n       'react',\r\n       'react-dom',\r\n"
                },
                {
                    "date": 1739514192289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,19 +6,24 @@\n   plugins: [react()],\r\n   resolve: {\r\n     alias: {\r\n       '@': path.resolve(__dirname, './src'),\r\n+      '@components': path.resolve(__dirname, './src/components'),\r\n       '@lib': path.resolve(__dirname, './src/lib'),\r\n-      '@components': path.resolve(__dirname, './src/components'),\r\n       '@types': path.resolve(__dirname, './src/types'),\r\n       '@hooks': path.resolve(__dirname, './src/hooks'),\r\n-      '@contexts': path.resolve(__dirname, './src/contexts')\r\n+      '@utils': path.resolve(__dirname, './src/utils')\r\n     }\r\n   },\r\n   server: {\r\n     port: 5173,\r\n     hmr: {\r\n-      overlay: true,\r\n+      protocol: 'ws',\r\n+      host: 'localhost',\r\n+      port: 5173,\r\n+      clientPort: 5173,\r\n+      timeout: 120000,\r\n+      overlay: false\r\n     },\r\n     strictPort: true,\r\n     open: true,\r\n     host: true,\r\n"
                }
            ],
            "date": 1739006660995,
            "name": "Commit-0",
            "content": "import { defineConfig } from 'vite';\r\nimport react from '@vitejs/plugin-react';\r\nimport path from 'path';\r\nimport viteExpress from 'vite-express';\r\n\r\n\r\nexport default defineConfig({\r\n  plugins: [\r\n    react(),\r\n    {\r\n      name: 'vite-express-custom',\r\n      configureServer(server) {\r\n        server.middlewares.use('/api/process-image', (req, res) => {\r\n          require('./src/api/process-image').default(req, res);\r\n        });\r\n      }\r\n    }\r\n  ],\r\n  resolve: {\r\n    alias: [\r\n      { find: '@', replacement: path.resolve(__dirname, './src') },\r\n      { find: '@components', replacement: path.resolve(__dirname, './src/components') },\r\n      { find: '@lib', replacement: path.resolve(__dirname, './src/lib') },\r\n      { find: '@hooks', replacement: path.resolve(__dirname, './src/hooks') },\r\n      { find: '@pages', replacement: path.resolve(__dirname, './src/pages') },\r\n      { find: '@types', replacement: path.resolve(__dirname, './src/types') }\r\n    ]\r\n  },\r\n  server: {\r\n    port: 5173,\r\n    hmr: {\r\n      overlay: true,\r\n    },\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',\r\n      'Cross-Origin-Resource-Policy': 'cross-origin'\r\n    },\r\n    proxy: {\r\n      '/maps/api': {\r\n        target: 'https://maps.googleapis.com',\r\n        changeOrigin: true,\r\n        secure: true,\r\n        headers: {\r\n          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n        },\r\n        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n      },\r\n      '/maps/place': {\r\n        target: 'https://maps.googleapis.com',\r\n        changeOrigin: true,\r\n        secure: true,\r\n        headers: {\r\n          'Cross-Origin-Resource-Policy': 'cross-origin'\r\n        },\r\n        rewrite: (path) => path.replace(/^\\/maps/, '')\r\n      },\r\n      '/api': {\r\n        target: 'http://localhost:5173',\r\n        changeOrigin: true,\r\n        secure: false,\r\n        ws: true,\r\n        rewrite: (path) => path.replace(/^\\/api/, '')\r\n      }\r\n    }\r\n  },\r\n  build: {\r\n    rollupOptions: {\r\n      output: {\r\n        manualChunks: {\r\n          'react-vendor': ['react', 'react-dom'],\r\n          'ui-vendor': ['@tanstack/react-query', 'lucide-react'],\r\n        }\r\n      }\r\n    },\r\n    chunkSizeWarningLimit: 1000\r\n  },\r\n  optimizeDeps: {\r\n    include: [\r\n      'lucide-react',\r\n      'react',\r\n      'react-dom',\r\n      'react-router-dom',\r\n      '@tanstack/react-query',\r\n      '@supabase/ssr',\r\n      '@supabase/supabase-js',\r\n      '@supabase/gotrue-js'\r\n    ]\r\n  },\r\n  envDir: './',\r\n  envPrefix: 'VITE_',\r\n  define: {\r\n    'process.env': process.env,\r\n    //'process.env': {},\r\n    __GOOGLE_MAPS_API_KEY__: JSON.stringify(process.env.VITE_GOOGLE_MAPS_API_KEY),\r\n    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\r\n    'process.browser': true,\r\n    'import.meta.env.DEV': JSON.stringify(process.env.NODE_ENV === 'development'),\r\n    \r\n  }\r\n});"
        }
    ]
}