{
    "sourceFile": "scripts/setup-fish-speech.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1739014929347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739014979297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,82 @@\n- \n\\ No newline at end of file\n+import { execSync } from 'child_process';\n+import { fileURLToPath } from 'url';\n+import { dirname, join } from 'path';\n+import { existsSync, mkdirSync } from 'fs';\n+\n+// Get __dirname equivalent in ES modules\n+const __filename = fileURLToPath(import.meta.url);\n+const __dirname = dirname(__filename);\n+\n+// Configuration\n+const REPO_URL = 'https://github.com/fishaudio/fish-speech.git';\n+const FISH_SPEECH_DIR = join(__dirname, '../fish-speech');\n+const VENV_DIR = join(FISH_SPEECH_DIR, 'venv');\n+const MODELS_DIR = join(FISH_SPEECH_DIR, 'models');\n+\n+// Helper function to run commands\n+function runCommand(command, options = {}) {\n+try {\n+    execSync(command, { stdio: 'inherit', ...options });\n+} catch (error) {\n+    console.error(`Error running command: ${command}`);\n+    console.error(error);\n+    process.exit(1);\n+}\n+}\n+\n+// Main setup function\n+async function setup() {\n+console.log('Setting up Fish Speech...');\n+\n+// Clone repository if it doesn't exist\n+if (!existsSync(FISH_SPEECH_DIR)) {\n+    console.log('\\nCloning Fish Speech repository...');\n+    runCommand(`git clone ${REPO_URL} \"${FISH_SPEECH_DIR}\"`);\n+} else {\n+    console.log('\\nFish Speech repository already exists. Pulling latest changes...');\n+    runCommand('git pull', { cwd: FISH_SPEECH_DIR });\n+}\n+\n+// Create virtual environment\n+console.log('\\nCreating Python virtual environment...');\n+if (!existsSync(VENV_DIR)) {\n+    runCommand('python -m venv venv', { cwd: FISH_SPEECH_DIR });\n+}\n+\n+// Install the package in development mode\n+console.log('\\nInstalling Fish Speech package...');\n+const activateCmd = process.platform === 'win32' \n+    ? 'venv\\\\Scripts\\\\activate' \n+    : 'source venv/bin/activate';\n+\n+runCommand(`${activateCmd} && pip install -e .`, { \n+    cwd: FISH_SPEECH_DIR,\n+    shell: true \n+});\n+\n+// Create models directory\n+if (!existsSync(MODELS_DIR)) {\n+    mkdirSync(MODELS_DIR, { recursive: true });\n+}\n+\n+// Download models using the correct module path\n+console.log('\\nDownloading Fish Speech models...');\n+runCommand(`${activateCmd} && python -m fish_speech.cli.download_models`, {\n+    cwd: FISH_SPEECH_DIR,\n+    shell: true\n+});\n+\n+console.log('\\nSetup completed successfully!');\n+console.log('\\nNext steps:');\n+console.log('1. Make sure you have a CUDA-compatible GPU (or use CPU mode)');\n+console.log('2. Update your .env file with the correct paths:');\n+console.log(`   VITE_FISH_SPEECH_PYTHON_PATH=${join(VENV_DIR, process.platform === 'win32' ? 'Scripts\\\\python.exe' : 'bin/python')}`);\n+console.log(`   VITE_FISH_SPEECH_MODEL_PATH=${MODELS_DIR}`);\n+console.log('3. Start your application with: npm run dev');\n+}\n+\n+// Run setup\n+setup().catch(error => {\n+console.error('Setup failed:', error);\n+process.exit(1);\n+}); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1739015046304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,15 +42,15 @@\n if (!existsSync(VENV_DIR)) {\n     runCommand('python -m venv venv', { cwd: FISH_SPEECH_DIR });\n }\n \n-// Install the package in development mode\n-console.log('\\nInstalling Fish Speech package...');\n+// Activate virtual environment and install dependencies\n+console.log('\\nInstalling Python dependencies...');\n const activateCmd = process.platform === 'win32' \n     ? 'venv\\\\Scripts\\\\activate' \n     : 'source venv/bin/activate';\n \n-runCommand(`${activateCmd} && pip install -e .`, { \n+runCommand(`${activateCmd} && pip install -r requirements.txt`, { \n     cwd: FISH_SPEECH_DIR,\n     shell: true \n });\n \n@@ -58,9 +58,9 @@\n if (!existsSync(MODELS_DIR)) {\n     mkdirSync(MODELS_DIR, { recursive: true });\n }\n \n-// Download models using the correct module path\n+// Download models\n console.log('\\nDownloading Fish Speech models...');\n runCommand(`${activateCmd} && python -m fish_speech.cli.download_models`, {\n     cwd: FISH_SPEECH_DIR,\n     shell: true\n"
                },
                {
                    "date": 1739015241157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,15 +42,15 @@\n if (!existsSync(VENV_DIR)) {\n     runCommand('python -m venv venv', { cwd: FISH_SPEECH_DIR });\n }\n \n-// Activate virtual environment and install dependencies\n-console.log('\\nInstalling Python dependencies...');\n+// Install the package in development mode\n+console.log('\\nInstalling Fish Speech package...');\n const activateCmd = process.platform === 'win32' \n     ? 'venv\\\\Scripts\\\\activate' \n     : 'source venv/bin/activate';\n \n-runCommand(`${activateCmd} && pip install -r requirements.txt`, { \n+runCommand(`${activateCmd} && pip install -e .`, { \n     cwd: FISH_SPEECH_DIR,\n     shell: true \n });\n \n@@ -58,9 +58,9 @@\n if (!existsSync(MODELS_DIR)) {\n     mkdirSync(MODELS_DIR, { recursive: true });\n }\n \n-// Download models\n+// Download models using the correct module path\n console.log('\\nDownloading Fish Speech models...');\n runCommand(`${activateCmd} && python -m fish_speech.cli.download_models`, {\n     cwd: FISH_SPEECH_DIR,\n     shell: true\n"
                },
                {
                    "date": 1739442713592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,30 +43,41 @@\n     runCommand('python -m venv venv', { cwd: FISH_SPEECH_DIR });\n }\n \n // Install the package in development mode\n-console.log('\\nInstalling Fish Speech package...');\n-const activateCmd = process.platform === 'win32' \n-    ? 'venv\\\\Scripts\\\\activate' \n-    : 'source venv/bin/activate';\n+try {\n+  console.log('Installing Fish Speech package...');\n+  execSync('pip install -e .', { \n+    cwd: './fish-speech',\n+    stdio: 'inherit'\n+  });\n \n-runCommand(`${activateCmd} && pip install -e .`, { \n-    cwd: FISH_SPEECH_DIR,\n-    shell: true \n-});\n+  console.log('Downloading Fish Speech models...');\n+  // Add error handling and verification\n+  try {\n+    execSync('python -c \"from fish_speech.cli import download_models\"', {\n+      cwd: './fish-speech',\n+      stdio: 'inherit'\n+    });\n+    \n+    execSync('python -m fish_speech.cli.download_models', {\n+      cwd: './fish-speech', \n+      stdio: 'inherit'\n+    });\n+  } catch (err) {\n+    console.warn('Warning: Could not download models automatically.');\n+    console.log('Please run: cd fish-speech && python -m fish_speech.cli.download_models');\n+  }\n+} catch (err) {\n+  console.error('Error:', err.message);\n+  process.exit(1);\n+}\n \n // Create models directory\n if (!existsSync(MODELS_DIR)) {\n     mkdirSync(MODELS_DIR, { recursive: true });\n }\n \n-// Download models using the correct module path\n-console.log('\\nDownloading Fish Speech models...');\n-runCommand(`${activateCmd} && python -m fish_speech.cli.download_models`, {\n-    cwd: FISH_SPEECH_DIR,\n-    shell: true\n-});\n-\n console.log('\\nSetup completed successfully!');\n console.log('\\nNext steps:');\n console.log('1. Make sure you have a CUDA-compatible GPU (or use CPU mode)');\n console.log('2. Update your .env file with the correct paths:');\n"
                }
            ],
            "date": 1739014929347,
            "name": "Commit-0",
            "content": " "
        }
    ]
}