{
    "sourceFile": "fix-unused-imports.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740850848915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740850881569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n // Script to fix unused imports using ESLint\r\n-const { execSync } = require('child_process');\r\n-const fs = require('fs');\r\n-const path = require('path');\r\n+import { execSync } from 'child_process';\r\n+import fs from 'fs';\r\n+import path from 'path';\r\n \r\n console.log('üîç Fixing unused imports and declarations using ESLint...');\r\n \r\n // Define source directories to check\r\n"
                }
            ],
            "date": 1740850848915,
            "name": "Commit-0",
            "content": "// Script to fix unused imports using ESLint\r\nconst { execSync } = require('child_process');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconsole.log('üîç Fixing unused imports and declarations using ESLint...');\r\n\r\n// Define source directories to check\r\nconst sourceDirs = [\r\n  'src'\r\n];\r\n\r\ntry {\r\n  // Run ESLint with --fix option to automatically fix unused imports\r\n  sourceDirs.forEach(dir => {\r\n    if (fs.existsSync(dir)) {\r\n      console.log(`Processing ${dir} directory...`);\r\n      try {\r\n        execSync(`npx eslint ${dir} --ext .ts,.tsx --fix --rule \"no-unused-vars: error\" --rule \"@typescript-eslint/no-unused-vars: error\"`, \r\n          { stdio: 'inherit' });\r\n      } catch (error) {\r\n        // ESLint might exit with code 1 if it finds errors it can't fix\r\n        console.log(`Some issues in ${dir} couldn't be automatically fixed.`);\r\n      }\r\n    } else {\r\n      console.log(`Directory ${dir} not found, skipping...`);\r\n    }\r\n  });\r\n\r\n  console.log('‚úÖ Completed fixing unused imports!');\r\n  console.log('Some issues may require manual fixes. Please run the build to verify.');\r\n} catch (error) {\r\n  console.error('‚ùå Error occurred:', error.message);\r\n  process.exit(1);\r\n} "
        }
    ]
}