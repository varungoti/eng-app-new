{
    "sourceFile": "src/utils/spacedRepetition.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1740743208290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1740743208290,
            "name": "Commit-0",
            "content": "import { Question } from '@/types';\r\n\r\nconst INITIAL_INTERVAL = 1; // 1 day\r\nconst EASY_FACTOR = 2.5;\r\nconst HARD_FACTOR = 1.5;\r\n\r\nexport function calculateNextReviewDate(question: Question, wasCorrect: boolean): Date {\r\n  const now = new Date();\r\n  let interval = question.interval || INITIAL_INTERVAL;\r\n  let easeFactor = question.easeFactor || 2.5;\r\n\r\n  if (wasCorrect) {\r\n    interval *= easeFactor;\r\n    easeFactor = Math.min(easeFactor * EASY_FACTOR, 2.5);\r\n  } else {\r\n    interval = INITIAL_INTERVAL;\r\n    easeFactor = Math.max(1.3, easeFactor * HARD_FACTOR);\r\n  }\r\n\r\n  question.interval = interval;\r\n  question.easeFactor = easeFactor;\r\n\r\n  const nextReviewDate = new Date(now.getTime() + interval * 24 * 60 * 60 * 1000);\r\n  return nextReviewDate;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const calculateNextReviewDate = (\r\n  lastReviewDate: Date,\r\n  correctStreak: number\r\n): Date => {\r\n  const days = Math.pow(2, correctStreak - 1);\r\n  const nextDate = new Date(lastReviewDate);\r\n  nextDate.setDate(nextDate.getDate() + days);\r\n  return nextDate;\r\n}; "
        }
    ]
}