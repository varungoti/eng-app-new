{
    "sourceFile": "src/app/content-management/components/exercise-prompt-card.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1739691558549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739691607906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n   // Ensure default values for all fields\r\n   const safePrompt = {\r\n     ...prompt,\r\n     text: prompt.text || '',\r\n-    type: (prompt.type as ExercisePromptType) || 'text',\r\n+    type: prompt.type || 'text',\r\n     narration: prompt.narration || '',\r\n     saytext: prompt.saytext || '',\r\n     media: prompt.media || ''\r\n   };\r\n"
                },
                {
                    "date": 1739691630126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { logger } from '@/lib/logger';\r\n import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n import { Icon } from '@/components/ui/icons';\r\n \r\n-type ExercisePromptType = 'text' | 'image' | 'video' | 'audio';\r\n+type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n \r\n export const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n   prompt,\r\n   promptIndex,\r\n@@ -33,9 +33,9 @@\n     };\r\n   }, []);\r\n \r\n   const handleFieldChange = async (field: string, value: string) => {\r\n-    if (field === 'type' && !['text', 'image', 'video', 'audio'].includes(value)) {\r\n+    if (field === 'type' && !['text', 'image', 'video', 'audio', 'practice', 'exercise'].includes(value)) {\r\n       console.error('Invalid type value:', value);\r\n       return;\r\n     }\r\n     \r\n@@ -121,9 +121,9 @@\n   // Ensure default values for all fields\r\n   const safePrompt = {\r\n     ...prompt,\r\n     text: prompt.text || '',\r\n-    type: prompt.type || 'text',\r\n+    type: (prompt.type as ExercisePromptType) || 'practice',\r\n     narration: prompt.narration || '',\r\n     saytext: prompt.saytext || '',\r\n     media: prompt.media || ''\r\n   };\r\n"
                },
                {
                    "date": 1739692020285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,20 @@\n import { Icon } from '@/components/ui/icons';\r\n \r\n type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n \r\n+// Add interface for the prompt structure\r\n+interface ExercisePrompt {\r\n+  id?: string;\r\n+  text: string;\r\n+  type: ExercisePromptType;\r\n+  media?: string | null;\r\n+  narration?: string | null;\r\n+  saytext?: string | null;\r\n+  question_id?: string | null;\r\n+  order_index: number;\r\n+}\r\n+\r\n export const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n   prompt,\r\n   promptIndex,\r\n   onRemove,\r\n@@ -117,16 +129,19 @@\n     \r\n     return null;\r\n   };\r\n \r\n-  // Ensure default values for all fields\r\n-  const safePrompt = {\r\n+  // Update the safePrompt initialization with more thorough defaults\r\n+  const safePrompt: ExercisePrompt = {\r\n     ...prompt,\r\n-    text: prompt.text || '',\r\n-    type: (prompt.type as ExercisePromptType) || 'practice',\r\n-    narration: prompt.narration || '',\r\n-    saytext: prompt.saytext || '',\r\n-    media: prompt.media || ''\r\n+    id: prompt?.id || undefined,\r\n+    text: prompt?.text || '',\r\n+    type: (prompt?.type as ExercisePromptType) || 'practice',\r\n+    media: prompt?.media || '',\r\n+    narration: prompt?.narration || '',\r\n+    saytext: prompt?.saytext || '',\r\n+    question_id: prompt?.question_id || null,\r\n+    order_index: promptIndex\r\n   };\r\n \r\n   return (\r\n     <Card className={cn(\r\n"
                },
                {
                    "date": 1739692076153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n                       {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                     </div>\r\n                   </div>\r\n                   <Input\r\n-                    value={safePrompt.media}\r\n+                    value={safePrompt.media || ''}\r\n                     onChange={(e) => handleFieldChange('media', e.target.value)}\r\n                     placeholder=\"Enter media URL\"\r\n                   />\r\n                   {safePrompt.media && renderMediaPreview(safePrompt.media)}\r\n"
                },
                {
                    "date": 1739692081532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                       {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                     </div>\r\n                   </div>\r\n                   <Input\r\n-                    value={safePrompt.narration}\r\n+                    value={safePrompt.narration || ''}\r\n                     onChange={(e) => handleFieldChange('narration', e.target.value)}\r\n                     placeholder=\"Enter narration text\"\r\n                   />\r\n                 </div>\r\n@@ -251,9 +251,9 @@\n                       {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                     </div>\r\n                   </div>\r\n                   <Input\r\n-                    value={safePrompt.saytext}\r\n+                    value={safePrompt.saytext || ''}\r\n                     onChange={(e) => handleFieldChange('saytext', e.target.value)}\r\n                     placeholder=\"Enter text to say\"\r\n                   />\r\n                 </div>\r\n"
                },
                {
                    "date": 1739906950872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n   narration?: string | null;\r\n   saytext?: string | null;\r\n   question_id?: string | null;\r\n   order_index: number;\r\n+  created_at?: string;\r\n+  updated_at?: string;\r\n }\r\n \r\n export const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n   prompt,\r\n"
                },
                {
                    "date": 1739907247616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,20 @@\n \"use client\";\r\n \r\n import { useState, useRef, useEffect } from 'react';\r\n-import { Card, CardContent, CardHeader } from '@/components/ui/card';\r\n+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n import { Label } from '@/components/ui/label';\r\n import { Input } from '@/components/ui/input';\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Button } from '@/components/ui/button';\r\n-import { ChevronDown, ChevronRight, HomeIcon } from 'lucide-react';\r\n+import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle } from 'lucide-react';\r\n import { ExercisePromptCardProps } from '../types';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n import { cn } from '@/lib/utils';\r\n import { logger } from '@/lib/logger';\r\n import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n import { Icon } from '@/components/ui/icons';\r\n+import { Badge } from '@/components/ui/badge';\r\n \r\n type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n \r\n // Add interface for the prompt structure\r\n@@ -29,13 +30,143 @@\n   created_at?: string;\r\n   updated_at?: string;\r\n }\r\n \r\n+interface ViewModeProps {\r\n+  prompt: ExercisePrompt;\r\n+  promptIndex: number;\r\n+}\r\n+\r\n+const ViewMode: React.FC<ViewModeProps> = ({ prompt, promptIndex }) => {\r\n+  const [isMediaExpanded, setIsMediaExpanded] = useState(false);\r\n+\r\n+  return (\r\n+    <motion.div\r\n+      initial={{ opacity: 0, y: 20 }}\r\n+      animate={{ opacity: 1, y: 0 }}\r\n+      transition={{ duration: 0.3 }}\r\n+      className=\"relative\"\r\n+    >\r\n+      <Card className=\"group overflow-hidden bg-gradient-to-br from-background/50 to-background backdrop-blur-sm border-primary/10 hover:border-primary/20 transition-all duration-300\">\r\n+        <CardHeader className=\"relative overflow-hidden\">\r\n+          {/* Floating Index Badge */}\r\n+          <motion.div\r\n+            initial={{ scale: 0 }}\r\n+            animate={{ scale: 1 }}\r\n+            className=\"absolute top-4 left-4 z-10\"\r\n+          >\r\n+            <Badge \r\n+              variant=\"outline\" \r\n+              className=\"bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1\"\r\n+            >\r\n+              Exercise {promptIndex + 1}\r\n+            </Badge>\r\n+          </motion.div>\r\n+\r\n+          {/* Media Section */}\r\n+          {prompt.media && (\r\n+            <motion.div \r\n+              layoutId={`media-${prompt.id}`}\r\n+              className={cn(\r\n+                \"relative rounded-lg overflow-hidden\",\r\n+                isMediaExpanded ? \"h-[400px]\" : \"h-[200px]\"\r\n+              )}\r\n+            >\r\n+              {prompt.type === 'image' && (\r\n+                <img\r\n+                  src={prompt.media}\r\n+                  alt={prompt.text}\r\n+                  className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\r\n+                />\r\n+              )}\r\n+              {prompt.type === 'video' && (\r\n+                <video\r\n+                  src={prompt.media}\r\n+                  controls\r\n+                  className=\"w-full h-full object-cover\"\r\n+                />\r\n+              )}\r\n+              \r\n+              {/* Expand/Collapse Button */}\r\n+              <Button\r\n+                variant=\"ghost\"\r\n+                size=\"icon\"\r\n+                className=\"absolute bottom-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-background\"\r\n+                onClick={() => setIsMediaExpanded(!isMediaExpanded)}\r\n+              >\r\n+                {isMediaExpanded ? (\r\n+                  <Minimize2 className=\"h-4 w-4\" />\r\n+                ) : (\r\n+                  <Maximize2 className=\"h-4 w-4\" />\r\n+                )}\r\n+              </Button>\r\n+            </motion.div>\r\n+          )}\r\n+\r\n+          {/* Main Content */}\r\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-4\")}>\r\n+            <motion.div\r\n+              initial={{ opacity: 0 }}\r\n+              animate={{ opacity: 1 }}\r\n+              transition={{ delay: 0.2 }}\r\n+            >\r\n+              <CardTitle className=\"text-xl font-semibold leading-tight\">\r\n+                {prompt.text}\r\n+              </CardTitle>\r\n+            </motion.div>\r\n+          </div>\r\n+        </CardHeader>\r\n+\r\n+        <CardContent className=\"space-y-6\">\r\n+          {/* Narration Section */}\r\n+          {prompt.narration && (\r\n+            <motion.div\r\n+              initial={{ opacity: 0, y: 10 }}\r\n+              animate={{ opacity: 1, y: 0 }}\r\n+              transition={{ delay: 0.3 }}\r\n+              className=\"relative group\"\r\n+            >\r\n+              <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-primary/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n+              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n+                <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n+                  <Volume2 className=\"h-4 w-4\" />\r\n+                  <h4 className=\"font-medium\">Narration</h4>\r\n+                </div>\r\n+                <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n+              </div>\r\n+            </motion.div>\r\n+          )}\r\n+\r\n+          {/* Say Text Section */}\r\n+          {prompt.saytext && (\r\n+            <motion.div\r\n+              initial={{ opacity: 0, y: 10 }}\r\n+              animate={{ opacity: 1, y: 0 }}\r\n+              transition={{ delay: 0.4 }}\r\n+              className=\"relative group\"\r\n+            >\r\n+              <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-primary/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n+              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n+                <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n+                  <MessageCircle className=\"h-4 w-4\" />\r\n+                  <h4 className=\"font-medium\">Say Text</h4>\r\n+                </div>\r\n+                <p className=\"text-muted-foreground\">{prompt.saytext}</p>\r\n+              </div>\r\n+            </motion.div>\r\n+          )}\r\n+        </CardContent>\r\n+      </Card>\r\n+    </motion.div>\r\n+  );\r\n+};\r\n+\r\n export const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n   prompt,\r\n   promptIndex,\r\n   onRemove,\r\n-  onUpdate\r\n+  onUpdate,\r\n+  viewMode = false\r\n }) => {\r\n   const [isExpanded, setIsExpanded] = useState(false);\r\n   const [isSaving, setIsSaving] = useState(false);\r\n   const [lastSaved, setLastSaved] = useState<'success' | 'error' | null>(null);\r\n@@ -144,9 +275,11 @@\n     question_id: prompt?.question_id || null,\r\n     order_index: promptIndex\r\n   };\r\n \r\n-  return (\r\n+  return viewMode ? (\r\n+    <ViewMode prompt={safePrompt} promptIndex={promptIndex} />\r\n+  ) : (\r\n     <Card className={cn(\r\n       \"border-l-4 transition-colors duration-200\",\r\n       isExpanded ? \"border-l-primary\" : \"border-l-primary/40 hover:border-l-primary\"\r\n     )}>\r\n"
                },
                {
                    "date": 1739907940577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,11 +275,9 @@\n     question_id: prompt?.question_id || null,\r\n     order_index: promptIndex\r\n   };\r\n \r\n-  return viewMode ? (\r\n-    <ViewMode prompt={safePrompt} promptIndex={promptIndex} />\r\n-  ) : (\r\n+  return (\r\n     <Card className={cn(\r\n       \"border-l-4 transition-colors duration-200\",\r\n       isExpanded ? \"border-l-primary\" : \"border-l-primary/40 hover:border-l-primary\"\r\n     )}>\r\n"
                },
                {
                    "date": 1739907967249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Label } from '@/components/ui/label';\r\n import { Input } from '@/components/ui/input';\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Button } from '@/components/ui/button';\r\n-import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle } from 'lucide-react';\r\n+import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock } from 'lucide-react';\r\n import { ExercisePromptCardProps } from '../types';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n import { cn } from '@/lib/utils';\r\n import { logger } from '@/lib/logger';\r\n@@ -45,53 +45,62 @@\n       animate={{ opacity: 1, y: 0 }}\r\n       transition={{ duration: 0.3 }}\r\n       className=\"relative\"\r\n     >\r\n-      <Card className=\"group overflow-hidden bg-gradient-to-br from-background/50 to-background backdrop-blur-sm border-primary/10 hover:border-primary/20 transition-all duration-300\">\r\n-        <CardHeader className=\"relative overflow-hidden\">\r\n-          {/* Floating Index Badge */}\r\n+      <Card className=\"group overflow-hidden hover:shadow-xl transition-all duration-500 ease-in-out transform hover:-translate-y-1\">\r\n+        {/* Glowing border effect */}\r\n+        <div className=\"absolute inset-0 bg-gradient-to-r from-primary/30 via-secondary/30 to-primary/30 opacity-0 group-hover:opacity-100 animate-gradient-xy transition-opacity duration-500\" />\r\n+        \r\n+        <CardHeader className=\"relative overflow-hidden backdrop-blur-md\">\r\n+          {/* Floating badge with shine effect */}\r\n           <motion.div\r\n             initial={{ scale: 0 }}\r\n             animate={{ scale: 1 }}\r\n             className=\"absolute top-4 left-4 z-10\"\r\n           >\r\n             <Badge \r\n               variant=\"outline\" \r\n-              className=\"bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1\"\r\n+              className=\"relative overflow-hidden bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1 before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent\"\r\n             >\r\n               Exercise {promptIndex + 1}\r\n             </Badge>\r\n           </motion.div>\r\n \r\n-          {/* Media Section */}\r\n+          {/* Media Section with hover effects */}\r\n           {prompt.media && (\r\n             <motion.div \r\n               layoutId={`media-${prompt.id}`}\r\n               className={cn(\r\n-                \"relative rounded-lg overflow-hidden\",\r\n+                \"relative rounded-lg overflow-hidden group/media\",\r\n                 isMediaExpanded ? \"h-[400px]\" : \"h-[200px]\"\r\n               )}\r\n             >\r\n               {prompt.type === 'image' && (\r\n-                <img\r\n-                  src={prompt.media}\r\n-                  alt={prompt.text}\r\n-                  className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\r\n-                />\r\n+                <div className=\"relative overflow-hidden\">\r\n+                  <img\r\n+                    src={prompt.media}\r\n+                    alt={prompt.text}\r\n+                    className=\"w-full h-full object-cover transition-all duration-500 group-hover/media:scale-110\"\r\n+                  />\r\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\r\n+                </div>\r\n               )}\r\n               {prompt.type === 'video' && (\r\n-                <video\r\n-                  src={prompt.media}\r\n-                  controls\r\n-                  className=\"w-full h-full object-cover\"\r\n-                />\r\n+                <div className=\"relative\">\r\n+                  <video\r\n+                    src={prompt.media}\r\n+                    controls\r\n+                    className=\"w-full h-full object-cover\"\r\n+                  />\r\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n+                </div>\r\n               )}\r\n               \r\n-              {/* Expand/Collapse Button */}\r\n+              {/* Floating control button with hover effect */}\r\n               <Button\r\n                 variant=\"ghost\"\r\n                 size=\"icon\"\r\n-                className=\"absolute bottom-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-background\"\r\n+                className=\"absolute bottom-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-primary hover:text-white transform hover:scale-110 transition-all duration-300 ease-out\"\r\n                 onClick={() => setIsMediaExpanded(!isMediaExpanded)}\r\n               >\r\n                 {isMediaExpanded ? (\r\n                   <Minimize2 className=\"h-4 w-4\" />\r\n@@ -101,61 +110,83 @@\n               </Button>\r\n             </motion.div>\r\n           )}\r\n \r\n-          {/* Main Content */}\r\n+          {/* Main Content with animated underline */}\r\n           <div className={cn(\"space-y-4\", prompt.media && \"mt-4\")}>\r\n             <motion.div\r\n               initial={{ opacity: 0 }}\r\n               animate={{ opacity: 1 }}\r\n               transition={{ delay: 0.2 }}\r\n+              className=\"relative\"\r\n             >\r\n-              <CardTitle className=\"text-xl font-semibold leading-tight\">\r\n+              <CardTitle className=\"text-xl font-semibold leading-tight relative inline-block\">\r\n                 {prompt.text}\r\n+                <span className=\"absolute bottom-0 left-0 w-full h-0.5 bg-primary transform scale-x-0 transition-transform duration-300 group-hover:scale-x-100\" />\r\n               </CardTitle>\r\n             </motion.div>\r\n           </div>\r\n         </CardHeader>\r\n \r\n         <CardContent className=\"space-y-6\">\r\n-          {/* Narration Section */}\r\n+          {/* Narration Section with hover lift effect */}\r\n           {prompt.narration && (\r\n             <motion.div\r\n               initial={{ opacity: 0, y: 10 }}\r\n               animate={{ opacity: 1, y: 0 }}\r\n               transition={{ delay: 0.3 }}\r\n-              className=\"relative group\"\r\n+              className=\"relative group/narration\"\r\n             >\r\n-              <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-primary/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n-              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n+              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\">\r\n                 <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n-                  <Volume2 className=\"h-4 w-4\" />\r\n+                  <Volume2 className=\"h-4 w-4 animate-pulse\" />\r\n                   <h4 className=\"font-medium\">Narration</h4>\r\n                 </div>\r\n-                <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n+                <p className=\"text-muted-foreground relative z-10\">{prompt.narration}</p>\r\n+                <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 via-secondary/5 to-primary/5 rounded-lg opacity-0 group-hover/narration:opacity-100 transition-opacity duration-300\" />\r\n               </div>\r\n             </motion.div>\r\n           )}\r\n \r\n-          {/* Say Text Section */}\r\n+          {/* Say Text Section with floating effect */}\r\n           {prompt.saytext && (\r\n             <motion.div\r\n               initial={{ opacity: 0, y: 10 }}\r\n               animate={{ opacity: 1, y: 0 }}\r\n               transition={{ delay: 0.4 }}\r\n-              className=\"relative group\"\r\n+              className=\"relative group/saytext\"\r\n             >\r\n-              <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-primary/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n-              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n+              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:shadow-xl\">\r\n                 <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n-                  <MessageCircle className=\"h-4 w-4\" />\r\n+                  <MessageCircle className=\"h-4 w-4 group-hover/saytext:animate-bounce\" />\r\n                   <h4 className=\"font-medium\">Say Text</h4>\r\n                 </div>\r\n                 <p className=\"text-muted-foreground\">{prompt.saytext}</p>\r\n+                <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-secondary/5 rounded-lg opacity-0 group-hover/saytext:opacity-100 transition-opacity duration-300\" />\r\n               </div>\r\n             </motion.div>\r\n           )}\r\n         </CardContent>\r\n+\r\n+        {/* Interactive footer with stats or metadata */}\r\n+        <motion.div\r\n+          initial={{ opacity: 0 }}\r\n+          animate={{ opacity: 1 }}\r\n+          transition={{ delay: 0.5 }}\r\n+          className=\"px-6 pb-6 pt-0 flex items-center justify-between text-sm text-muted-foreground\"\r\n+        >\r\n+          <span className=\"flex items-center gap-2\">\r\n+            <Clock className=\"h-4 w-4\" />\r\n+            {prompt.created_at && new Date(prompt.created_at).toLocaleDateString()}\r\n+          </span>\r\n+          <div className=\"flex items-center gap-4\">\r\n+            {prompt.type && (\r\n+              <Badge variant=\"outline\" className=\"bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\r\n+                {prompt.type}\r\n+              </Badge>\r\n+            )}\r\n+          </div>\r\n+        </motion.div>\r\n       </Card>\r\n     </motion.div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1739907999506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,17 @@\n import { Label } from '@/components/ui/label';\r\n import { Input } from '@/components/ui/input';\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Button } from '@/components/ui/button';\r\n-import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock } from 'lucide-react';\r\n+import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock, PlayCircle, FileText, Video, HelpCircle } from 'lucide-react';\r\n import { ExercisePromptCardProps } from '../types';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n import { cn } from '@/lib/utils';\r\n import { logger } from '@/lib/logger';\r\n-import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n+import { ImageIcon } from 'lucide-react';\r\n import { Icon } from '@/components/ui/icons';\r\n import { Badge } from '@/components/ui/badge';\r\n+import { Progress } from '@/components/ui/progress';\r\n \r\n type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n \r\n // Add interface for the prompt structure\r\n@@ -28,8 +29,9 @@\n   question_id?: string | null;\r\n   order_index: number;\r\n   created_at?: string;\r\n   updated_at?: string;\r\n+  metadata?: { estimatedTime: number };\r\n }\r\n \r\n interface ViewModeProps {\r\n   prompt: ExercisePrompt;\r\n@@ -164,29 +166,61 @@\n                 <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-secondary/5 rounded-lg opacity-0 group-hover/saytext:opacity-100 transition-opacity duration-300\" />\r\n               </div>\r\n             </motion.div>\r\n           )}\r\n+\r\n+          {/* Add action buttons with the new animated style */}\r\n+          <div className=\"flex items-center gap-4 pt-4\">\r\n+            <button className=\"animated-button\">\r\n+              <span className=\"animated-button-content\">\r\n+                <PlayCircle className=\"h-5 w-5\" />\r\n+                Start Exercise\r\n+              </span>\r\n+            </button>\r\n+            \r\n+            {prompt.type === 'video' && (\r\n+              <button className=\"animated-button\">\r\n+                <span className=\"animated-button-content\">\r\n+                  <Video className=\"h-5 w-5\" />\r\n+                  Watch Tutorial\r\n+                </span>\r\n+              </button>\r\n+            )}\r\n+            \r\n+            {prompt.narration && (\r\n+              <button className=\"animated-button\">\r\n+                <span className=\"animated-button-content\">\r\n+                  <Volume2 className=\"h-5 w-5\" />\r\n+                  Listen\r\n+                </span>\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+          \r\n+          {/* Progress indicator */}\r\n+          <div className=\"mt-6\">\r\n+            <div className=\"flex items-center justify-between mb-2\">\r\n+              <span className=\"text-sm font-medium text-muted-foreground\">Progress</span>\r\n+              <span className=\"text-sm font-medium text-primary\">0%</span>\r\n+            </div>\r\n+            <Progress value={0} className=\"h-2\" />\r\n+          </div>\r\n         </CardContent>\r\n \r\n-        {/* Interactive footer with stats or metadata */}\r\n-        <motion.div\r\n-          initial={{ opacity: 0 }}\r\n-          animate={{ opacity: 1 }}\r\n-          transition={{ delay: 0.5 }}\r\n-          className=\"px-6 pb-6 pt-0 flex items-center justify-between text-sm text-muted-foreground\"\r\n-        >\r\n-          <span className=\"flex items-center gap-2\">\r\n+        {/* Interactive footer with metadata */}\r\n+        <div className=\"px-6 pb-6 flex items-center justify-between text-sm\">\r\n+          <div className=\"flex items-center gap-2 text-muted-foreground\">\r\n             <Clock className=\"h-4 w-4\" />\r\n-            {prompt.created_at && new Date(prompt.created_at).toLocaleDateString()}\r\n-          </span>\r\n-          <div className=\"flex items-center gap-4\">\r\n-            {prompt.type && (\r\n-              <Badge variant=\"outline\" className=\"bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\r\n-                {prompt.type}\r\n-              </Badge>\r\n-            )}\r\n+            <span>Estimated time: {prompt.metadata?.estimatedTime || 5} mins</span>\r\n           </div>\r\n-        </motion.div>\r\n+          \r\n+          <button className=\"animated-button\">\r\n+            <span className=\"animated-button-content\">\r\n+              <HelpCircle className=\"h-4 w-4\" />\r\n+              Need Help?\r\n+            </span>\r\n+          </button>\r\n+        </div>\r\n       </Card>\r\n     </motion.div>\r\n   );\r\n };\r\n@@ -303,9 +337,10 @@\n     media: prompt?.media || '',\r\n     narration: prompt?.narration || '',\r\n     saytext: prompt?.saytext || '',\r\n     question_id: prompt?.question_id || null,\r\n-    order_index: promptIndex\r\n+    order_index: promptIndex,\r\n+    metadata: prompt?.metadata || { estimatedTime: 5 }\r\n   };\r\n \r\n   return (\r\n     <Card className={cn(\r\n@@ -427,5 +462,12 @@\n         )}\r\n       </AnimatePresence>\r\n     </Card>\r\n   );\r\n-}; \n\\ No newline at end of file\n+};\r\n+\r\n+// Add the styles to your document\r\n+if (typeof document !== 'undefined') {\r\n+  const styleSheet = document.createElement('style');\r\n+  styleSheet.textContent = globalStyles;\r\n+  document.head.appendChild(styleSheet);\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1739908063128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,11 +205,16 @@\n             <Progress value={0} className=\"h-2\" />\r\n           </div>\r\n         </CardContent>\r\n \r\n-        {/* Interactive footer with metadata */}\r\n-        <div className=\"px-6 pb-6 flex items-center justify-between text-sm\">\r\n-          <div className=\"flex items-center gap-2 text-muted-foreground\">\r\n+        {/* Interactive footer with stats or metadata */}\r\n+        <motion.div\r\n+          initial={{ opacity: 0 }}\r\n+          animate={{ opacity: 1 }}\r\n+          transition={{ delay: 0.5 }}\r\n+          className=\"px-6 pb-6 pt-0 flex items-center justify-between text-sm text-muted-foreground\"\r\n+        >\r\n+          <span className=\"flex items-center gap-2\">\r\n             <Clock className=\"h-4 w-4\" />\r\n             <span>Estimated time: {prompt.metadata?.estimatedTime || 5} mins</span>\r\n           </div>\r\n           \r\n"
                },
                {
                    "date": 1739908074966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,18 +214,18 @@\n           className=\"px-6 pb-6 pt-0 flex items-center justify-between text-sm text-muted-foreground\"\r\n         >\r\n           <span className=\"flex items-center gap-2\">\r\n             <Clock className=\"h-4 w-4\" />\r\n-            <span>Estimated time: {prompt.metadata?.estimatedTime || 5} mins</span>\r\n+            {prompt.created_at && new Date(prompt.created_at).toLocaleDateString()}\r\n+          </span>\r\n+          <div className=\"flex items-center gap-4\">\r\n+            {prompt.type && (\r\n+              <Badge variant=\"outline\" className=\"bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\r\n+                {prompt.type}\r\n+              </Badge>\r\n+            )}\r\n           </div>\r\n-          \r\n-          <button className=\"animated-button\">\r\n-            <span className=\"animated-button-content\">\r\n-              <HelpCircle className=\"h-4 w-4\" />\r\n-              Need Help?\r\n-            </span>\r\n-          </button>\r\n-        </div>\r\n+        </motion.div>\r\n       </Card>\r\n     </motion.div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1739908113546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,16 @@\n import { Label } from '@/components/ui/label';\r\n import { Input } from '@/components/ui/input';\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Button } from '@/components/ui/button';\r\n-import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock, PlayCircle, FileText, Video, HelpCircle } from 'lucide-react';\r\n+import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock } from 'lucide-react';\r\n import { ExercisePromptCardProps } from '../types';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n import { cn } from '@/lib/utils';\r\n import { logger } from '@/lib/logger';\r\n-import { ImageIcon } from 'lucide-react';\r\n+import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n import { Icon } from '@/components/ui/icons';\r\n import { Badge } from '@/components/ui/badge';\r\n-import { Progress } from '@/components/ui/progress';\r\n \r\n type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n \r\n // Add interface for the prompt structure\r\n@@ -29,9 +28,8 @@\n   question_id?: string | null;\r\n   order_index: number;\r\n   created_at?: string;\r\n   updated_at?: string;\r\n-  metadata?: { estimatedTime: number };\r\n }\r\n \r\n interface ViewModeProps {\r\n   prompt: ExercisePrompt;\r\n@@ -467,12 +465,5 @@\n         )}\r\n       </AnimatePresence>\r\n     </Card>\r\n   );\r\n-};\r\n-\r\n-// Add the styles to your document\r\n-if (typeof document !== 'undefined') {\r\n-  const styleSheet = document.createElement('style');\r\n-  styleSheet.textContent = globalStyles;\r\n-  document.head.appendChild(styleSheet);\r\n-} \n\\ No newline at end of file\n+}; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1739908185773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n import { logger } from '@/lib/logger';\r\n import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n import { Icon } from '@/components/ui/icons';\r\n import { Badge } from '@/components/ui/badge';\r\n+import { Progress } from '@/components/ui/progress';\r\n \r\n type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n \r\n // Add interface for the prompt structure\r\n@@ -33,8 +34,12 @@\n \r\n interface ViewModeProps {\r\n   prompt: ExercisePrompt;\r\n   promptIndex: number;\r\n+  onStart?: () => void;\r\n+  onWatch?: () => void;\r\n+  onListen?: () => void;\r\n+  onHelp?: () => void;\r\n }\r\n \r\n const ViewMode: React.FC<ViewModeProps> = ({ prompt, promptIndex }) => {\r\n   const [isMediaExpanded, setIsMediaExpanded] = useState(false);\r\n@@ -232,9 +237,13 @@\n   prompt,\r\n   promptIndex,\r\n   onRemove,\r\n   onUpdate,\r\n-  viewMode = false\r\n+  viewMode = false,\r\n+  onStart,\r\n+  onWatch,\r\n+  onListen,\r\n+  onHelp\r\n }) => {\r\n   const [isExpanded, setIsExpanded] = useState(false);\r\n   const [isSaving, setIsSaving] = useState(false);\r\n   const [lastSaved, setLastSaved] = useState<'success' | 'error' | null>(null);\r\n"
                },
                {
                    "date": 1739908191101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Label } from '@/components/ui/label';\r\n import { Input } from '@/components/ui/input';\r\n import { Textarea } from '@/components/ui/textarea';\r\n import { Button } from '@/components/ui/button';\r\n-import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock } from 'lucide-react';\r\n+import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock, Video } from 'lucide-react';\r\n import { ExercisePromptCardProps } from '../types';\r\n import { motion, AnimatePresence } from 'framer-motion';\r\n import { cn } from '@/lib/utils';\r\n import { logger } from '@/lib/logger';\r\n"
                },
                {
                    "date": 1739908232533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import { Icon } from '@/components/ui/icons';\r\n import { Badge } from '@/components/ui/badge';\r\n import { Progress } from '@/components/ui/progress';\r\n \r\n-type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' | 'practice' | 'exercise';\r\n+type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' |;\r\n \r\n // Add interface for the prompt structure\r\n interface ExercisePrompt {\r\n   id?: string;\r\n"
                },
                {
                    "date": 1739908243328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import { Icon } from '@/components/ui/icons';\r\n import { Badge } from '@/components/ui/badge';\r\n import { Progress } from '@/components/ui/progress';\r\n \r\n-type ExercisePromptType = 'text' | 'image' | 'video' | 'audio' |;\r\n+type ExercisePromptType =  'image' | 'video' | 'audio' ;\r\n \r\n // Add interface for the prompt structure\r\n interface ExercisePrompt {\r\n   id?: string;\r\n"
                },
                {
                    "date": 1739908281230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n   question_id?: string | null;\r\n   order_index: number;\r\n   created_at?: string;\r\n   updated_at?: string;\r\n+  metadata: { estimatedTime: number };\r\n }\r\n \r\n interface ViewModeProps {\r\n   prompt: ExercisePrompt;\r\n@@ -350,9 +351,9 @@\n     narration: prompt?.narration || '',\r\n     saytext: prompt?.saytext || '',\r\n     question_id: prompt?.question_id || null,\r\n     order_index: promptIndex,\r\n-    metadata: prompt?.metadata || { estimatedTime: 5 }\r\n+    metadata: { estimatedTime: prompt?.metadata?.estimatedTime || 5 }\r\n   };\r\n \r\n   return (\r\n     <Card className={cn(\r\n"
                },
                {
                    "date": 1739911783344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,49 @@\n \"use client\";\r\n \r\n-import { useState, useRef, useEffect } from 'react';\r\n-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n-import { Label } from '@/components/ui/label';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n+import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\n+import { Badge } from '@/components/ui/badge';\r\n+import { motion } from 'framer-motion';\r\n+import { cn } from '@/lib/utils';\r\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n import { Button } from '@/components/ui/button';\r\n-import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock, Video } from 'lucide-react';\r\n-import { ExercisePromptCardProps } from '../types';\r\n-import { motion, AnimatePresence } from 'framer-motion';\r\n-import { cn } from '@/lib/utils';\r\n-import { logger } from '@/lib/logger';\r\n-import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n-import { Icon } from '@/components/ui/icons';\r\n-import { Badge } from '@/components/ui/badge';\r\n-import { Progress } from '@/components/ui/progress';\r\n \r\n-type ExercisePromptType =  'image' | 'video' | 'audio' ;\r\n-\r\n-// Add interface for the prompt structure\r\n interface ExercisePrompt {\r\n-  id?: string;\r\n+  id: string;\r\n   text: string;\r\n-  type: ExercisePromptType;\r\n-  media?: string | null;\r\n-  narration?: string | null;\r\n-  saytext?: string | null;\r\n-  question_id?: string | null;\r\n-  order_index: number;\r\n-  created_at?: string;\r\n-  updated_at?: string;\r\n-  metadata: { estimatedTime: number };\r\n+  type: 'image' | 'video' | 'gif';\r\n+  media: string | null;\r\n+  narration: string | null;\r\n+  saytext: string | null;\r\n+  content?: {\r\n+    instructions?: string;\r\n+    writingPrompt?: string;\r\n+    speakingPrompt?: string;\r\n+  };\r\n+  metadata?: {\r\n+    difficulty?: 'beginner' | 'intermediate' | 'advanced';\r\n+    estimatedTime?: number;\r\n+  };\r\n }\r\n \r\n-interface ViewModeProps {\r\n+interface ExercisePromptCardProps {\r\n   prompt: ExercisePrompt;\r\n   promptIndex: number;\r\n+  viewMode?: boolean;\r\n   onStart?: () => void;\r\n   onWatch?: () => void;\r\n   onListen?: () => void;\r\n   onHelp?: () => void;\r\n }\r\n \r\n-const ViewMode: React.FC<ViewModeProps> = ({ prompt, promptIndex }) => {\r\n-  const [isMediaExpanded, setIsMediaExpanded] = useState(false);\r\n-\r\n+export const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n+  prompt,\r\n+  promptIndex,\r\n+  onStart,\r\n+  onWatch,\r\n+  onListen,\r\n+  onHelp\r\n+}) => {\r\n   return (\r\n     <motion.div\r\n       initial={{ opacity: 0, y: 20 }}\r\n       animate={{ opacity: 1, y: 0 }}\r\n@@ -56,180 +54,145 @@\n         {/* Glowing border effect */}\r\n         <div className=\"absolute inset-0 bg-gradient-to-r from-primary/30 via-secondary/30 to-primary/30 opacity-0 group-hover:opacity-100 animate-gradient-xy transition-opacity duration-500\" />\r\n         \r\n         <CardHeader className=\"relative overflow-hidden backdrop-blur-md\">\r\n-          {/* Floating badge with shine effect */}\r\n+          {/* Exercise number badge */}\r\n           <motion.div\r\n             initial={{ scale: 0 }}\r\n             animate={{ scale: 1 }}\r\n             className=\"absolute top-4 left-4 z-10\"\r\n           >\r\n             <Badge \r\n               variant=\"outline\" \r\n-              className=\"relative overflow-hidden bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1 before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent\"\r\n+              className=\"relative overflow-hidden bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1\"\r\n             >\r\n               Exercise {promptIndex + 1}\r\n             </Badge>\r\n           </motion.div>\r\n \r\n-          {/* Media Section with hover effects */}\r\n+          {/* Media Section */}\r\n           {prompt.media && (\r\n-            <motion.div \r\n-              layoutId={`media-${prompt.id}`}\r\n-              className={cn(\r\n-                \"relative rounded-lg overflow-hidden group/media\",\r\n-                isMediaExpanded ? \"h-[400px]\" : \"h-[200px]\"\r\n-              )}\r\n-            >\r\n+            <div className=\"relative rounded-lg overflow-hidden mt-8 group/media\">\r\n               {prompt.type === 'image' && (\r\n-                <div className=\"relative overflow-hidden\">\r\n+                <div className=\"relative h-[200px] overflow-hidden\">\r\n                   <img\r\n                     src={prompt.media}\r\n                     alt={prompt.text}\r\n                     className=\"w-full h-full object-cover transition-all duration-500 group-hover/media:scale-110\"\r\n+                    loading=\"lazy\"\r\n                   />\r\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\r\n                 </div>\r\n               )}\r\n               {prompt.type === 'video' && (\r\n-                <div className=\"relative\">\r\n+                <div className=\"relative h-[200px]\">\r\n                   <video\r\n                     src={prompt.media}\r\n                     controls\r\n                     className=\"w-full h-full object-cover\"\r\n+                    preload=\"metadata\"\r\n                   />\r\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                 </div>\r\n               )}\r\n-              \r\n-              {/* Floating control button with hover effect */}\r\n-              <Button\r\n-                variant=\"ghost\"\r\n-                size=\"icon\"\r\n-                className=\"absolute bottom-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-primary hover:text-white transform hover:scale-110 transition-all duration-300 ease-out\"\r\n-                onClick={() => setIsMediaExpanded(!isMediaExpanded)}\r\n-              >\r\n-                {isMediaExpanded ? (\r\n-                  <Minimize2 className=\"h-4 w-4\" />\r\n-                ) : (\r\n-                  <Maximize2 className=\"h-4 w-4\" />\r\n-                )}\r\n-              </Button>\r\n-            </motion.div>\r\n+            </div>\r\n           )}\r\n \r\n-          {/* Main Content with animated underline */}\r\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-4\")}>\r\n-            <motion.div\r\n-              initial={{ opacity: 0 }}\r\n-              animate={{ opacity: 1 }}\r\n-              transition={{ delay: 0.2 }}\r\n-              className=\"relative\"\r\n-            >\r\n-              <CardTitle className=\"text-xl font-semibold leading-tight relative inline-block\">\r\n-                {prompt.text}\r\n-                <span className=\"absolute bottom-0 left-0 w-full h-0.5 bg-primary transform scale-x-0 transition-transform duration-300 group-hover:scale-x-100\" />\r\n-              </CardTitle>\r\n-            </motion.div>\r\n+          {/* Title and Description */}\r\n+          <div className=\"mt-4 space-y-2\">\r\n+            <CardTitle className=\"text-xl font-semibold leading-tight\">\r\n+              {prompt.text}\r\n+            </CardTitle>\r\n+            {prompt.content?.instructions && (\r\n+              <CardDescription className=\"text-base\">\r\n+                {prompt.content.instructions}\r\n+              </CardDescription>\r\n+            )}\r\n           </div>\r\n         </CardHeader>\r\n \r\n         <CardContent className=\"space-y-6\">\r\n-          {/* Narration Section with hover lift effect */}\r\n+          {/* Narration Section */}\r\n           {prompt.narration && (\r\n-            <motion.div\r\n-              initial={{ opacity: 0, y: 10 }}\r\n-              animate={{ opacity: 1, y: 0 }}\r\n-              transition={{ delay: 0.3 }}\r\n-              className=\"relative group/narration\"\r\n-            >\r\n-              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\">\r\n+            <div className=\"relative group/narration\">\r\n+              <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\">\r\n                 <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                   <Volume2 className=\"h-4 w-4 animate-pulse\" />\r\n                   <h4 className=\"font-medium\">Narration</h4>\r\n                 </div>\r\n-                <p className=\"text-muted-foreground relative z-10\">{prompt.narration}</p>\r\n-                <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 via-secondary/5 to-primary/5 rounded-lg opacity-0 group-hover/narration:opacity-100 transition-opacity duration-300\" />\r\n+                <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n               </div>\r\n-            </motion.div>\r\n+            </div>\r\n           )}\r\n \r\n-          {/* Say Text Section with floating effect */}\r\n+          {/* Say Text Section */}\r\n           {prompt.saytext && (\r\n-            <motion.div\r\n-              initial={{ opacity: 0, y: 10 }}\r\n-              animate={{ opacity: 1, y: 0 }}\r\n-              transition={{ delay: 0.4 }}\r\n-              className=\"relative group/saytext\"\r\n-            >\r\n-              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:shadow-xl\">\r\n+            <div className=\"relative group/saytext\">\r\n+              <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:shadow-xl\">\r\n                 <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                   <MessageCircle className=\"h-4 w-4 group-hover/saytext:animate-bounce\" />\r\n                   <h4 className=\"font-medium\">Say Text</h4>\r\n                 </div>\r\n                 <p className=\"text-muted-foreground\">{prompt.saytext}</p>\r\n-                <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-secondary/5 rounded-lg opacity-0 group-hover/saytext:opacity-100 transition-opacity duration-300\" />\r\n               </div>\r\n-            </motion.div>\r\n+            </div>\r\n           )}\r\n \r\n-          {/* Add action buttons with the new animated style */}\r\n-          <div className=\"flex items-center gap-4 pt-4\">\r\n-            <button className=\"animated-button\">\r\n-              <span className=\"animated-button-content\">\r\n-                <PlayCircle className=\"h-5 w-5\" />\r\n-                Start Exercise\r\n-              </span>\r\n-            </button>\r\n+          {/* Action Buttons */}\r\n+          <div className=\"flex flex-wrap gap-3 pt-4\">\r\n+            <Button\r\n+              variant=\"outline\"\r\n+              className=\"flex-1 bg-primary/5 hover:bg-primary/10 transition-colors\"\r\n+              onClick={onStart}\r\n+            >\r\n+              <PlayCircle className=\"h-4 w-4 mr-2\" />\r\n+              Start Exercise\r\n+            </Button>\r\n             \r\n             {prompt.type === 'video' && (\r\n-              <button className=\"animated-button\">\r\n-                <span className=\"animated-button-content\">\r\n-                  <Video className=\"h-5 w-5\" />\r\n-                  Watch Tutorial\r\n-                </span>\r\n-              </button>\r\n+              <Button\r\n+                variant=\"outline\"\r\n+                className=\"flex-1 bg-primary/5 hover:bg-primary/10\"\r\n+                onClick={onWatch}\r\n+              >\r\n+                <Video className=\"h-4 w-4 mr-2\" />\r\n+                Watch Tutorial\r\n+              </Button>\r\n             )}\r\n             \r\n             {prompt.narration && (\r\n-              <button className=\"animated-button\">\r\n-                <span className=\"animated-button-content\">\r\n-                  <Volume2 className=\"h-5 w-5\" />\r\n-                  Listen\r\n-                </span>\r\n-              </button>\r\n+              <Button\r\n+                variant=\"outline\"\r\n+                className=\"flex-1 bg-primary/5 hover:bg-primary/10\"\r\n+                onClick={onListen}\r\n+              >\r\n+                <Volume2 className=\"h-4 w-4 mr-2\" />\r\n+                Listen\r\n+              </Button>\r\n             )}\r\n           </div>\r\n-          \r\n-          {/* Progress indicator */}\r\n-          <div className=\"mt-6\">\r\n-            <div className=\"flex items-center justify-between mb-2\">\r\n-              <span className=\"text-sm font-medium text-muted-foreground\">Progress</span>\r\n-              <span className=\"text-sm font-medium text-primary\">0%</span>\r\n+\r\n+          {/* Metadata Footer */}\r\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4 border-t\">\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <Clock className=\"h-4 w-4\" />\r\n+              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\r\n             </div>\r\n-            <Progress value={0} className=\"h-2\" />\r\n-          </div>\r\n-        </CardContent>\r\n-\r\n-        {/* Interactive footer with stats or metadata */}\r\n-        <motion.div\r\n-          initial={{ opacity: 0 }}\r\n-          animate={{ opacity: 1 }}\r\n-          transition={{ delay: 0.5 }}\r\n-          className=\"px-6 pb-6 pt-0 flex items-center justify-between text-sm text-muted-foreground\"\r\n-        >\r\n-          <span className=\"flex items-center gap-2\">\r\n-            <Clock className=\"h-4 w-4\" />\r\n-            {prompt.created_at && new Date(prompt.created_at).toLocaleDateString()}\r\n-          </span>\r\n-          <div className=\"flex items-center gap-4\">\r\n-            {prompt.type && (\r\n-              <Badge variant=\"outline\" className=\"bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\r\n-                {prompt.type}\r\n+            {prompt.metadata?.difficulty && (\r\n+              <Badge \r\n+                variant=\"outline\" \r\n+                className={cn(\r\n+                  \"capitalize\",\r\n+                  prompt.metadata.difficulty === 'beginner' && \"bg-green-500/10 text-green-500\",\r\n+                  prompt.metadata.difficulty === 'intermediate' && \"bg-yellow-500/10 text-yellow-500\",\r\n+                  prompt.metadata.difficulty === 'advanced' && \"bg-red-500/10 text-red-500\"\r\n+                )}\r\n+              >\r\n+                {prompt.metadata.difficulty}\r\n               </Badge>\r\n             )}\r\n           </div>\r\n-        </motion.div>\r\n+        </CardContent>\r\n       </Card>\r\n     </motion.div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1739911806562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,51 @@\n \"use client\";\r\n \r\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\n+import { useState, useRef, useEffect } from 'react';\r\n+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n+import { Label } from '@/components/ui/label';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Textarea } from '@/components/ui/textarea';\r\n+import { Button } from '@/components/ui/button';\r\n+import { ChevronDown, ChevronRight, HomeIcon, Minimize2, Maximize2, Volume2, MessageCircle, Clock, Video } from 'lucide-react';\r\n+import { ExercisePromptCardProps } from '../types';\r\n+import { motion, AnimatePresence } from 'framer-motion';\r\n+import { cn } from '@/lib/utils';\r\n+import { logger } from '@/lib/logger';\r\n+import { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n+import { Icon } from '@/components/ui/icons';\r\n import { Badge } from '@/components/ui/badge';\r\n-import { motion } from 'framer-motion';\r\n-import { cn } from '@/lib/utils';\r\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\n-import { Button } from '@/components/ui/button';\r\n+import { Progress } from '@/components/ui/progress';\r\n \r\n+type ExercisePromptType =  'image' | 'video' | 'audio' ;\r\n+\r\n+// Add interface for the prompt structure\r\n interface ExercisePrompt {\r\n-  id: string;\r\n+  id?: string;\r\n   text: string;\r\n-  type: 'image' | 'video' | 'gif';\r\n-  media: string | null;\r\n-  narration: string | null;\r\n-  saytext: string | null;\r\n-  content?: {\r\n-    instructions?: string;\r\n-    writingPrompt?: string;\r\n-    speakingPrompt?: string;\r\n-  };\r\n-  metadata?: {\r\n-    difficulty?: 'beginner' | 'intermediate' | 'advanced';\r\n-    estimatedTime?: number;\r\n-  };\r\n+  type: ExercisePromptType;\r\n+  media?: string | null;\r\n+  narration?: string | null;\r\n+  saytext?: string | null;\r\n+  question_id?: string | null;\r\n+  order_index: number;\r\n+  created_at?: string;\r\n+  updated_at?: string;\r\n+  metadata: { estimatedTime: number };\r\n }\r\n \r\n-interface ExercisePromptCardProps {\r\n+interface ViewModeProps {\r\n   prompt: ExercisePrompt;\r\n   promptIndex: number;\r\n-  viewMode?: boolean;\r\n   onStart?: () => void;\r\n   onWatch?: () => void;\r\n   onListen?: () => void;\r\n   onHelp?: () => void;\r\n }\r\n \r\n-export const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n-  prompt,\r\n-  promptIndex,\r\n-  onStart,\r\n-  onWatch,\r\n-  onListen,\r\n-  onHelp\r\n-}) => {\r\n+const ViewMode: React.FC<ViewModeProps> = ({ prompt, promptIndex }) => {\r\n+  const [isMediaExpanded, setIsMediaExpanded] = useState(false);\r\n+\r\n   return (\r\n     <motion.div\r\n       initial={{ opacity: 0, y: 20 }}\r\n       animate={{ opacity: 1, y: 0 }}\r\n@@ -54,145 +56,180 @@\n         {/* Glowing border effect */}\r\n         <div className=\"absolute inset-0 bg-gradient-to-r from-primary/30 via-secondary/30 to-primary/30 opacity-0 group-hover:opacity-100 animate-gradient-xy transition-opacity duration-500\" />\r\n         \r\n         <CardHeader className=\"relative overflow-hidden backdrop-blur-md\">\r\n-          {/* Exercise number badge */}\r\n+          {/* Floating badge with shine effect */}\r\n           <motion.div\r\n             initial={{ scale: 0 }}\r\n             animate={{ scale: 1 }}\r\n             className=\"absolute top-4 left-4 z-10\"\r\n           >\r\n             <Badge \r\n               variant=\"outline\" \r\n-              className=\"relative overflow-hidden bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1\"\r\n+              className=\"relative overflow-hidden bg-background/80 backdrop-blur-sm border-primary/20 px-3 py-1 before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent\"\r\n             >\r\n               Exercise {promptIndex + 1}\r\n             </Badge>\r\n           </motion.div>\r\n \r\n-          {/* Media Section */}\r\n+          {/* Media Section with hover effects */}\r\n           {prompt.media && (\r\n-            <div className=\"relative rounded-lg overflow-hidden mt-8 group/media\">\r\n+            <motion.div \r\n+              layoutId={`media-${prompt.id}`}\r\n+              className={cn(\r\n+                \"relative rounded-lg overflow-hidden group/media\",\r\n+                isMediaExpanded ? \"h-[400px]\" : \"h-[200px]\"\r\n+              )}\r\n+            >\r\n               {prompt.type === 'image' && (\r\n-                <div className=\"relative h-[200px] overflow-hidden\">\r\n+                <div className=\"relative overflow-hidden\">\r\n                   <img\r\n                     src={prompt.media}\r\n                     alt={prompt.text}\r\n                     className=\"w-full h-full object-cover transition-all duration-500 group-hover/media:scale-110\"\r\n-                    loading=\"lazy\"\r\n                   />\r\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\r\n                 </div>\r\n               )}\r\n               {prompt.type === 'video' && (\r\n-                <div className=\"relative h-[200px]\">\r\n+                <div className=\"relative\">\r\n                   <video\r\n                     src={prompt.media}\r\n                     controls\r\n                     className=\"w-full h-full object-cover\"\r\n-                    preload=\"metadata\"\r\n                   />\r\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                 </div>\r\n               )}\r\n-            </div>\r\n+              \r\n+              {/* Floating control button with hover effect */}\r\n+              <Button\r\n+                variant=\"ghost\"\r\n+                size=\"icon\"\r\n+                className=\"absolute bottom-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-primary hover:text-white transform hover:scale-110 transition-all duration-300 ease-out\"\r\n+                onClick={() => setIsMediaExpanded(!isMediaExpanded)}\r\n+              >\r\n+                {isMediaExpanded ? (\r\n+                  <Minimize2 className=\"h-4 w-4\" />\r\n+                ) : (\r\n+                  <Maximize2 className=\"h-4 w-4\" />\r\n+                )}\r\n+              </Button>\r\n+            </motion.div>\r\n           )}\r\n \r\n-          {/* Title and Description */}\r\n-          <div className=\"mt-4 space-y-2\">\r\n-            <CardTitle className=\"text-xl font-semibold leading-tight\">\r\n-              {prompt.text}\r\n-            </CardTitle>\r\n-            {prompt.content?.instructions && (\r\n-              <CardDescription className=\"text-base\">\r\n-                {prompt.content.instructions}\r\n-              </CardDescription>\r\n-            )}\r\n+          {/* Main Content with animated underline */}\r\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-4\")}>\r\n+            <motion.div\r\n+              initial={{ opacity: 0 }}\r\n+              animate={{ opacity: 1 }}\r\n+              transition={{ delay: 0.2 }}\r\n+              className=\"relative\"\r\n+            >\r\n+              <CardTitle className=\"text-xl font-semibold leading-tight relative inline-block\">\r\n+                {prompt.text}\r\n+                <span className=\"absolute bottom-0 left-0 w-full h-0.5 bg-primary transform scale-x-0 transition-transform duration-300 group-hover:scale-x-100\" />\r\n+              </CardTitle>\r\n+            </motion.div>\r\n           </div>\r\n         </CardHeader>\r\n \r\n         <CardContent className=\"space-y-6\">\r\n-          {/* Narration Section */}\r\n+          {/* Narration Section with hover lift effect */}\r\n           {prompt.narration && (\r\n-            <div className=\"relative group/narration\">\r\n-              <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\">\r\n+            <motion.div\r\n+              initial={{ opacity: 0, y: 10 }}\r\n+              animate={{ opacity: 1, y: 0 }}\r\n+              transition={{ delay: 0.3 }}\r\n+              className=\"relative group/narration\"\r\n+            >\r\n+              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg\">\r\n                 <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                   <Volume2 className=\"h-4 w-4 animate-pulse\" />\r\n                   <h4 className=\"font-medium\">Narration</h4>\r\n                 </div>\r\n-                <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n+                <p className=\"text-muted-foreground relative z-10\">{prompt.narration}</p>\r\n+                <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 via-secondary/5 to-primary/5 rounded-lg opacity-0 group-hover/narration:opacity-100 transition-opacity duration-300\" />\r\n               </div>\r\n-            </div>\r\n+            </motion.div>\r\n           )}\r\n \r\n-          {/* Say Text Section */}\r\n+          {/* Say Text Section with floating effect */}\r\n           {prompt.saytext && (\r\n-            <div className=\"relative group/saytext\">\r\n-              <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:shadow-xl\">\r\n+            <motion.div\r\n+              initial={{ opacity: 0, y: 10 }}\r\n+              animate={{ opacity: 1, y: 0 }}\r\n+              transition={{ delay: 0.4 }}\r\n+              className=\"relative group/saytext\"\r\n+            >\r\n+              <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm transform transition-all duration-300 hover:shadow-xl\">\r\n                 <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                   <MessageCircle className=\"h-4 w-4 group-hover/saytext:animate-bounce\" />\r\n                   <h4 className=\"font-medium\">Say Text</h4>\r\n                 </div>\r\n                 <p className=\"text-muted-foreground\">{prompt.saytext}</p>\r\n+                <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-secondary/5 rounded-lg opacity-0 group-hover/saytext:opacity-100 transition-opacity duration-300\" />\r\n               </div>\r\n-            </div>\r\n+            </motion.div>\r\n           )}\r\n \r\n-          {/* Action Buttons */}\r\n-          <div className=\"flex flex-wrap gap-3 pt-4\">\r\n-            <Button\r\n-              variant=\"outline\"\r\n-              className=\"flex-1 bg-primary/5 hover:bg-primary/10 transition-colors\"\r\n-              onClick={onStart}\r\n-            >\r\n-              <PlayCircle className=\"h-4 w-4 mr-2\" />\r\n-              Start Exercise\r\n-            </Button>\r\n+          {/* Add action buttons with the new animated style */}\r\n+          <div className=\"flex items-center gap-4 pt-4\">\r\n+            <button className=\"animated-button\">\r\n+              <span className=\"animated-button-content\">\r\n+                <PlayCircle className=\"h-5 w-5\" />\r\n+                Start Exercise\r\n+              </span>\r\n+            </button>\r\n             \r\n             {prompt.type === 'video' && (\r\n-              <Button\r\n-                variant=\"outline\"\r\n-                className=\"flex-1 bg-primary/5 hover:bg-primary/10\"\r\n-                onClick={onWatch}\r\n-              >\r\n-                <Video className=\"h-4 w-4 mr-2\" />\r\n-                Watch Tutorial\r\n-              </Button>\r\n+              <button className=\"animated-button\">\r\n+                <span className=\"animated-button-content\">\r\n+                  <Video className=\"h-5 w-5\" />\r\n+                  Watch Tutorial\r\n+                </span>\r\n+              </button>\r\n             )}\r\n             \r\n             {prompt.narration && (\r\n-              <Button\r\n-                variant=\"outline\"\r\n-                className=\"flex-1 bg-primary/5 hover:bg-primary/10\"\r\n-                onClick={onListen}\r\n-              >\r\n-                <Volume2 className=\"h-4 w-4 mr-2\" />\r\n-                Listen\r\n-              </Button>\r\n+              <button className=\"animated-button\">\r\n+                <span className=\"animated-button-content\">\r\n+                  <Volume2 className=\"h-5 w-5\" />\r\n+                  Listen\r\n+                </span>\r\n+              </button>\r\n             )}\r\n           </div>\r\n+          \r\n+          {/* Progress indicator */}\r\n+          <div className=\"mt-6\">\r\n+            <div className=\"flex items-center justify-between mb-2\">\r\n+              <span className=\"text-sm font-medium text-muted-foreground\">Progress</span>\r\n+              <span className=\"text-sm font-medium text-primary\">0%</span>\r\n+            </div>\r\n+            <Progress value={0} className=\"h-2\" />\r\n+          </div>\r\n+        </CardContent>\r\n \r\n-          {/* Metadata Footer */}\r\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4 border-t\">\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <Clock className=\"h-4 w-4\" />\r\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\r\n-            </div>\r\n-            {prompt.metadata?.difficulty && (\r\n-              <Badge \r\n-                variant=\"outline\" \r\n-                className={cn(\r\n-                  \"capitalize\",\r\n-                  prompt.metadata.difficulty === 'beginner' && \"bg-green-500/10 text-green-500\",\r\n-                  prompt.metadata.difficulty === 'intermediate' && \"bg-yellow-500/10 text-yellow-500\",\r\n-                  prompt.metadata.difficulty === 'advanced' && \"bg-red-500/10 text-red-500\"\r\n-                )}\r\n-              >\r\n-                {prompt.metadata.difficulty}\r\n+        {/* Interactive footer with stats or metadata */}\r\n+        <motion.div\r\n+          initial={{ opacity: 0 }}\r\n+          animate={{ opacity: 1 }}\r\n+          transition={{ delay: 0.5 }}\r\n+          className=\"px-6 pb-6 pt-0 flex items-center justify-between text-sm text-muted-foreground\"\r\n+        >\r\n+          <span className=\"flex items-center gap-2\">\r\n+            <Clock className=\"h-4 w-4\" />\r\n+            {prompt.created_at && new Date(prompt.created_at).toLocaleDateString()}\r\n+          </span>\r\n+          <div className=\"flex items-center gap-4\">\r\n+            {prompt.type && (\r\n+              <Badge variant=\"outline\" className=\"bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\r\n+                {prompt.type}\r\n               </Badge>\r\n             )}\r\n           </div>\r\n-        </CardContent>\r\n+        </motion.div>\r\n       </Card>\r\n     </motion.div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1740946985076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n               )}\r\n             >\r\n               {prompt.type === 'image' && (\r\n                 <div className=\"relative overflow-hidden\">\r\n-                  <\r\n+                  <I\r\n                     src={prompt.media}\r\n                     alt={prompt.text}\r\n                     className=\"w-full h-full object-cover transition-all duration-500 group-hover/media:scale-110\"\r\n                   />\r\n"
                },
                {
                    "date": 1740947008005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n               )}\r\n               \r\n               {/* Floating control button with hover effect */}\r\n               <Button\r\n-              \r\n+              t\r\n                 variant=\"ghost\"\r\n                 size=\"icon\"\r\n                 className=\"absolute bottom-4 right-4 bg-background/80 backdrop-blur-sm hover:bg-primary hover:text-white transform hover:scale-110 transition-all duration-300 ease-out\"\r\n                 onClick={() => setIsMediaExpanded(!isMediaExpanded)}\r\n"
                }
            ],
            "date": 1739691558549,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Button } from '@/components/ui/button';\r\nimport { ChevronDown, ChevronRight, HomeIcon } from 'lucide-react';\r\nimport { ExercisePromptCardProps } from '../types';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { cn } from '@/lib/utils';\r\nimport { logger } from '@/lib/logger';\r\nimport { ImageIcon, PlayCircle, FileText } from 'lucide-react';\r\nimport { Icon } from '@/components/ui/icons';\r\n\r\ntype ExercisePromptType = 'text' | 'image' | 'video' | 'audio';\r\n\r\nexport const ExercisePromptCard: React.FC<ExercisePromptCardProps> = ({\r\n  prompt,\r\n  promptIndex,\r\n  onRemove,\r\n  onUpdate\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [lastSaved, setLastSaved] = useState<'success' | 'error' | null>(null);\r\n  const mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleFieldChange = async (field: string, value: string) => {\r\n    if (field === 'type' && !['text', 'image', 'video', 'audio'].includes(value)) {\r\n      console.error('Invalid type value:', value);\r\n      return;\r\n    }\r\n    \r\n    setIsSaving(true);\r\n    setLastSaved(null);\r\n    try {\r\n      await onUpdate({\r\n        ...prompt,\r\n        [field]: value\r\n      });\r\n      if (mounted.current) {\r\n        setLastSaved('success');\r\n      }\r\n    } catch (error) {\r\n      if (mounted.current) {\r\n        setLastSaved('error');\r\n        logger.error('Failed to update exercise prompt', {\r\n          context: { error, field },\r\n          source: 'ExercisePromptCard'\r\n        });\r\n      }\r\n    } finally {\r\n      if (mounted.current) {\r\n        setIsSaving(false);\r\n        setTimeout(() => {\r\n          if (mounted.current) {\r\n            setLastSaved(null);\r\n          }\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMediaTypeIcon = (url: string) => {\r\n    if (!url) return null;\r\n    const extension = url.split('.').pop()?.toLowerCase();\r\n    if (['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(extension || '')) {\r\n      return <ImageIcon className=\"h-4 w-4\" />;\r\n    }\r\n    if (['mp4', 'webm', 'ogg'].includes(extension || '')) {\r\n      return <PlayCircle className=\"h-4 w-4\" />;\r\n    }\r\n    return <FileText className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  const renderMediaPreview = (url: string) => {\r\n    if (!url) return null;\r\n    const extension = url.split('.').pop()?.toLowerCase();\r\n    \r\n    if (['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(extension || '')) {\r\n      return (\r\n        <div className=\"relative h-[200px] rounded-lg overflow-hidden bg-muted\">\r\n          <img \r\n            src={url} \r\n            alt=\"Media preview\" \r\n            className=\"object-contain w-full h-full\"\r\n            onError={(e) => {\r\n              e.currentTarget.src = 'https://via.placeholder.com/400x225?text=Invalid+Image+URL';\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    if (['mp4', 'webm', 'ogg'].includes(extension || '')) {\r\n      return (\r\n        <div className=\"relative h-[200px] rounded-lg overflow-hidden bg-muted\">\r\n          <video \r\n            src={url} \r\n            controls \r\n            className=\"w-full h-full object-contain\"\r\n            onError={(e) => {\r\n              e.currentTarget.parentElement!.innerHTML = 'Invalid video URL';\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  // Ensure default values for all fields\r\n  const safePrompt = {\r\n    ...prompt,\r\n    text: prompt.text || '',\r\n    type: (prompt.type as ExercisePromptType) || 'text',\r\n    narration: prompt.narration || '',\r\n    saytext: prompt.saytext || '',\r\n    media: prompt.media || ''\r\n  };\r\n\r\n  return (\r\n    <Card className={cn(\r\n      \"border-l-4 transition-colors duration-200\",\r\n      isExpanded ? \"border-l-primary\" : \"border-l-primary/40 hover:border-l-primary\"\r\n    )}>\r\n      <CardHeader className=\"py-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"w-6 h-6 flex items-center justify-center rounded-full bg-primary/10 text-sm font-medium\">\r\n              {promptIndex + 1}\r\n            </span>\r\n            <span className=\"text-sm text-muted-foreground line-clamp-1\">\r\n              {safePrompt.text || 'No prompt text'}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setIsExpanded(!isExpanded)}\r\n              className=\"hover:bg-accent\"\r\n            >\r\n              {isExpanded ? \r\n                <ChevronDown className=\"h-4 w-4 text-primary\" /> : \r\n                <ChevronRight className=\"h-4 w-4 text-primary\" />\r\n              }\r\n            </Button>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={onRemove}\r\n              className=\"hover:bg-destructive/10 hover:text-destructive\"\r\n            >\r\n              <Icon type=\"phosphor\" name=\"TRASH_SIMPLE\" className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <AnimatePresence>\r\n        {isExpanded && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: \"auto\", opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.2 }}\r\n          >\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label>Prompt Text</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {isSaving && <Icon type=\"phosphor\" name=\"SPINNER\" className=\"h-4 w-4 animate-spin text-primary\" />}\r\n                      {lastSaved === 'success' && <Icon type=\"phosphor\" name=\"CHECK\" className=\"h-4 w-4 text-green-500\" />}\r\n                      {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                    </div>\r\n                  </div>\r\n                  <Textarea\r\n                    value={safePrompt.text}\r\n                    onChange={(e) => handleFieldChange('text', e.target.value)}\r\n                    placeholder=\"Enter prompt text\"\r\n                    className=\"min-h-[80px] resize-none\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label>Media URL</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {safePrompt.media && getMediaTypeIcon(safePrompt.media)}\r\n                      {isSaving && <Icon type=\"phosphor\" name=\"SPINNER\" className=\"h-4 w-4 animate-spin text-primary\" />}\r\n                      {lastSaved === 'success' && <Icon type=\"phosphor\" name=\"CHECK\" className=\"h-4 w-4 text-green-500\" />}\r\n                      {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                    </div>\r\n                  </div>\r\n                  <Input\r\n                    value={safePrompt.media}\r\n                    onChange={(e) => handleFieldChange('media', e.target.value)}\r\n                    placeholder=\"Enter media URL\"\r\n                  />\r\n                  {safePrompt.media && renderMediaPreview(safePrompt.media)}\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label>Narration</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {isSaving && <Icon type=\"phosphor\" name=\"SPINNER\" className=\"h-4 w-4 animate-spin text-primary\" />}\r\n                      {lastSaved === 'success' && <Icon type=\"phosphor\" name=\"CHECK\" className=\"h-4 w-4 text-green-500\" />}\r\n                      {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                    </div>\r\n                  </div>\r\n                  <Input\r\n                    value={safePrompt.narration}\r\n                    onChange={(e) => handleFieldChange('narration', e.target.value)}\r\n                    placeholder=\"Enter narration text\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label>Say Text</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {isSaving && <Icon type=\"phosphor\" name=\"SPINNER\" className=\"h-4 w-4 animate-spin text-primary\" />}\r\n                      {lastSaved === 'success' && <Icon type=\"phosphor\" name=\"CHECK\" className=\"h-4 w-4 text-green-500\" />}\r\n                      {lastSaved === 'error' && <Icon type=\"phosphor\" name=\"X\" className=\"h-4 w-4 text-destructive\" />}\r\n                    </div>\r\n                  </div>\r\n                  <Input\r\n                    value={safePrompt.saytext}\r\n                    onChange={(e) => handleFieldChange('saytext', e.target.value)}\r\n                    placeholder=\"Enter text to say\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </Card>\r\n  );\r\n}; "
        }
    ]
}