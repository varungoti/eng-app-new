{
    "sourceFile": "src/app/content-management/components/grades-list.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740947129150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740947147893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,13 @@\n \"use client\";\r\n \r\n import { useState } from \"react\";\r\n import { createClientComponentClient } from \"@supabase/auth-helpers-nextjs\";\r\n-import { , Trash2 } from \"lucide-react\";\r\n+import { Trash2 } from \"lucide-react\";\r\n import { toast } from \"sonner\";\r\n \r\n import {\r\n   Card,\r\n-  CardContent,\r\n   CardDescription,\r\n   CardHeader,\r\n   CardTitle,\r\n } from \"@/components/ui/card\";\r\n"
                }
            ],
            "date": 1740947129150,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { createClientComponentClient } from \"@supabase/auth-helpers-nextjs\";\r\nimport { , Trash2 } from \"lucide-react\";\r\nimport { toast } from \"sonner\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n} from \"@/components/ui/alert-dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Grade } from \"../types\";\r\nimport { EditGradeDialog } from \"./dialogs/edit-grade-dialog\";\r\n\r\ninterface GradesListProps {\r\n  grades: Grade[];\r\n  selectedGrade: Grade | null;\r\n  onSelect: (grade: Grade) => void;\r\n  onUpdate: () => void;\r\n}\r\n\r\nconst supabase = createClientComponentClient({\r\n    supabaseUrl: import.meta.env.VITE_SUPABASE_URL,\r\n    supabaseKey: import.meta.env.VITE_SUPABASE_ANON_KEY,\r\n  });\r\n\r\nexport function GradesList({ grades, selectedGrade, onSelect, onUpdate }: GradesListProps) {\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const handleDelete = async (gradeId: string) => {\r\n    try {\r\n      setIsDeleting(true);\r\n      const { error } = await supabase\r\n        .from(\"grades\")\r\n        .delete()\r\n        .eq(\"id\", gradeId);\r\n\r\n      if (error) throw error;\r\n\r\n      toast.success(\"Grade deleted successfully\");\r\n      onUpdate();\r\n    } catch (error) {\r\n      toast.error(\"Failed to delete grade\");\r\n      console.error(error);\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n      {grades.map((grade) => (\r\n        <Card \r\n          key={grade.id}\r\n          className={`cursor-pointer hover:border-primary transition-colors ${\r\n            selectedGrade?.id === grade.id ? \"border-primary\" : \"\"\r\n          }`}\r\n          onClick={() => onSelect(grade)}\r\n        >\r\n          <CardHeader className=\"flex flex-row items-center justify-between\">\r\n            <div>\r\n              <CardTitle>{grade.name}</CardTitle>\r\n              <CardDescription>Level {grade.level}</CardDescription>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <EditGradeDialog grade={grade} onSuccess={onUpdate} />\r\n              \r\n              <AlertDialog>\r\n                <AlertDialogTrigger asChild>\r\n                  <Button variant=\"destructive\" size=\"icon\">\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </AlertDialogTrigger>\r\n                <AlertDialogContent>\r\n                  <AlertDialogHeader>\r\n                    <AlertDialogTitle>Delete Grade</AlertDialogTitle>\r\n                    <AlertDialogDescription>\r\n                      Are you sure you want to delete this grade? This action cannot be undone.\r\n                    </AlertDialogDescription>\r\n                  </AlertDialogHeader>\r\n                  <AlertDialogFooter>\r\n                    <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n                    <AlertDialogAction\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDelete(grade.id);\r\n                      }}\r\n                      disabled={isDeleting}\r\n                    >\r\n                      {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n                    </AlertDialogAction>\r\n                  </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n              </AlertDialog>\r\n            </div>\r\n          </CardHeader>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n} \r\nexport default GradesList;\r\n"
        }
    ]
}