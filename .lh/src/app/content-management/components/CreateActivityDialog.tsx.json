{
    "sourceFile": "src/app/content-management/components/CreateActivityDialog.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1739016948413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1739016948413,
            "name": "Commit-0",
            "content": "import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { contentService } from \"@/lib/content/ContentService\";\r\nimport { useState } from \"react\";\r\n\r\ninterface CreateActivityDialogProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  lessonId: string;\r\n}\r\n\r\nexport function CreateActivityDialog({ open, onOpenChange, lessonId }: CreateActivityDialogProps) {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [type, setType] = useState<'exercise' | 'quiz' | 'project'>('exercise');\r\n  const { toast } = useToast();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await contentService.createActivity({\r\n        lessonId,\r\n        title,\r\n        description,\r\n        type,\r\n        content: description\r\n      });\r\n      toast({ title: \"Success\", description: \"Activity created successfully\" });\r\n      onOpenChange(false);\r\n    } catch (error) {\r\n      toast({ \r\n        title: \"Error\", \r\n        description: \"Failed to create activity\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle>Create New Activity</DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Activity Type</label>\r\n            <Select value={type} onValueChange={(value: any) => setType(value)}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select type\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"exercise\">Exercise</SelectItem>\r\n                <SelectItem value=\"quiz\">Quiz</SelectItem>\r\n                <SelectItem value=\"project\">Project</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Title</label>\r\n            <Input\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Enter activity title\"\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Description</label>\r\n            <Textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Enter activity description\"\r\n            />\r\n          </div>\r\n          <DialogFooter>\r\n            <Button type=\"submit\">Create Activity</Button>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n} "
        }
    ]
}