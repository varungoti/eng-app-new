{
    "sourceFile": "src/app/content-management/components/QuestionManager.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740947354148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740947385975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n export function QuestionManager({ lessonId }: QuestionManagerProps) {\r\n   const [isCreateQuestionOpen, setIsCreateQuestionOpen] = React.useState(false);\r\n \r\n-  const { data: questions, _isLoading } = useQuery({\r\n+  const { data: questions } = useQuery({\r\n     queryKey: ['questions', lessonId],\r\n     queryFn: () => contentService.fetchQuestions(lessonId),\r\n     enabled: !!lessonId\r\n   });\r\n"
                }
            ],
            "date": 1740947354148,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport React from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Icon } from '@/components/ui/icons';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { contentService } from '@/lib/content/ContentService';\r\nimport { CreateQuestionDialog } from './CreateQuestionDialog';\r\nimport type { Question } from '@/types';\r\nimport { Badge } from '@/components/ui/badge';\r\n\r\ninterface QuestionManagerProps {\r\n  lessonId: string;\r\n}\r\n\r\nexport function QuestionManager({ lessonId }: QuestionManagerProps) {\r\n  const [isCreateQuestionOpen, setIsCreateQuestionOpen] = React.useState(false);\r\n\r\n  const { data: questions, _isLoading } = useQuery({\r\n    queryKey: ['questions', lessonId],\r\n    queryFn: () => contentService.fetchQuestions(lessonId),\r\n    enabled: !!lessonId\r\n  });\r\n\r\n  const handleEditQuestion = (questionId: string) => {\r\n    // TODO: Implement edit functionality\r\n    console.log('Edit question:', questionId);\r\n  };\r\n\r\n  const handleDeleteQuestion = (questionId: string) => {\r\n    // TODO: Implement delete functionality\r\n    console.log('Delete question:', questionId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-lg font-semibold\">Questions</h2>\r\n        <Button onClick={() => setIsCreateQuestionOpen(true)}>\r\n          <Icon type=\"phosphor\" name=\"PLUS\" className=\"h-4 w-4 mr-2\" />\r\n          Add Question\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"grid gap-4\">\r\n        {questions?.map((question: Question) => (\r\n          <Card key={question.id} className=\"p-4\">\r\n            <div className=\"flex justify-between items-start\">\r\n              <div className=\"space-y-1\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Badge variant=\"outline\">{question.type}</Badge>\r\n                  <span className=\"text-sm text-muted-foreground\">\r\n                    {question.points} points\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-sm\">{question.title}</p>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Button\r\n                  variant=\"ghost\" \r\n                  size=\"sm\"\r\n                  className=\"h-8 w-8 p-0\"\r\n                  onClick={() => handleEditQuestion(question.id)}\r\n                >\r\n                  <Icon type=\"phosphor\" name=\"PENCIL_SIMPLE\" className=\"h-4 w-4\" />\r\n                  <span className=\"sr-only\">Edit question</span>\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\" \r\n                  className=\"h-8 w-8 p-0 text-destructive\"\r\n                  onClick={() => handleDeleteQuestion(question.id)}\r\n                >\r\n                  <Icon type=\"phosphor\" name=\"TRASH_SIMPLE\" className=\"h-4 w-4\" />\r\n                  <span className=\"sr-only\">Delete question</span>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      <CreateQuestionDialog\r\n        open={isCreateQuestionOpen}\r\n        onOpenChange={setIsCreateQuestionOpen}\r\n        lessonId={lessonId}\r\n      />\r\n    </div>\r\n  );\r\n} "
        }
    ]
}