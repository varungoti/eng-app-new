{
    "sourceFile": "src/app/my-classes/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1740947534997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740947542986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             <div className=\"flex justify-between items-start mb-4\">\r\n               <div>\r\n                 <h3 className=\"text-lg font-semibold\">{classItem.name}</h3>\r\n                 <p className=\"text-sm text-muted-foreground\">\r\n-                  {classItem.grade.name}\r\n+                  {classItem.gradeId}\r\n                 </p>\r\n               </div>\r\n               <Badge variant=\"outline\">\r\n                 {classItem.assignedContent.length} Contents\r\n"
                },
                {
                    "date": 1740947672209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import { LoadingIndicator } from '@/components/LoadingIndicator';\r\n import { Badge } from '@/components/ui/badge';\r\n import { formatDistanceToNow } from 'date-fns';\r\n import { useSupabaseClient } from '@supabase/auth-helpers-react';\r\n-import { Class } from '@/types/class';\r\n+import { Class, AssignedContent } from '@/types/class';\r\n \r\n export default function MyClassesPage() {\r\n   const supabase = useSupabaseClient();\r\n   const [role, setRole] = useState<string>();\r\n@@ -27,11 +27,45 @@\n     queryKey: ['classes'],\r\n     queryFn: async () => {\r\n       const response = await fetch('/api/classes');\r\n       if (!response.ok) throw new Error('Failed to fetch classes');\r\n+      const classData = await response.json();\r\n+      \r\n+      // Default empty arrays for assignedContent and assignedTeachers if not present\r\n+      return classData.map((classItem: any) => ({\r\n+        ...classItem,\r\n+        assignedContent: classItem.assignedContent || [],\r\n+        assignedTeachers: classItem.assignedTeachers || []\r\n+      }));\r\n+    }\r\n+  });\r\n+  \r\n+  // Function to assign content to a class\r\n+  const assignContentToClass = async (classId: string, contentId: string, contentType: 'TOPIC' | 'SUBTOPIC' | 'LESSON') => {\r\n+    try {\r\n+      const response = await fetch('/api/classes/assign-content', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify({\r\n+          classId,\r\n+          contentId,\r\n+          contentType\r\n+        }),\r\n+      });\r\n+      \r\n+      if (!response.ok) {\r\n+        throw new Error('Failed to assign content');\r\n+      }\r\n+      \r\n+      // Refresh data after assignment\r\n       return response.json();\r\n+    } catch (error) {\r\n+      console.error('Error assigning content:', error);\r\n+      throw error;\r\n     }\r\n-  });\r\n+  };\r\n \r\n   if (isLoading) {\r\n     return <LoadingIndicator />;\r\n   }\r\n"
                },
                {
                    "date": 1740947781921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n \r\n             <div className=\"space-y-2\">\r\n               <div className=\"text-sm\">\r\n                 <span className=\"font-medium\">Teachers:</span>{' '}\r\n-                {classItem.assignedTeachers.map(t => t.name).join(', ')}\r\n+                {classItem.assignedTeachers.map((t: { name: string }) => t.name).join(', ')}\r\n               </div>\r\n               <div className=\"text-sm\">\r\n                 <span className=\"font-medium\">Created:</span>{' '}\r\n                 {formatDistanceToNow(new Date(classItem.createdAt), { addSuffix: true })}\r\n"
                },
                {
                    "date": 1740947805882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,19 @@\n                 <span className=\"font-medium\">Created:</span>{' '}\r\n                 {formatDistanceToNow(new Date(classItem.createdAt), { addSuffix: true })}\r\n               </div>\r\n             </div>\r\n+            \r\n+            <div className=\"mt-4 flex justify-end\">\r\n+              <Button \r\n+                variant=\"outline\" \r\n+                size=\"sm\"\r\n+                onClick={() => assignContentToClass(classItem.id, \"sample-content-id\", \"LESSON\")}\r\n+              >\r\n+                <Icon type=\"phosphor\" name=\"PLUS\" className=\"h-3 w-3 mr-1\" />\r\n+                Assign Content\r\n+              </Button>\r\n+            </div>\r\n \r\n             <div className=\"mt-4 flex gap-2\">\r\n               <Button variant=\"outline\" className=\"w-full\" \r\n                 onClick={() => window.location.href = `/my-classes/${classItem.id}`}\r\n"
                },
                {
                    "date": 1740947822781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import { LoadingIndicator } from '@/components/LoadingIndicator';\r\n import { Badge } from '@/components/ui/badge';\r\n import { formatDistanceToNow } from 'date-fns';\r\n import { useSupabaseClient } from '@supabase/auth-helpers-react';\r\n-import { Class, AssignedContent } from '@/types/class';\r\n+import { Class } from '@/types/class';\r\n \r\n export default function MyClassesPage() {\r\n   const supabase = useSupabaseClient();\r\n   const [role, setRole] = useState<string>();\r\n"
                }
            ],
            "date": 1740947534997,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Icon } from '@/components/ui/icons';\r\nimport { LoadingIndicator } from '@/components/LoadingIndicator';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useSupabaseClient } from '@supabase/auth-helpers-react';\r\nimport { Class } from '@/types/class';\r\n\r\nexport default function MyClassesPage() {\r\n  const supabase = useSupabaseClient();\r\n  const [role, setRole] = useState<string>();\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      setRole(user?.user_metadata?.role);\r\n    };\r\n    getUser();\r\n  }, [supabase]);\r\n\r\n  const { data: classes, isLoading } = useQuery<Class[]>({\r\n    queryKey: ['classes'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/classes');\r\n      if (!response.ok) throw new Error('Failed to fetch classes');\r\n      return response.json();\r\n    }\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold\">My Classes</h1>\r\n        {['SUPER_ADMIN', 'ADMIN', 'SCHOOL_LEADER', 'SCHOOL_PRINCIPAL', 'TEACHER_HEAD'].includes(role as string) && (\r\n          <Button onClick={() => window.location.href = '/my-classes/create'}>\r\n            <Icon type=\"phosphor\" name=\"PLUS\" className=\"h-4 w-4 mr-2\" />\r\n            Create Class\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n        {classes?.map((classItem) => (\r\n          <Card key={classItem.id} className=\"p-4\">\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold\">{classItem.name}</h3>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {classItem.grade.name}\r\n                </p>\r\n              </div>\r\n              <Badge variant=\"outline\">\r\n                {classItem.assignedContent.length} Contents\r\n              </Badge>\r\n            </div>\r\n\r\n            {classItem.description && (\r\n              <p className=\"text-sm text-muted-foreground mb-4\">\r\n                {classItem.description}\r\n              </p>\r\n            )}\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"text-sm\">\r\n                <span className=\"font-medium\">Teachers:</span>{' '}\r\n                {classItem.assignedTeachers.map(t => t.name).join(', ')}\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <span className=\"font-medium\">Created:</span>{' '}\r\n                {formatDistanceToNow(new Date(classItem.createdAt), { addSuffix: true })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-4 flex gap-2\">\r\n              <Button variant=\"outline\" className=\"w-full\" \r\n                onClick={() => window.location.href = `/my-classes/${classItem.id}`}\r\n              >\r\n                <Icon type=\"phosphor\" name=\"BOOK_OPEN\" className=\"h-4 w-4 mr-2\" />\r\n                View Content\r\n              </Button>\r\n              {['SUPER_ADMIN', 'ADMIN', 'SCHOOL_LEADER', 'SCHOOL_PRINCIPAL'].includes(role as string) && (\r\n                <Button variant=\"outline\" className=\"w-full\"\r\n                  onClick={() => window.location.href = `/my-classes/${classItem.id}/manage`}\r\n                >\r\n                  <Icon type=\"phosphor\" name=\"PENCIL_SIMPLE\" className=\"h-4 w-4 mr-2\" />\r\n                  Manage\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}