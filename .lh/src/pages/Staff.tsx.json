{
    "sourceFile": "src/pages/Staff.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1739439891112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739439927164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,224 +1,206 @@\n-import React, { useState } from 'react';\r\n-import { Plus, Upload } from 'lucide-react';\r\n-import { usePermissions } from '../hooks/usePermissions';\r\n-import { useStaff } from '../hooks/useStaff';\r\n-import { useAuth } from '../hooks/useAuth';\r\n-import { useToast } from '../hooks/useToast';\r\n-import ErrorBoundary from '../components/ErrorBoundary';\r\n-import LoadingSpinner from '../components/LoadingSpinner';\r\n-import StaffList from '../components/staff/StaffList';\r\n-import AddStaffDialog from '../components/staff/AddStaffDialog';\r\n-import StaffFilters from '../components/staff/StaffFilters';\r\n-import BulkImportDialog from '../components/BulkImport/BulkImportDialog';\r\n-import { Button } from '../components/ui/button';\r\n-import { logger } from '../lib/logger';\r\n-\r\n-const Staff = () => {\r\n-  const { can } = usePermissions();\r\n-  const { user } = useAuth();\r\n-  const { showToast } = useToast();\r\n-  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n-  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n-  const [filters, setFilters] = useState({\r\n-    role: '',\r\n-    department: '',\r\n-    status: '',\r\n-    search: ''\r\n-  });\r\n-\r\n-  const { \r\n-    staff, \r\n-    loading, \r\n-    error,\r\n-    addStaff,\r\n-    updateStaff,\r\n-    deleteStaff,\r\n-    inviteStaff,\r\n-    refresh\r\n-  } = useStaff();\r\n-\r\n-  if (!can('staff')) {\r\n-    return (\r\n-      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n-        <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\r\n-        <p className=\"mt-2 text-sm text-red-600\">\r\n-          You do not have permission to access staff management.\r\n-        </p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  const handleAddStaff = async (data: any) => {\r\n-    try {\r\n-      // Validate school permission first\r\n-      if (!data.school_id) {\r\n-        throw new Error('School selection is required');\r\n-      }\r\n-\r\n-      // Add additional validation as needed\r\n-      if (!data.name || !data.email || !data.role) {\r\n-        throw new Error('Name, email and role are required');\r\n-      }\r\n-\r\n-      await addStaff.mutateAsync({\r\n-        ...data,\r\n-        status: 'invited'\r\n-      });\r\n-\r\n-      setIsAddModalOpen(false);\r\n-      showToast('Staff member added successfully', { type: 'success' });\r\n-    } catch (err) {\r\n-      const message = err instanceof Error \r\n-        ? err.message \r\n-        : 'Failed to add staff member';\r\n-      \r\n-      logger.error('Failed to add staff member', {\r\n-        context: { error: err, data },\r\n-        source: 'Staff'\r\n-      });\r\n-      \r\n-      showToast(message, { type: 'error' });\r\n-    }\r\n-  };\r\n-\r\n-  const handleInviteStaff = async (email: string, role: string) => {\r\n-    try {\r\n-      await inviteStaff(email, role);\r\n-      showToast('Invitation sent successfully', { type: 'success' });\r\n-    } catch (err) {\r\n-      const message = err instanceof Error ? err.message : 'Failed to send invitation';\r\n-      showToast(message, { type: 'error' });\r\n-      logger.error(message, {\r\n-        context: { error: err },\r\n-        source: 'Staff'\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const handleBulkImport = async (data: any[]) => {\r\n-    try {\r\n-      for (const staff of data) {\r\n-        await addStaff(staff);\r\n-      }\r\n-      setIsImportModalOpen(false);\r\n-      showToast('Staff imported successfully', { type: 'success' });\r\n-    } catch (err) {\r\n-      const message = err instanceof Error ? err.message : 'Failed to import staff';\r\n-      showToast(message, { type: 'error' });\r\n-      logger.error(message, {\r\n-        context: { error: err },\r\n-        source: 'Staff'\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return <LoadingSpinner message=\"Loading staff management...\" />;\r\n-  }\r\n-\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n-        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n-        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\r\n-        <button\r\n-          onClick={() => refresh()}\r\n-          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n-        >\r\n-          Retry Loading\r\n-        </button>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <ErrorBoundary source=\"Staff\">\r\n-      <div className=\"space-y-6\">\r\n-        {/* Header */}\r\n-        <div className=\"flex justify-between items-center\">\r\n-          <div>\r\n-            <h1 className=\"text-2xl font-semibold text-gray-900\">Staff Management</h1>\r\n-            <p className=\"mt-1 text-sm text-gray-500\">\r\n-              Manage staff members and their roles\r\n-            </p>\r\n-          </div>\r\n-          <div className=\"flex space-x-4\">\r\n-            <Button\r\n-              variant=\"outline\"\r\n-              onClick={() => setIsImportModalOpen(true)}\r\n-            >\r\n-              <Upload className=\"h-4 w-4 mr-2\" />\r\n-              Import Staff\r\n-            </Button>\r\n-            <Button\r\n-              onClick={() => setIsAddModalOpen(true)}\r\n-            >\r\n-              <Plus className=\"h-4 w-4 mr-2\" />\r\n-              Add Staff\r\n-            </Button>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Filters */}\r\n-        <StaffFilters\r\n-          filters={filters}\r\n-          onFilterChange={setFilters}\r\n-        />\r\n-\r\n-        {/* Staff List */}\r\n-        <StaffList\r\n-          staff={staff}\r\n-          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\r\n-          onDelete={(id) => deleteStaff.mutate(id)}\r\n-          filters={filters}\r\n-        />\r\n-\r\n-        {/* Add Staff Modal */}\r\n-        {isAddModalOpen && (\r\n-          <AddStaffDialog\r\n-            onClose={() => setIsAddModalOpen(false)}\r\n-            onSubmit={handleAddStaff}\r\n-            onInvite={handleInviteStaff}\r\n-          />\r\n-        )}\r\n-\r\n-        {/* Import Modal */}\r\n-        {isImportModalOpen && (\r\n-          <BulkImportDialog\r\n-            title=\"Import Staff\"\r\n-            onImport={handleBulkImport}\r\n-            onClose={() => setIsImportModalOpen(false)}\r\n-            template={{\r\n-              headers: [\r\n-                'name',\r\n-                'email',\r\n-                'role',\r\n-                'department',\r\n-                'school_id'\r\n-              ],\r\n-              sampleData: [{\r\n-                name: 'John Smith',\r\n-                email: 'john@example.com',\r\n-                role: 'teacher',\r\n-                department: 'English',\r\n-                school_id: 'school-123'\r\n-              }]\r\n-            }}\r\n-            validateRow={(row) => {\r\n-              const errors = [];\r\n-              if (!row.name) errors.push('Name is required');\r\n-              if (!row.email) errors.push('Email is required');\r\n-              if (!row.role) errors.push('Role is required');\r\n-              return {\r\n-                isValid: errors.length === 0,\r\n-                errors\r\n-              };\r\n-            }}\r\n-          />\r\n-        )}\r\n-      </div>\r\n-    </ErrorBoundary>\r\n-  );\r\n-};\r\n-\r\n+import React, { useState } from 'react';\n+import { Plus, Upload } from 'lucide-react';\n+import { usePermissions } from '../hooks/usePermissions';\n+import { useStaff } from '../hooks/useStaff';\n+import { useAuth } from '../hooks/useAuth';\n+import { useToast } from '../hooks/useToast';\n+import ErrorBoundary from '../components/ErrorBoundary';\n+import LoadingSpinner from '../components/LoadingSpinner';\n+import StaffList from '../components/staff/StaffList';\n+import AddStaffDialog from '../components/staff/AddStaffDialog';\n+import StaffFilters from '../components/staff/StaffFilters';\n+import BulkImportDialog from '../components/BulkImport/BulkImportDialog';\n+import { Button } from '../components/ui/button';\n+import { logger } from '../lib/logger';\n+\n+const Staff = () => {\n+  const { can } = usePermissions();\n+  const { user } = useAuth();\n+  const { showToast } = useToast();\n+  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n+  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\n+  const [filters, setFilters] = useState({\n+    role: '',\n+    department: '',\n+    status: '',\n+    search: ''\n+  });\n+\n+  const { \n+    staff, \n+    loading, \n+    error,\n+    addStaff,\n+    updateStaff,\n+    deleteStaff,\n+    inviteStaff,\n+    refresh\n+  } = useStaff();\n+\n+  if (!can('staff')) {\n+    return (\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n+        <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\n+        <p className=\"mt-2 text-sm text-red-600\">\n+          You do not have permission to access staff management.\n+        </p>\n+      </div>\n+    );\n+  }\n+\n+  const handleAddStaff = async (data: any) => {\n+    try {\n+      await addStaff(data);\n+      setIsAddModalOpen(false);\n+      showToast('Staff member added successfully', { type: 'success' });\n+    } catch (err) {\n+      const message = err instanceof Error ? err.message : 'Failed to add staff member';\n+      showToast(message, { type: 'error' });\n+      logger.error(message, {\n+        context: { error: err },\n+        source: 'Staff'\n+      });\n+    }\n+  };\n+\n+  const handleInviteStaff = async (email: string, role: string) => {\n+    try {\n+      await inviteStaff(email, role);\n+      showToast('Invitation sent successfully', { type: 'success' });\n+    } catch (err) {\n+      const message = err instanceof Error ? err.message : 'Failed to send invitation';\n+      showToast(message, { type: 'error' });\n+      logger.error(message, {\n+        context: { error: err },\n+        source: 'Staff'\n+      });\n+    }\n+  };\n+\n+  const handleBulkImport = async (data: any[]) => {\n+    try {\n+      for (const staff of data) {\n+        await addStaff(staff);\n+      }\n+      setIsImportModalOpen(false);\n+      showToast('Staff imported successfully', { type: 'success' });\n+    } catch (err) {\n+      const message = err instanceof Error ? err.message : 'Failed to import staff';\n+      showToast(message, { type: 'error' });\n+      logger.error(message, {\n+        context: { error: err },\n+        source: 'Staff'\n+      });\n+    }\n+  };\n+\n+  if (loading) {\n+    return <LoadingSpinner message=\"Loading staff management...\" />;\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n+        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\n+        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n+        <button\n+          onClick={() => refresh()}\n+          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\n+        >\n+          Retry Loading\n+        </button>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <ErrorBoundary source=\"Staff\">\n+      <div className=\"space-y-6\">\n+        {/* Header */}\n+        <div className=\"flex justify-between items-center\">\n+          <div>\n+            <h1 className=\"text-2xl font-semibold text-gray-900\">Staff Management</h1>\n+            <p className=\"mt-1 text-sm text-gray-500\">\n+              Manage staff members and their roles\n+            </p>\n+          </div>\n+          <div className=\"flex space-x-4\">\n+            <Button\n+              variant=\"outline\"\n+              onClick={() => setIsImportModalOpen(true)}\n+            >\n+              <Upload className=\"h-4 w-4 mr-2\" />\n+              Import Staff\n+            </Button>\n+            <Button\n+              onClick={() => setIsAddModalOpen(true)}\n+            >\n+              <Plus className=\"h-4 w-4 mr-2\" />\n+              Add Staff\n+            </Button>\n+          </div>\n+        </div>\n+\n+        {/* Filters */}\n+        <StaffFilters\n+          filters={filters}\n+          onFilterChange={setFilters}\n+        />\n+\n+        {/* Staff List */}\n+        <StaffList\n+          staff={staff}\n+          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\n+          onDelete={(id) => deleteStaff.mutate(id)}\n+          filters={filters}\n+        />\n+\n+        {/* Add Staff Modal */}\n+        {isAddModalOpen && (\n+          <AddStaffDialog\n+            onClose={() => setIsAddModalOpen(false)}\n+            onSubmit={handleAddStaff}\n+            onInvite={handleInviteStaff}\n+          />\n+        )}\n+\n+        {/* Import Modal */}\n+        {isImportModalOpen && (\n+          <BulkImportDialog\n+            title=\"Import Staff\"\n+            onImport={handleBulkImport}\n+            onClose={() => setIsImportModalOpen(false)}\n+            template={{\n+              headers: [\n+                'name',\n+                'email',\n+                'role',\n+                'department',\n+                'school_id'\n+              ],\n+              sampleData: [{\n+                name: 'John Smith',\n+                email: 'john@example.com',\n+                role: 'teacher',\n+                department: 'English',\n+                school_id: 'school-123'\n+              }]\n+            }}\n+            validateRow={(row) => {\n+              const errors = [];\n+              if (!row.name) errors.push('Name is required');\n+              if (!row.email) errors.push('Email is required');\n+              if (!row.role) errors.push('Role is required');\n+              return {\n+                isValid: errors.length === 0,\n+                errors\n+              };\n+            }}\n+          />\n+        )}\n+      </div>\n+    </ErrorBoundary>\n+  );\n+};\n+\n export default Staff;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739440116596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import React, { useState } from 'react';\n-import { Plus, Upload } from 'lucide-react';\n+import React, { useState, useEffect } from 'react';\n+import { Plus, Upload, Shield } from 'lucide-react';\n import { usePermissions } from '../hooks/usePermissions';\n import { useStaff } from '../hooks/useStaff';\n import { useAuth } from '../hooks/useAuth';\n import { useToast } from '../hooks/useToast';\n@@ -11,8 +11,9 @@\n import StaffFilters from '../components/staff/StaffFilters';\n import BulkImportDialog from '../components/BulkImport/BulkImportDialog';\n import { Button } from '../components/ui/button';\n import { logger } from '../lib/logger';\n+import type { Staff } from '../types';\n \n const Staff = () => {\n   const { can } = usePermissions();\n   const { user } = useAuth();\n@@ -36,28 +37,49 @@\n     inviteStaff,\n     refresh\n   } = useStaff();\n \n+  useEffect(() => {\n+    if (!user) {\n+      showToast('Please log in to access staff management', { type: 'error' });\n+    }\n+  }, [user, showToast]);\n+\n+  if (!user) {\n+    return (\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n+        <h3 className=\"text-lg font-medium text-red-800\">Authentication Required</h3>\n+        <p className=\"mt-2 text-sm text-red-600\">\n+          Please log in to access staff management.\n+        </p>\n+      </div>\n+    );\n+  }\n+\n   if (!can('staff')) {\n     return (\n       <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n-        <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\n+        <div className=\"flex items-center gap-2\">\n+          <Shield className=\"h-5 w-5 text-red-600\" />\n+          <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\n+        </div>\n         <p className=\"mt-2 text-sm text-red-600\">\n           You do not have permission to access staff management.\n         </p>\n       </div>\n     );\n   }\n \n-  const handleAddStaff = async (data: any) => {\n+  const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n-      await addStaff(data);\n+      await addStaff.mutateAsync({\n+        ...data,\n+        status: 'active'\n+      });\n       setIsAddModalOpen(false);\n-      showToast('Staff member added successfully', { type: 'success' });\n     } catch (err) {\n-      const message = err instanceof Error ? err.message : 'Failed to add staff member';\n-      showToast(message, { type: 'error' });\n-      logger.error(message, {\n+      // Error handling is done in the mutation\n+      logger.error('Staff addition failed', {\n         context: { error: err },\n         source: 'Staff'\n       });\n     }\n@@ -69,26 +91,52 @@\n       showToast('Invitation sent successfully', { type: 'success' });\n     } catch (err) {\n       const message = err instanceof Error ? err.message : 'Failed to send invitation';\n       showToast(message, { type: 'error' });\n-      logger.error(message, {\n+      logger.error('Staff invitation failed', {\n         context: { error: err },\n         source: 'Staff'\n       });\n     }\n   };\n \n-  const handleBulkImport = async (data: any[]) => {\n+  const handleBulkImport = async (data: Array<Omit<Staff, 'id'>>) => {\n     try {\n-      for (const staff of data) {\n-        await addStaff(staff);\n+      let successCount = 0;\n+      let errorCount = 0;\n+\n+      for (const staffMember of data) {\n+        try {\n+          await addStaff.mutateAsync({\n+            ...staffMember,\n+            status: 'active'\n+          });\n+          successCount++;\n+        } catch (err) {\n+          errorCount++;\n+          logger.error('Failed to import staff member', {\n+            context: { error: err, staffMember },\n+            source: 'Staff'\n+          });\n+        }\n       }\n+\n       setIsImportModalOpen(false);\n-      showToast('Staff imported successfully', { type: 'success' });\n+      \n+      if (successCount > 0) {\n+        showToast(`Successfully imported ${successCount} staff member${successCount !== 1 ? 's' : ''}`, { \n+          type: 'success' \n+        });\n+      }\n+      \n+      if (errorCount > 0) {\n+        showToast(`Failed to import ${errorCount} staff member${errorCount !== 1 ? 's' : ''}`, { \n+          type: 'error' \n+        });\n+      }\n     } catch (err) {\n-      const message = err instanceof Error ? err.message : 'Failed to import staff';\n-      showToast(message, { type: 'error' });\n-      logger.error(message, {\n+      showToast('Failed to import staff', { type: 'error' });\n+      logger.error('Bulk import failed', {\n         context: { error: err },\n         source: 'Staff'\n       });\n     }\n@@ -100,16 +148,19 @@\n \n   if (error) {\n     return (\n       <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n-        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\n+        <div className=\"flex items-center gap-2\">\n+          <Shield className=\"h-5 w-5 text-red-600\" />\n+          <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\n+        </div>\n         <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n-        <button\n+        <Button\n           onClick={() => refresh()}\n           className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\n         >\n           Retry Loading\n-        </button>\n+        </Button>\n       </div>\n     );\n   }\n \n@@ -149,10 +200,10 @@\n \n         {/* Staff List */}\n         <StaffList\n           staff={staff}\n-          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\n-          onDelete={(id) => deleteStaff.mutate(id)}\n+          onUpdate={updateStaff.mutate}\n+          onDelete={deleteStaff.mutate}\n           filters={filters}\n         />\n \n         {/* Add Staff Modal */}\n"
                },
                {
                    "date": 1739440405681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n \n         {/* Staff List */}\n         <StaffList\n           staff={staff}\n-          onUpdate={updateStaff.mutate}\n+          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\n           onDelete={deleteStaff.mutate}\n           filters={filters}\n         />\n \n"
                },
                {
                    "date": 1739441057814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active'\n+        status: 'active' as 'active' | 'inactive' | 'pending'\n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1739441064838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active' as 'active' | 'inactive' | 'pending'\n+        status: 'active' as 'active' | 'inactive'\n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1739441104853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active' as 'active' | 'inactive'\n+        status: 'active' as 'active' | 'inactive' \n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1739441112348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active' as 'active' | 'inactive' \n+        status: 'active' as 'active' | 'inactive' \\\n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1739441117944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active' as 'active' | 'inactive' \\\n+        status: 'active' as 'active' | 'inactive' | \n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1739441125376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active' as 'active' | 'inactive' | \n+        status: 'active' as 'active' | 'inactive' | 'PENDING'\n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1739441132476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n     try {\n       await addStaff.mutateAsync({\n         ...data,\n-        status: 'active' as 'active' | 'inactive' | 'PENDING'\n+        status: 'active' as 'active' | 'inactive' | 'pending'\n       });\n       setIsAddModalOpen(false);\n     } catch (err) {\n       // Error handling is done in the mutation\n"
                },
                {
                    "date": 1740926458079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,257 +1,257 @@\n-import React, { useState, useEffect } from 'react';\n-import { Plus, Upload, Shield } from 'lucide-react';\n-import { usePermissions } from '../hooks/usePermissions';\n-import { useStaff } from '../hooks/useStaff';\n-import { useAuth } from '../hooks/useAuth';\n-import { useToast } from '../hooks/useToast';\n-import ErrorBoundary from '../components/ErrorBoundary';\n-import LoadingSpinner from '../components/LoadingSpinner';\n-import StaffList from '../components/staff/StaffList';\n-import AddStaffDialog from '../components/staff/AddStaffDialog';\n-import StaffFilters from '../components/staff/StaffFilters';\n-import BulkImportDialog from '../components/BulkImport/BulkImportDialog';\n-import { Button } from '../components/ui/button';\n-import { logger } from '../lib/logger';\n-import type { Staff } from '../types';\n-\n-const Staff = () => {\n-  const { can } = usePermissions();\n-  const { user } = useAuth();\n-  const { showToast } = useToast();\n-  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n-  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\n-  const [filters, setFilters] = useState({\n-    role: '',\n-    department: '',\n-    status: '',\n-    search: ''\n-  });\n-\n-  const { \n-    staff, \n-    loading, \n-    error,\n-    addStaff,\n-    updateStaff,\n-    deleteStaff,\n-    inviteStaff,\n-    refresh\n-  } = useStaff();\n-\n-  useEffect(() => {\n-    if (!user) {\n-      showToast('Please log in to access staff management', { type: 'error' });\n-    }\n-  }, [user, showToast]);\n-\n-  if (!user) {\n-    return (\n-      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n-        <h3 className=\"text-lg font-medium text-red-800\">Authentication Required</h3>\n-        <p className=\"mt-2 text-sm text-red-600\">\n-          Please log in to access staff management.\n-        </p>\n-      </div>\n-    );\n-  }\n-\n-  if (!can('staff')) {\n-    return (\n-      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n-        <div className=\"flex items-center gap-2\">\n-          <Shield className=\"h-5 w-5 text-red-600\" />\n-          <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\n-        </div>\n-        <p className=\"mt-2 text-sm text-red-600\">\n-          You do not have permission to access staff management.\n-        </p>\n-      </div>\n-    );\n-  }\n-\n-  const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\n-    try {\n-      await addStaff.mutateAsync({\n-        ...data,\n-        status: 'active' as 'active' | 'inactive' | 'pending'\n-      });\n-      setIsAddModalOpen(false);\n-    } catch (err) {\n-      // Error handling is done in the mutation\n-      logger.error('Staff addition failed', {\n-        context: { error: err },\n-        source: 'Staff'\n-      });\n-    }\n-  };\n-\n-  const handleInviteStaff = async (email: string, role: string) => {\n-    try {\n-      await inviteStaff(email, role);\n-      showToast('Invitation sent successfully', { type: 'success' });\n-    } catch (err) {\n-      const message = err instanceof Error ? err.message : 'Failed to send invitation';\n-      showToast(message, { type: 'error' });\n-      logger.error('Staff invitation failed', {\n-        context: { error: err },\n-        source: 'Staff'\n-      });\n-    }\n-  };\n-\n-  const handleBulkImport = async (data: Array<Omit<Staff, 'id'>>) => {\n-    try {\n-      let successCount = 0;\n-      let errorCount = 0;\n-\n-      for (const staffMember of data) {\n-        try {\n-          await addStaff.mutateAsync({\n-            ...staffMember,\n-            status: 'active'\n-          });\n-          successCount++;\n-        } catch (err) {\n-          errorCount++;\n-          logger.error('Failed to import staff member', {\n-            context: { error: err, staffMember },\n-            source: 'Staff'\n-          });\n-        }\n-      }\n-\n-      setIsImportModalOpen(false);\n-      \n-      if (successCount > 0) {\n-        showToast(`Successfully imported ${successCount} staff member${successCount !== 1 ? 's' : ''}`, { \n-          type: 'success' \n-        });\n-      }\n-      \n-      if (errorCount > 0) {\n-        showToast(`Failed to import ${errorCount} staff member${errorCount !== 1 ? 's' : ''}`, { \n-          type: 'error' \n-        });\n-      }\n-    } catch (err) {\n-      showToast('Failed to import staff', { type: 'error' });\n-      logger.error('Bulk import failed', {\n-        context: { error: err },\n-        source: 'Staff'\n-      });\n-    }\n-  };\n-\n-  if (loading) {\n-    return <LoadingSpinner message=\"Loading staff management...\" />;\n-  }\n-\n-  if (error) {\n-    return (\n-      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n-        <div className=\"flex items-center gap-2\">\n-          <Shield className=\"h-5 w-5 text-red-600\" />\n-          <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\n-        </div>\n-        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n-        <Button\n-          onClick={() => refresh()}\n-          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\n-        >\n-          Retry Loading\n-        </Button>\n-      </div>\n-    );\n-  }\n-\n-  return (\n-    <ErrorBoundary source=\"Staff\">\n-      <div className=\"space-y-6\">\n-        {/* Header */}\n-        <div className=\"flex justify-between items-center\">\n-          <div>\n-            <h1 className=\"text-2xl font-semibold text-gray-900\">Staff Management</h1>\n-            <p className=\"mt-1 text-sm text-gray-500\">\n-              Manage staff members and their roles\n-            </p>\n-          </div>\n-          <div className=\"flex space-x-4\">\n-            <Button\n-              variant=\"outline\"\n-              onClick={() => setIsImportModalOpen(true)}\n-            >\n-              <Upload className=\"h-4 w-4 mr-2\" />\n-              Import Staff\n-            </Button>\n-            <Button\n-              onClick={() => setIsAddModalOpen(true)}\n-            >\n-              <Plus className=\"h-4 w-4 mr-2\" />\n-              Add Staff\n-            </Button>\n-          </div>\n-        </div>\n-\n-        {/* Filters */}\n-        <StaffFilters\n-          filters={filters}\n-          onFilterChange={setFilters}\n-        />\n-\n-        {/* Staff List */}\n-        <StaffList\n-          staff={staff}\n-          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\n-          onDelete={deleteStaff.mutate}\n-          filters={filters}\n-        />\n-\n-        {/* Add Staff Modal */}\n-        {isAddModalOpen && (\n-          <AddStaffDialog\n-            onClose={() => setIsAddModalOpen(false)}\n-            onSubmit={handleAddStaff}\n-            onInvite={handleInviteStaff}\n-          />\n-        )}\n-\n-        {/* Import Modal */}\n-        {isImportModalOpen && (\n-          <BulkImportDialog\n-            title=\"Import Staff\"\n-            onImport={handleBulkImport}\n-            onClose={() => setIsImportModalOpen(false)}\n-            template={{\n-              headers: [\n-                'name',\n-                'email',\n-                'role',\n-                'department',\n-                'school_id'\n-              ],\n-              sampleData: [{\n-                name: 'John Smith',\n-                email: 'john@example.com',\n-                role: 'teacher',\n-                department: 'English',\n-                school_id: 'school-123'\n-              }]\n-            }}\n-            validateRow={(row) => {\n-              const errors = [];\n-              if (!row.name) errors.push('Name is required');\n-              if (!row.email) errors.push('Email is required');\n-              if (!row.role) errors.push('Role is required');\n-              return {\n-                isValid: errors.length === 0,\n-                errors\n-              };\n-            }}\n-          />\n-        )}\n-      </div>\n-    </ErrorBoundary>\n-  );\n-};\n-\n+import { useState, useEffect } from 'react';\r\n+import { Plus, Upload, Shield } from 'lucide-react';\r\n+import { usePermissions } from '../hooks/usePermissions';\r\n+import { useStaff } from '../hooks/useStaff';\r\n+import { useAuth } from '../hooks/useAuth';\r\n+import { useToast } from '../hooks/useToast';\r\n+import ErrorBoundary from '../components/ErrorBoundary';\r\n+import LoadingSpinner from '../components/LoadingSpinner';\r\n+import StaffList from '../components/staff/StaffList';\r\n+import AddStaffDialog from '../components/staff/AddStaffDialog';\r\n+import StaffFilters from '../components/staff/StaffFilters';\r\n+import BulkImportDialog from '../components/BulkImport/BulkImportDialog';\r\n+import { Button } from '../components/ui/button';\r\n+import { logger } from '../lib/logger';\r\n+import type { Staff } from '../types';\r\n+\r\n+const Staff = () => {\r\n+  const { can } = usePermissions();\r\n+  const { user } = useAuth();\r\n+  const { showToast } = useToast();\r\n+  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n+  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n+  const [filters, setFilters] = useState({\r\n+    role: '',\r\n+    department: '',\r\n+    status: '',\r\n+    search: ''\r\n+  });\r\n+\r\n+  const { \r\n+    staff, \r\n+    loading, \r\n+    error,\r\n+    addStaff,\r\n+    updateStaff,\r\n+    deleteStaff,\r\n+    inviteStaff,\r\n+    refresh\r\n+  } = useStaff();\r\n+\r\n+  useEffect(() => {\r\n+    if (!user) {\r\n+      showToast('Please log in to access staff management', { type: 'error' });\r\n+    }\r\n+  }, [user, showToast]);\r\n+\r\n+  if (!user) {\r\n+    return (\r\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n+        <h3 className=\"text-lg font-medium text-red-800\">Authentication Required</h3>\r\n+        <p className=\"mt-2 text-sm text-red-600\">\r\n+          Please log in to access staff management.\r\n+        </p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!can('staff')) {\r\n+    return (\r\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <Shield className=\"h-5 w-5 text-red-600\" />\r\n+          <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\r\n+        </div>\r\n+        <p className=\"mt-2 text-sm text-red-600\">\r\n+          You do not have permission to access staff management.\r\n+        </p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  const handleAddStaff = async (data: Omit<Staff, 'id' | 'created_at' | 'updated_at'>) => {\r\n+    try {\r\n+      await addStaff.mutateAsync({\r\n+        ...data,\r\n+        status: 'active' as 'active' | 'inactive' | 'pending'\r\n+      });\r\n+      setIsAddModalOpen(false);\r\n+    } catch (err) {\r\n+      // Error handling is done in the mutation\r\n+      logger.error('Staff addition failed', {\r\n+        context: { error: err },\r\n+        source: 'Staff'\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const handleInviteStaff = async (email: string, role: string) => {\r\n+    try {\r\n+      await inviteStaff(email, role);\r\n+      showToast('Invitation sent successfully', { type: 'success' });\r\n+    } catch (err) {\r\n+      const message = err instanceof Error ? err.message : 'Failed to send invitation';\r\n+      showToast(message, { type: 'error' });\r\n+      logger.error('Staff invitation failed', {\r\n+        context: { error: err },\r\n+        source: 'Staff'\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const handleBulkImport = async (data: Array<Omit<Staff, 'id'>>) => {\r\n+    try {\r\n+      let successCount = 0;\r\n+      let errorCount = 0;\r\n+\r\n+      for (const staffMember of data) {\r\n+        try {\r\n+          await addStaff.mutateAsync({\r\n+            ...staffMember,\r\n+            status: 'active'\r\n+          });\r\n+          successCount++;\r\n+        } catch (err) {\r\n+          errorCount++;\r\n+          logger.error('Failed to import staff member', {\r\n+            context: { error: err, staffMember },\r\n+            source: 'Staff'\r\n+          });\r\n+        }\r\n+      }\r\n+\r\n+      setIsImportModalOpen(false);\r\n+      \r\n+      if (successCount > 0) {\r\n+        showToast(`Successfully imported ${successCount} staff member${successCount !== 1 ? 's' : ''}`, { \r\n+          type: 'success' \r\n+        });\r\n+      }\r\n+      \r\n+      if (errorCount > 0) {\r\n+        showToast(`Failed to import ${errorCount} staff member${errorCount !== 1 ? 's' : ''}`, { \r\n+          type: 'error' \r\n+        });\r\n+      }\r\n+    } catch (err) {\r\n+      showToast('Failed to import staff', { type: 'error' });\r\n+      logger.error('Bulk import failed', {\r\n+        context: { error: err },\r\n+        source: 'Staff'\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return <LoadingSpinner message=\"Loading staff management...\" />;\r\n+  }\r\n+\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <Shield className=\"h-5 w-5 text-red-600\" />\r\n+          <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n+        </div>\r\n+        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\r\n+        <Button\r\n+          onClick={() => refresh()}\r\n+          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n+        >\r\n+          Retry Loading\r\n+        </Button>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <ErrorBoundary source=\"Staff\">\r\n+      <div className=\"space-y-6\">\r\n+        {/* Header */}\r\n+        <div className=\"flex justify-between items-center\">\r\n+          <div>\r\n+            <h1 className=\"text-2xl font-semibold text-gray-900\">Staff Management</h1>\r\n+            <p className=\"mt-1 text-sm text-gray-500\">\r\n+              Manage staff members and their roles\r\n+            </p>\r\n+          </div>\r\n+          <div className=\"flex space-x-4\">\r\n+            <Button\r\n+              variant=\"outline\"\r\n+              onClick={() => setIsImportModalOpen(true)}\r\n+            >\r\n+              <Upload className=\"h-4 w-4 mr-2\" />\r\n+              Import Staff\r\n+            </Button>\r\n+            <Button\r\n+              onClick={() => setIsAddModalOpen(true)}\r\n+            >\r\n+              <Plus className=\"h-4 w-4 mr-2\" />\r\n+              Add Staff\r\n+            </Button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Filters */}\r\n+        <StaffFilters\r\n+          filters={filters}\r\n+          onFilterChange={setFilters}\r\n+        />\r\n+\r\n+        {/* Staff List */}\r\n+        <StaffList\r\n+          staff={staff}\r\n+          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\r\n+          onDelete={deleteStaff.mutate}\r\n+          filters={filters}\r\n+        />\r\n+\r\n+        {/* Add Staff Modal */}\r\n+        {isAddModalOpen && (\r\n+          <AddStaffDialog\r\n+            onClose={() => setIsAddModalOpen(false)}\r\n+            onSubmit={handleAddStaff}\r\n+            onInvite={handleInviteStaff}\r\n+          />\r\n+        )}\r\n+\r\n+        {/* Import Modal */}\r\n+        {isImportModalOpen && (\r\n+          <BulkImportDialog\r\n+            title=\"Import Staff\"\r\n+            onImport={handleBulkImport}\r\n+            onClose={() => setIsImportModalOpen(false)}\r\n+            template={{\r\n+              headers: [\r\n+                'name',\r\n+                'email',\r\n+                'role',\r\n+                'department',\r\n+                'school_id'\r\n+              ],\r\n+              sampleData: [{\r\n+                name: 'John Smith',\r\n+                email: 'john@example.com',\r\n+                role: 'teacher',\r\n+                department: 'English',\r\n+                school_id: 'school-123'\r\n+              }]\r\n+            }}\r\n+            validateRow={(row) => {\r\n+              const errors = [];\r\n+              if (!row.name) errors.push('Name is required');\r\n+              if (!row.email) errors.push('Email is required');\r\n+              if (!row.role) errors.push('Role is required');\r\n+              return {\r\n+                isValid: errors.length === 0,\r\n+                errors\r\n+              };\r\n+            }}\r\n+          />\r\n+        )}\r\n+      </div>\r\n+    </ErrorBoundary>\r\n+  );\r\n+};\r\n+\r\n export default Staff;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1739439891112,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Plus, Upload } from 'lucide-react';\r\nimport { usePermissions } from '../hooks/usePermissions';\r\nimport { useStaff } from '../hooks/useStaff';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useToast } from '../hooks/useToast';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport StaffList from '../components/staff/StaffList';\r\nimport AddStaffDialog from '../components/staff/AddStaffDialog';\r\nimport StaffFilters from '../components/staff/StaffFilters';\r\nimport BulkImportDialog from '../components/BulkImport/BulkImportDialog';\r\nimport { Button } from '../components/ui/button';\r\nimport { logger } from '../lib/logger';\r\n\r\nconst Staff = () => {\r\n  const { can } = usePermissions();\r\n  const { user } = useAuth();\r\n  const { showToast } = useToast();\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    role: '',\r\n    department: '',\r\n    status: '',\r\n    search: ''\r\n  });\r\n\r\n  const { \r\n    staff, \r\n    loading, \r\n    error,\r\n    addStaff,\r\n    updateStaff,\r\n    deleteStaff,\r\n    inviteStaff,\r\n    refresh\r\n  } = useStaff();\r\n\r\n  if (!can('staff')) {\r\n    return (\r\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n        <h3 className=\"text-lg font-medium text-red-800\">Access Denied</h3>\r\n        <p className=\"mt-2 text-sm text-red-600\">\r\n          You do not have permission to access staff management.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleAddStaff = async (data: any) => {\r\n    try {\r\n      // Validate school permission first\r\n      if (!data.school_id) {\r\n        throw new Error('School selection is required');\r\n      }\r\n\r\n      // Add additional validation as needed\r\n      if (!data.name || !data.email || !data.role) {\r\n        throw new Error('Name, email and role are required');\r\n      }\r\n\r\n      await addStaff.mutateAsync({\r\n        ...data,\r\n        status: 'invited'\r\n      });\r\n\r\n      setIsAddModalOpen(false);\r\n      showToast('Staff member added successfully', { type: 'success' });\r\n    } catch (err) {\r\n      const message = err instanceof Error \r\n        ? err.message \r\n        : 'Failed to add staff member';\r\n      \r\n      logger.error('Failed to add staff member', {\r\n        context: { error: err, data },\r\n        source: 'Staff'\r\n      });\r\n      \r\n      showToast(message, { type: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleInviteStaff = async (email: string, role: string) => {\r\n    try {\r\n      await inviteStaff(email, role);\r\n      showToast('Invitation sent successfully', { type: 'success' });\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : 'Failed to send invitation';\r\n      showToast(message, { type: 'error' });\r\n      logger.error(message, {\r\n        context: { error: err },\r\n        source: 'Staff'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkImport = async (data: any[]) => {\r\n    try {\r\n      for (const staff of data) {\r\n        await addStaff(staff);\r\n      }\r\n      setIsImportModalOpen(false);\r\n      showToast('Staff imported successfully', { type: 'success' });\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : 'Failed to import staff';\r\n      showToast(message, { type: 'error' });\r\n      logger.error(message, {\r\n        context: { error: err },\r\n        source: 'Staff'\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Loading staff management...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\r\n        <button\r\n          onClick={() => refresh()}\r\n          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n        >\r\n          Retry Loading\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary source=\"Staff\">\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Staff Management</h1>\r\n            <p className=\"mt-1 text-sm text-gray-500\">\r\n              Manage staff members and their roles\r\n            </p>\r\n          </div>\r\n          <div className=\"flex space-x-4\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setIsImportModalOpen(true)}\r\n            >\r\n              <Upload className=\"h-4 w-4 mr-2\" />\r\n              Import Staff\r\n            </Button>\r\n            <Button\r\n              onClick={() => setIsAddModalOpen(true)}\r\n            >\r\n              <Plus className=\"h-4 w-4 mr-2\" />\r\n              Add Staff\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <StaffFilters\r\n          filters={filters}\r\n          onFilterChange={setFilters}\r\n        />\r\n\r\n        {/* Staff List */}\r\n        <StaffList\r\n          staff={staff}\r\n          onUpdate={(id, updates) => updateStaff.mutate({ id, updates })}\r\n          onDelete={(id) => deleteStaff.mutate(id)}\r\n          filters={filters}\r\n        />\r\n\r\n        {/* Add Staff Modal */}\r\n        {isAddModalOpen && (\r\n          <AddStaffDialog\r\n            onClose={() => setIsAddModalOpen(false)}\r\n            onSubmit={handleAddStaff}\r\n            onInvite={handleInviteStaff}\r\n          />\r\n        )}\r\n\r\n        {/* Import Modal */}\r\n        {isImportModalOpen && (\r\n          <BulkImportDialog\r\n            title=\"Import Staff\"\r\n            onImport={handleBulkImport}\r\n            onClose={() => setIsImportModalOpen(false)}\r\n            template={{\r\n              headers: [\r\n                'name',\r\n                'email',\r\n                'role',\r\n                'department',\r\n                'school_id'\r\n              ],\r\n              sampleData: [{\r\n                name: 'John Smith',\r\n                email: 'john@example.com',\r\n                role: 'teacher',\r\n                department: 'English',\r\n                school_id: 'school-123'\r\n              }]\r\n            }}\r\n            validateRow={(row) => {\r\n              const errors = [];\r\n              if (!row.name) errors.push('Name is required');\r\n              if (!row.email) errors.push('Email is required');\r\n              if (!row.role) errors.push('Role is required');\r\n              return {\r\n                isValid: errors.length === 0,\r\n                errors\r\n              };\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Staff;"
        }
    ]
}