{
    "sourceFile": "src/pages/Students.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1740926269299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740926291430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import { Plus, Upload, Users, Search } from 'lucide-react';\r\n+import { Plus, Upload, Users, Search, Trash, Edit } from 'lucide-react';\r\n import { useStudents } from '../hooks/useStudents';\r\n import BulkImportDialog from '../components/BulkImport/BulkImportDialog';\r\n import { useSchools } from '../hooks/useSchools';\r\n import {\r\n@@ -10,18 +10,31 @@\n   SelectTrigger,\r\n   SelectValue,\r\n } from '../components/ui/select';\r\n import LoadingSpinner from '../components/LoadingSpinner';\r\n+import {\r\n+  AlertDialog,\r\n+  AlertDialogAction,\r\n+  AlertDialogCancel,\r\n+  AlertDialogContent,\r\n+  AlertDialogDescription,\r\n+  AlertDialogFooter,\r\n+  AlertDialogHeader,\r\n+  AlertDialogTitle,\r\n+} from \"../components/ui/alert-dialog\";\r\n+import { toast } from \"../components/ui/use-toast\";\r\n \r\n const Students = () => {\r\n   const { students, loading, error, addStudent, deleteStudent } = useStudents();\r\n   const { schools } = useSchools();\r\n   const [isLoading, setIsLoading] = useState(true);\r\n   const [selectedSchool, setSelectedSchool] = useState<string>('');\r\n   const [selectedGrade, setSelectedGrade] = useState<string>('');\r\n-  const [_isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n+  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n   const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n   const [searchQuery, setSearchQuery] = useState('');\r\n+  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n+  const [studentToDelete, setStudentToDelete] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     if (!loading) {\r\n       setIsLoading(false);\r\n@@ -64,8 +77,34 @@\n     \r\n     setIsImportModalOpen(false);\r\n   };\r\n \r\n+  const handleDeleteClick = (studentId: string) => {\r\n+    setStudentToDelete(studentId);\r\n+    setDeleteDialogOpen(true);\r\n+  };\r\n+\r\n+  const confirmDelete = async () => {\r\n+    if (studentToDelete) {\r\n+      try {\r\n+        await deleteStudent.mutateAsync(studentToDelete);\r\n+        toast({\r\n+          title: \"Student deleted\",\r\n+          description: \"The student has been successfully removed from the system.\",\r\n+          variant: \"default\",\r\n+        });\r\n+      } catch (error) {\r\n+        toast({\r\n+          title: \"Error\",\r\n+          description: \"Failed to delete student. Please try again.\",\r\n+          variant: \"destructive\",\r\n+        });\r\n+      }\r\n+    }\r\n+    setDeleteDialogOpen(false);\r\n+    setStudentToDelete(null);\r\n+  };\r\n+\r\n   if (isLoading) {\r\n     return (\r\n       <LoadingSpinner message=\"Loading students...\" />\r\n     );\r\n@@ -278,8 +317,24 @@\n             };\r\n           }}\r\n         />\r\n       )}\r\n+\r\n+      {/* Delete Dialog */}\r\n+      {deleteDialogOpen && (\r\n+        <AlertDialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\r\n+          <AlertDialogContent>\r\n+            <AlertDialogHeader>\r\n+              <AlertDialogTitle>Are you sure you want to delete this student?</AlertDialogTitle>\r\n+              <AlertDialogDescription>This action cannot be undone.</AlertDialogDescription>\r\n+            </AlertDialogHeader>\r\n+            <AlertDialogFooter>\r\n+              <AlertDialogCancel onClick={() => setDeleteDialogOpen(false)}>Cancel</AlertDialogCancel>\r\n+              <AlertDialogAction onClick={confirmDelete}>Delete</AlertDialogAction>\r\n+            </AlertDialogFooter>\r\n+          </AlertDialogContent>\r\n+        </AlertDialog>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740926330254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,16 +88,14 @@\n       try {\r\n         await deleteStudent.mutateAsync(studentToDelete);\r\n         toast({\r\n           title: \"Student deleted\",\r\n-          description: \"The student has been successfully removed from the system.\",\r\n-          variant: \"default\",\r\n+          description: \"The student has been successfully removed from the system.\"\r\n         });\r\n       } catch (error) {\r\n         toast({\r\n           title: \"Error\",\r\n-          description: \"Failed to delete student. Please try again.\",\r\n-          variant: \"destructive\",\r\n+          description: \"Failed to delete student. Please try again.\"\r\n         });\r\n       }\r\n     }\r\n     setDeleteDialogOpen(false);\r\n"
                },
                {
                    "date": 1740926360926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,11 +256,21 @@\n                 <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                   {student.guardianContact}\r\n                 </td>\r\n                 <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n-                  <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n-                    Edit\r\n-                  </button>\r\n+                  <div className=\"flex items-center justify-end space-x-3\">\r\n+                    <button className=\"text-indigo-600 hover:text-indigo-900 flex items-center\">\r\n+                      <Edit className=\"h-4 w-4 mr-1\" />\r\n+                      Edit\r\n+                    </button>\r\n+                    <button \r\n+                      onClick={() => handleDeleteClick(student.id)}\r\n+                      className=\"text-red-600 hover:text-red-900 flex items-center\"\r\n+                    >\r\n+                      <Trash className=\"h-4 w-4 mr-1\" />\r\n+                      Delete\r\n+                    </button>\r\n+                  </div>\r\n                 </td>\r\n               </tr>\r\n             ))}\r\n           </tbody>\r\n"
                },
                {
                    "date": 1740926369311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,9 @@\n       <div className=\"flex justify-between items-center mb-6\">\r\n         <h1 className=\"text-2xl font-semibold text-gray-900\">Students</h1>\r\n         <div className=\"flex space-x-4\">\r\n           <button\r\n+          \r\n             onClick={() => setIsImportModalOpen(true)}\r\n             className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n           >\r\n             <Upload className=\"h-4 w-4 mr-2\" />\r\n"
                },
                {
                    "date": 1740926377130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,9 @@\n       <div className=\"flex justify-between items-center mb-6\">\r\n         <h1 className=\"text-2xl font-semibold text-gray-900\">Students</h1>\r\n         <div className=\"flex space-x-4\">\r\n           <button\r\n-          \r\n+          title\r\n             onClick={() => setIsImportModalOpen(true)}\r\n             className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n           >\r\n             <Upload className=\"h-4 w-4 mr-2\" />\r\n"
                },
                {
                    "date": 1740926382647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,10 @@\n       <div className=\"flex justify-between items-center mb-6\">\r\n         <h1 className=\"text-2xl font-semibold text-gray-900\">Students</h1>\r\n         <div className=\"flex space-x-4\">\r\n           <button\r\n-          title\r\n+            title=\"Import Students\"\r\n+            type=\"button\"\r\n             onClick={() => setIsImportModalOpen(true)}\r\n             className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n           >\r\n             <Upload className=\"h-4 w-4 mr-2\" />\r\n"
                },
                {
                    "date": 1740926404140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n                       <Edit className=\"h-4 w-4 mr-1\" />\r\n                       Edit\r\n                     </button>\r\n                     <button \r\n-                    \r\n+                      \r\n                       onClick={() => handleDeleteClick(student.id)}\r\n                       className=\"text-red-600 hover:text-red-900 flex items-center\"\r\n                     >\r\n                       <Trash className=\"h-4 w-4 mr-1\" />\r\n"
                }
            ],
            "date": 1740926269299,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Plus, Upload, Users, Search } from 'lucide-react';\r\nimport { useStudents } from '../hooks/useStudents';\r\nimport BulkImportDialog from '../components/BulkImport/BulkImportDialog';\r\nimport { useSchools } from '../hooks/useSchools';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../components/ui/select';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst Students = () => {\r\n  const { students, loading, error, addStudent, deleteStudent } = useStudents();\r\n  const { schools } = useSchools();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedSchool, setSelectedSchool] = useState<string>('');\r\n  const [selectedGrade, setSelectedGrade] = useState<string>('');\r\n  const [_isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [loading]);\r\n\r\n  const filteredStudents = students.filter(student => {\r\n    const matchesSchool = !selectedSchool || student.schoolId === selectedSchool;\r\n    const matchesGrade = !selectedGrade || student.gradeId === selectedGrade;\r\n    const matchesSearch = !searchQuery || \r\n      student.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      student.rollNumber.toLowerCase().includes(searchQuery.toLowerCase());\r\n    return matchesSchool && matchesGrade && matchesSearch;\r\n  });\r\n\r\n  const handleBulkImport = async (data: any[]) => {\r\n    // Transform imported data to Student type\r\n    const newStudents = data.map(row => ({\r\n      name: row.name,\r\n      rollNumber: row.rollNumber,\r\n      schoolId: row.schoolId,\r\n      gradeId: row.gradeId,\r\n      gender: row.gender,\r\n      dateOfBirth: new Date(row.dateOfBirth),\r\n      contactNumber: row.contactNumber,\r\n      email: row.email,\r\n      address: row.address,\r\n      guardianName: row.guardianName,\r\n      guardianContact: row.guardianContact\r\n    }));\r\n    \r\n    // Add students in batches\r\n    for (const student of newStudents) {\r\n      await addStudent.mutateAsync({\r\n        ...student,\r\n        studentAddress: student.address,\r\n        dateOfBirth: student.dateOfBirth\r\n      });\r\n    }\r\n    \r\n    setIsImportModalOpen(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <LoadingSpinner message=\"Loading students...\" />\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n        <p className=\"mt-2 text-sm text-red-600\">{error.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Students</h1>\r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            onClick={() => setIsImportModalOpen(true)}\r\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n          >\r\n            <Upload className=\"h-4 w-4 mr-2\" />\r\n            Import Students\r\n          </button>\r\n          <button\r\n            onClick={() => setIsAddModalOpen(true)}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n          >\r\n            <Plus className=\"h-4 w-4 mr-2\" />\r\n            Add Student\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              School\r\n            </label>\r\n            <Select\r\n              value={selectedSchool}\r\n              onValueChange={setSelectedSchool}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select School\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Schools</SelectItem>\r\n                {schools.map(school => (\r\n                  <SelectItem key={school.id} value={school.id}>\r\n                    {school.name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Grade\r\n            </label>\r\n            <Select\r\n              value={selectedGrade}\r\n              onValueChange={setSelectedGrade}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select Grade\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Grades</SelectItem>\r\n                {selectedSchool && schools\r\n                  .find(s => s.id === selectedSchool)\r\n                  ?.grades?.map(grade => (\r\n                    <SelectItem key={grade} value={grade}>\r\n                      Grade {grade}\r\n                    </SelectItem>\r\n                  ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Search\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search by name or roll number\"\r\n                className=\"w-full pl-10 pr-4 py-2 border rounded-md\"\r\n              />\r\n              <Search className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Students List */}\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Roll Number\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Name\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Grade\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                School\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Guardian\r\n              </th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Contact\r\n              </th>\r\n              <th className=\"px-6 py-3 relative\">\r\n                <span className=\"sr-only\">Actions</span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {filteredStudents.map((student) => (\r\n              <tr key={student.id}>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                  {student.rollNumber}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {student.name}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  Grade {student.gradeId}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {schools.find(s => s.id === student.schoolId)?.name}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {student.guardianName}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {student.guardianContact}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  <button className=\"text-indigo-600 hover:text-indigo-900\">\r\n                    Edit\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Bulk Import Modal */}\r\n      {isImportModalOpen && (\r\n        <BulkImportDialog\r\n          title=\"Import Students\"\r\n          onImport={handleBulkImport}\r\n          onClose={() => setIsImportModalOpen(false)}\r\n          template={{\r\n            headers: [\r\n              'name',\r\n              'rollNumber',\r\n              'schoolId',\r\n              'gradeId',\r\n              'gender',\r\n              'dateOfBirth',\r\n              'contactNumber',\r\n              'email',\r\n              'address',\r\n              'guardianName',\r\n              'guardianContact'\r\n            ],\r\n            sampleData: [\r\n              {\r\n                name: 'John Smith',\r\n                rollNumber: 'G1001',\r\n                schoolId: 'school-id-1',\r\n                gradeId: 'grade-id-1',\r\n                gender: 'Male',\r\n                dateOfBirth: '2010-01-15',\r\n                contactNumber: '1234567890',\r\n                email: 'john@example.com',\r\n                address: '123 Main St',\r\n                guardianName: 'Jane Smith',\r\n                guardianContact: '9876543210'\r\n              }\r\n            ]\r\n          }}\r\n          validateRow={(row) => {\r\n            const errors = [];\r\n            if (!row.name) errors.push('Name is required');\r\n            if (!row.rollNumber) errors.push('Roll number is required');\r\n            if (!row.schoolId) errors.push('School ID is required');\r\n            if (!row.gradeId) errors.push('Grade ID is required');\r\n            return {\r\n              isValid: errors.length === 0,\r\n              errors\r\n            };\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Students;"
        }
    ]
}