{
    "sourceFile": "src/pages/Sales.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1740093625426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740093798928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,14 +24,14 @@\n   lost: 'bg-red-100 text-red-800',\r\n };\r\n \r\n const Sales: React.FC = () => {\r\n-  // Hooks\r\n-  const { leads = [], activities = [], opportunities = [], stats, loading, createLead, updateLead, addActivity } = useSales();\r\n-  const [isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n-  const [selectedLead, setSelectedLead] = useState<SalesLead | null>(null); \r\n+  // Destructure with underscore prefix for unused variables\r\n+  const { leads = [], activities = [], opportunities = [], stats, loading, _createLead, _updateLead, _addActivity } = useSales();\r\n+  const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n+  const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n   const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n-  const [loadError, setLoadError] = useState<string | null>(null);\r\n+  const [loadError, _setLoadError] = useState<string | null>(null);\r\n \r\n   if (loading) {\r\n     return (\r\n       <LoadingSpinner \r\n"
                },
                {
                    "date": 1740093925465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n };\r\n \r\n const Sales: React.FC = () => {\r\n   // Destructure with underscore prefix for unused variables\r\n-  const { leads = [], activities = [], opportunities = [], stats, loading, _createLead, _updateLead, _addActivity } = useSales();\r\n+  const { leads = [], activities = [], opportunities = [], stats, loading,  _createLead, _updateLead, _addActivity } = useSales();\r\n   const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n   const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n   const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n   const [loadError, _setLoadError] = useState<string | null>(null);\r\n"
                },
                {
                    "date": 1740093933404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,11 @@\n };\r\n \r\n const Sales: React.FC = () => {\r\n   // Destructure with underscore prefix for unused variables\r\n-  const { leads = [], activities = [], opportunities = [], stats, loading,  _createLead, _updateLead, _addActivity } = useSales();\r\n+  const { leads = [], activities = [], opportunities = [], stats, loading, _createLead, _updateLead, _addActivity } = useSales();\r\n   const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n+  \r\n   const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n   const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n   const [loadError, _setLoadError] = useState<string | null>(null);\r\n \r\n"
                },
                {
                    "date": 1740093982956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n };\r\n \r\n const Sales: React.FC = () => {\r\n   // Destructure with underscore prefix for unused variables\r\n-  const { leads = [], activities = [], opportunities = [], stats, loading, _createLead, _updateLead, _addActivity } = useSales();\r\n-  const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n+  const { leads = [], activities = [], opportunities = [], stats, loading, createLead, updateLead, addActivity } = useSales();\r\n+  const [isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n   \r\n   const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n   const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n   const [loadError, _setLoadError] = useState<string | null>(null);\r\n"
                },
                {
                    "date": 1740094074627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n             },\r\n             {\r\n               icon: DollarSign,\r\n               label: \"Revenue\",\r\n-              value: formatCurrency(stats?.revenue || 0),\r\n+              value: formatCurrency(stats?.pipelineValue || 0),\r\n               _trend: \"up\"\r\n             },\r\n             {\r\n               icon: Target,\r\n"
                },
                {
                    "date": 1740094097677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n             },\r\n             {\r\n               icon: Target,\r\n               label: \"Opportunities\",\r\n-              value: stats?.opportunities || 0,\r\n+              value: stats?.qualifiedLeads || 0,\r\n               _trend: \"up\"\r\n             },\r\n             {\r\n               icon: Activity,\r\n"
                },
                {
                    "date": 1740094556222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,15 +118,15 @@\n               _trend: \"up\"\r\n             },\r\n             {\r\n               icon: DollarSign,\r\n-              label: \"Revenue\",\r\n+              label: \"Pipeline Value\",\r\n               value: formatCurrency(stats?.pipelineValue || 0),\r\n               _trend: \"up\"\r\n             },\r\n             {\r\n               icon: Target,\r\n-              label: \"Opportunities\",\r\n+              label: \"Qualified Leads\",\r\n               value: stats?.qualifiedLeads || 0,\r\n               _trend: \"up\"\r\n             },\r\n             {\r\n"
                },
                {
                    "date": 1740094672932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,15 +24,23 @@\n   lost: 'bg-red-100 text-red-800',\r\n };\r\n \r\n const Sales: React.FC = () => {\r\n-  // Destructure with underscore prefix for unused variables\r\n-  const { leads = [], activities = [], opportunities = [], stats, loading, createLead, updateLead, addActivity } = useSales();\r\n+  const { \r\n+    leads = [], \r\n+    activities = [], \r\n+    opportunities = [], \r\n+    stats, \r\n+    loading,\r\n+    _createLead: createLead,\r\n+    _updateLead: updateLead,\r\n+    _addActivity: addActivity\r\n+  } = useSales();\r\n+  \r\n   const [isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n-  \r\n-  const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n+  const [selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n   const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n-  const [loadError, _setLoadError] = useState<string | null>(null);\r\n+  const [loadError, setLoadError] = useState<string | null>(null);\r\n \r\n   if (loading) {\r\n     return (\r\n       <LoadingSpinner \r\n"
                },
                {
                    "date": 1740094745374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,11 @@\n     activities = [], \r\n     opportunities = [], \r\n     stats, \r\n     loading,\r\n-    _createLead: createLead,\r\n-    _updateLead: updateLead,\r\n-    _addActivity: addActivity\r\n+    createLead,\r\n+    updateLead,\r\n+    addActivity\r\n   } = useSales();\r\n   \r\n   const [isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n   const [selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n"
                },
                {
                    "date": 1740095298675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,17 +30,17 @@\n     activities = [], \r\n     opportunities = [], \r\n     stats, \r\n     loading,\r\n-    createLead,\r\n-    updateLead,\r\n-    addActivity\r\n+    _createLead: createLead,\r\n+    _updateLead: updateLead,\r\n+    _addActivity: addActivity\r\n   } = useSales();\r\n   \r\n-  const [isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n-  const [selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n+  const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n+  const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n   const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n-  const [loadError, setLoadError] = useState<string | null>(null);\r\n+  const [loadError, _setLoadError] = useState<string | null>(null);\r\n \r\n   if (loading) {\r\n     return (\r\n       <LoadingSpinner \r\n"
                },
                {
                    "date": 1740095343221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n   AccordionTrigger,\r\n } from '../components/ui/accordion';\r\n import SalesTable from '../components/SalesTable';\r\n import { StatsWidget, ChartWidget, ListWidget } from '../components/widgets';\r\n+import { StatItem } from '../components/StatItem';\r\n \r\n const LEAD_STATUS_COLORS = {\r\n   new: 'bg-blue-100 text-blue-800',\r\n   contacted: 'bg-yellow-100 text-yellow-800',\r\n@@ -302,8 +303,23 @@\n             </Accordion>\r\n           </div>\r\n         </div>\r\n       )}\r\n+\r\n+      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n+        <StatItem\r\n+          title=\"Pipeline Value\"\r\n+          value={stats.pipelineValue}\r\n+          icon={DollarSign}\r\n+          className=\"bg-blue-500\"\r\n+        />\r\n+        <StatItem\r\n+          title=\"Qualified Leads\"\r\n+          value={stats.qualifiedLeads}\r\n+          icon={Target}\r\n+          className=\"bg-green-500\"\r\n+        />\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740695730052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n           id=\"recent-activities\"\r\n           title=\"Recent Activities\"\r\n           items={activities.slice(0, 5).map(activity => ({\r\n             icon: Activity,\r\n-            title: activity.subject,\r\n+            title: activity.title,\r\n             subtitle: activity.description,\r\n             timestamp: new Date(activity.createdAt).toLocaleDateString(),\r\n             status: {\r\n               label: activity.type,\r\n"
                },
                {
                    "date": 1740695897039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,10 +154,10 @@\n           id=\"recent-activities\"\r\n           title=\"Recent Activities\"\r\n           items={activities.slice(0, 5).map(activity => ({\r\n             icon: Activity,\r\n-            title: activity.title,\r\n-            subtitle: activity.description,\r\n+            title: activity.description,\r\n+            subtitle: activity.type,\r\n             timestamp: new Date(activity.createdAt).toLocaleDateString(),\r\n             status: {\r\n               label: activity.type,\r\n               color: 'bg-blue-100 text-blue-800'\r\n"
                },
                {
                    "date": 1740695973245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,9 @@\n           {Object.entries(LEAD_STATUS_COLORS).map(([status, colorClass]) => {\r\n             const stageLeads = leads.filter(lead => lead.status === status);\r\n             const stageValue = opportunities\r\n               .filter(opp => stageLeads.some(lead => lead.id === opp.leadId))\r\n-              .reduce((sum, opp) => sum + (opp.amount || 0), 0);\r\n+              .reduce((sum, opp) => sum + (opp.value || 0), 0);\r\n \r\n             return (\r\n               <div key={status} className=\"bg-white rounded-lg shadow p-4\">\r\n                 <div className=\"flex items-center justify-between mb-2\">\r\n"
                },
                {
                    "date": 1740696153083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,9 +217,9 @@\n                     <div className=\"flex items-center justify-between w-full\">\r\n                       <div className=\"flex items-center\">\r\n                         <div className=\"min-w-0 flex-1\">\r\n                           <h4 className=\"text-sm font-medium text-gray-900\">\r\n-                            {lead.companyName}\r\n+                            {lead.company}\r\n                           </h4>\r\n                           <p className=\"text-sm text-gray-500\">\r\n                             {lead.contactName}\r\n                           </p>\r\n"
                },
                {
                    "date": 1740696188679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n                           <h4 className=\"text-sm font-medium text-gray-900\">\r\n                             {lead.company}\r\n                           </h4>\r\n                           <p className=\"text-sm text-gray-500\">\r\n-                            {lead.contactName}\r\n+                            {lead.name}\r\n                           </p>\r\n                         </div>\r\n                       </div>\r\n                       <div className=\"ml-4 flex-shrink-0\">\r\n"
                },
                {
                    "date": 1740696197303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,10 +252,10 @@\n                             {lead.email || 'N/A'}\r\n                           </div>\r\n                           <div className=\"flex items-center text-sm text-gray-500\">\r\n                             <Calendar className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n-                            {lead.expectedCloseDate\r\n-                              ? new Date(lead.expectedCloseDate).toLocaleDateString()\r\n+                            {lead.createdAt\r\n+                              ? new Date(lead.createdAt).toLocaleDateString()\r\n                               : 'N/A'}\r\n                           </div>\r\n                         </div>\r\n                       </div>\r\n@@ -264,9 +264,9 @@\n                           Lead Details\r\n                         </h4>\r\n                         <div className=\"mt-2\">\r\n                           <p className=\"text-sm text-gray-500\">\r\n-                            Value: {formatCurrency(lead.estimatedValue)}\r\n+                            Value: {formatCurrency(lead.value)}\r\n                           </p>\r\n                           {lead.expectedCloseDate && (\r\n                             <p className=\"text-sm text-gray-900\">\r\n                               Expected Close: {new Date(lead.expectedCloseDate).toLocaleDateString()}\r\n"
                },
                {
                    "date": 1740696256433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,16 +263,23 @@\n                         <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n                           Lead Details\r\n                         </h4>\r\n                         <div className=\"mt-2\">\r\n-                          <p className=\"text-sm text-gray-500\">\r\n-                            Value: {formatCurrency(lead.value)}\r\n-                          </p>\r\n-                          {lead.expectedCloseDate && (\r\n-                            <p className=\"text-sm text-gray-900\">\r\n-                              Expected Close: {new Date(lead.expectedCloseDate).toLocaleDateString()}\r\n-                            </p>\r\n-                          )}\r\n+                          {(() => {\r\n+                            const relatedOpp = opportunities.find(opp => opp.leadId === lead.id);\r\n+                            return (\r\n+                              <>\r\n+                                <p className=\"text-sm text-gray-500\">\r\n+                                  Value: {formatCurrency(relatedOpp?.value || 0)}\r\n+                                </p>\r\n+                                {relatedOpp?.expectedCloseDate && (\r\n+                                  <p className=\"text-sm text-gray-900\">\r\n+                                    Expected Close: {new Date(relatedOpp.expectedCloseDate).toLocaleDateString()}\r\n+                                  </p>\r\n+                                )}\r\n+                              </>\r\n+                            );\r\n+                          })()}\r\n                         </div>\r\n                       </div>\r\n                     </div>\r\n                     <div className=\"mt-4 flex justify-between items-center\">\r\n"
                },
                {
                    "date": 1740696270611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,9 +287,9 @@\n                         <h4 className=\"text-sm font-medium text-gray-900\">\r\n                           Notes\r\n                         </h4>\r\n                         <p className=\"text-sm text-gray-500\">\r\n-                          {lead.notes || 'No notes available'}\r\n+                          {lead.description || 'No notes available'}\r\n                         </p>\r\n                       </div>\r\n                       <div className=\"text-right\">\r\n                         <p className=\"text-sm font-medium text-gray-900\">\r\n"
                },
                {
                    "date": 1740696276490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,12 +292,12 @@\n                         </p>\r\n                       </div>\r\n                       <div className=\"text-right\">\r\n                         <p className=\"text-sm font-medium text-gray-900\">\r\n-                          {formatCurrency(lead.estimatedValue)}\r\n+                          {formatCurrency(lead.value)}\r\n                         </p>\r\n                         <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n-                          lead.status === 'won' ? 'bg-green-100 text-green-800' :\r\n+                            lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n                           lead.status === 'lost' ? 'bg-red-100 text-red-800' :\r\n                           'bg-yellow-100 text-yellow-800'\r\n                         }`}>\r\n                           {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n"
                },
                {
                    "date": 1740696304796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,17 +287,17 @@\n                         <h4 className=\"text-sm font-medium text-gray-900\">\r\n                           Notes\r\n                         </h4>\r\n                         <p className=\"text-sm text-gray-500\">\r\n-                          {lead.description || 'No notes available'}\r\n+                          {lead.source || 'No notes available'}\r\n                         </p>\r\n                       </div>\r\n                       <div className=\"text-right\">\r\n                         <p className=\"text-sm font-medium text-gray-900\">\r\n                           {formatCurrency(lead.value)}\r\n                         </p>\r\n                         <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n-                            lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n+                          lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n                           lead.status === 'lost' ? 'bg-red-100 text-red-800' :\r\n                           'bg-yellow-100 text-yellow-800'\r\n                         }`}>\r\n                           {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n"
                },
                {
                    "date": 1740742931686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,9 +292,9 @@\n                         </p>\r\n                       </div>\r\n                       <div className=\"text-right\">\r\n                         <p className=\"text-sm font-medium text-gray-900\">\r\n-                          {formatCurrency(lead.value)}\r\n+                          {formatCurrency(opportunities.find(opp => opp.leadId === lead.id)?.value || 0)}\r\n                         </p>\r\n                         <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n                           lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n                           lead.status === 'lost' ? 'bg-red-100 text-red-800' :\r\n"
                },
                {
                    "date": 1740742960723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,9 +296,9 @@\n                           {formatCurrency(opportunities.find(opp => opp.leadId === lead.id)?.value || 0)}\r\n                         </p>\r\n                         <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n                           lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n-                          lead.status === 'lost' ? 'bg-red-100 text-red-800' :\r\n+                          lead.status === 'proposal' ? 'bg-red-100 text-red-800' :\r\n                           'bg-yellow-100 text-yellow-800'\r\n                         }`}>\r\n                           {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n                         </span>\r\n"
                },
                {
                    "date": 1740743032750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n       <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n         <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n         <p className=\"mt-2 text-sm text-red-600\">{loadError}</p>\r\n         <button\r\n+          type=\"button\"\r\n           onClick={() => window.location.reload()}\r\n           className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n         >\r\n           Retry\r\n"
                },
                {
                    "date": 1740743045931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n         </div>\r\n         <div className=\"flex items-center space-x-4\">\r\n           <div className=\"flex items-center bg-gray-100 rounded-lg p-1\">\r\n             <button\r\n+              type=\"button\"\r\n               onClick={() => setViewMode('list')}\r\n               title=\"List View\"\r\n               aria-label=\"Switch to List View\"\r\n               className={`p-2 rounded ${\r\n"
                },
                {
                    "date": 1740743052202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,9 @@\n             >\r\n               <List className=\"h-5 w-5\" />\r\n             </button>\r\n             <button\r\n+              type=\"button\"\r\n               onClick={() => setViewMode('table')}\r\n               title=\"Table View\"\r\n               aria-label=\"Switch to Table View\"\r\n               className={`p-2 rounded ${\r\n@@ -106,8 +107,9 @@\n               <Table className=\"h-5 w-5\" />\r\n             </button>\r\n           </div>\r\n           <button\r\n+            type=\"button\"\r\n             onClick={() => setIsAddLeadOpen(true)}\r\n             className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n           >\r\n             <Plus className=\"h-4 w-4 mr-2\" />\r\n"
                },
                {
                    "date": 1740744591278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   proposal: 'bg-purple-100 text-purple-800',\r\n   negotiation: 'bg-pink-100 text-pink-800',\r\n   won: 'bg-green-100 text-green-800',\r\n   lost: 'bg-red-100 text-red-800',\r\n+  \r\n };\r\n \r\n const Sales: React.FC = () => {\r\n   const { \r\n"
                },
                {
                    "date": 1740744596758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   proposal: 'bg-purple-100 text-purple-800',\r\n   negotiation: 'bg-pink-100 text-pink-800',\r\n   won: 'bg-green-100 text-green-800',\r\n   lost: 'bg-red-100 text-red-800',\r\n+  closed: 'bg-green-100 text-green-800',\r\n   \r\n };\r\n \r\n const Sales: React.FC = () => {\r\n"
                },
                {
                    "date": 1740744612627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n   negotiation: 'bg-pink-100 text-pink-800',\r\n   won: 'bg-green-100 text-green-800',\r\n   lost: 'bg-red-100 text-red-800',\r\n   closed: 'bg-green-100 text-green-800',\r\n+  cancelled: 'bg-red-100 text-red-800',\r\n+  on_hold: 'bg-gray-100 text-gray-800',\r\n   \r\n };\r\n \r\n const Sales: React.FC = () => {\r\n"
                },
                {
                    "date": 1740744617842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,14 @@\n   lost: 'bg-red-100 text-red-800',\r\n   closed: 'bg-green-100 text-green-800',\r\n   cancelled: 'bg-red-100 text-red-800',\r\n   on_hold: 'bg-gray-100 text-gray-800',\r\n-  \r\n+  demo_scheduled: 'bg-purple-100 text-purple-800',\r\n+  demo_completed: 'bg-indigo-100 text-indigo-800',\r\n+  proposal_sent: 'bg-pink-100 text-pink-800',\r\n+  negotiation_started: 'bg-pink-100 text-pink-800',\r\n+  won: 'bg-green-100 text-green-800',\r\n+  lost: 'bg-red-100 text-red-800',\r\n };\r\n \r\n const Sales: React.FC = () => {\r\n   const { \r\n"
                },
                {
                    "date": 1740744623981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,9 @@\n   demo_scheduled: 'bg-purple-100 text-purple-800',\r\n   demo_completed: 'bg-indigo-100 text-indigo-800',\r\n   proposal_sent: 'bg-pink-100 text-pink-800',\r\n   negotiation_started: 'bg-pink-100 text-pink-800',\r\n-  won: 'bg-green-100 text-green-800',\r\n-  lost: 'bg-red-100 text-red-800',\r\n+  \r\n };\r\n \r\n const Sales: React.FC = () => {\r\n   const { \r\n"
                },
                {
                    "date": 1740744629813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n   demo_scheduled: 'bg-purple-100 text-purple-800',\r\n   demo_completed: 'bg-indigo-100 text-indigo-800',\r\n   proposal_sent: 'bg-pink-100 text-pink-800',\r\n   negotiation_started: 'bg-pink-100 text-pink-800',\r\n-  \r\n };\r\n \r\n const Sales: React.FC = () => {\r\n   const { \r\n"
                },
                {
                    "date": 1740744842997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,344 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Plus, Phone, Mail, Calendar, FileText, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\n+import { formatCurrency, formatPercent, formatNumber } from '../lib/utils/format';\r\n+import { useSales } from '../hooks/useSales';\r\n+import { useDashboard } from '../hooks/useDashboard';\r\n+import LoadingSpinner from '../components/LoadingSpinner';\r\n+import type { SalesLead } from '../types/sales';\r\n+import {\r\n+  Accordion,\r\n+  AccordionContent,\r\n+  AccordionItem,\r\n+  AccordionTrigger,\r\n+} from '../components/ui/accordion';\r\n+import SalesTable from '../components/SalesTable';\r\n+import { StatsWidget, ChartWidget, ListWidget } from '../components/widgets';\r\n+import { StatItem } from '../components/StatItem';\r\n+\r\n+const LEAD_STATUS_COLORS = {\r\n+  new: 'bg-blue-100 text-blue-800',\r\n+  contacted: 'bg-yellow-100 text-yellow-800',\r\n+  qualified: 'bg-indigo-100 text-indigo-800',\r\n+  proposal: 'bg-purple-100 text-purple-800',\r\n+  negotiation: 'bg-pink-100 text-pink-800',\r\n+  won: 'bg-green-100 text-green-800',\r\n+  lost: 'bg-red-100 text-red-800',\r\n+  closed: 'bg-green-100 text-green-800',\r\n+  cancelled: 'bg-red-100 text-red-800',\r\n+  on_hold: 'bg-gray-100 text-gray-800',\r\n+  demo_scheduled: 'bg-purple-100 text-purple-800',\r\n+  demo_completed: 'bg-indigo-100 text-indigo-800',\r\n+  proposal_sent: 'bg-pink-100 text-pink-800',\r\n+  negotiation_started: 'bg-pink-100 text-pink-800',\r\n+};\r\n+\r\n+const Sales: React.FC = () => {\r\n+  const { \r\n+    leads = [], \r\n+    activities = [], \r\n+    opportunities = [], \r\n+    stats, \r\n+    loading,\r\n+    _createLead: createLead,\r\n+    _updateLead: updateLead,\r\n+    _addActivity: addActivity\r\n+  } = useSales();\r\n+  \r\n+  const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n+  const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n+  const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n+  const [loadError, _setLoadError] = useState<string | null>(null);\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <LoadingSpinner \r\n+        message=\"Loading sales data...\"\r\n+        timeout={30000}\r\n+        showRetry={true}\r\n+        onRetry={() => window.location.reload()}\r\n+      />\r\n+    );\r\n+  }\r\n+\r\n+  if (loadError) {\r\n+    return (\r\n+      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n+        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n+        <p className=\"mt-2 text-sm text-red-600\">{loadError}</p>\r\n+        <button\r\n+          type=\"button\"\r\n+          onClick={() => window.location.reload()}\r\n+          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n+        >\r\n+          Retry\r\n+        </button>\r\n+      </div>\r\n+    );\r\n+  }\r\n+  return (\r\n+    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n+      {/* Header */}\r\n+      <div className=\"flex justify-between items-center mb-6\">\r\n+        <div>\r\n+          <h1 className=\"text-2xl font-semibold text-gray-900\">Sales Pipeline</h1>\r\n+          <p className=\"mt-1 text-sm text-gray-500\">\r\n+            Manage leads and track sales activities\r\n+          </p>\r\n+        </div>\r\n+        <div className=\"flex items-center space-x-4\">\r\n+          <div className=\"flex items-center bg-gray-100 rounded-lg p-1\">\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setViewMode('list')}\r\n+              title=\"List View\"\r\n+              aria-label=\"Switch to List View\"\r\n+              className={`p-2 rounded ${\r\n+                viewMode === 'list'\r\n+                  ? 'bg-white shadow text-indigo-600'\r\n+                  : 'text-gray-500 hover:text-gray-700'\r\n+              }`}\r\n+            >\r\n+              <List className=\"h-5 w-5\" />\r\n+            </button>\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setViewMode('table')}\r\n+              title=\"Table View\"\r\n+              aria-label=\"Switch to Table View\"\r\n+              className={`p-2 rounded ${\r\n+                viewMode === 'table'\r\n+                  ? 'bg-white shadow text-indigo-600'\r\n+                  : 'text-gray-500 hover:text-gray-700'\r\n+              }`}\r\n+            >\r\n+              <Table className=\"h-5 w-5\" />\r\n+            </button>\r\n+          </div>\r\n+          <button\r\n+            type=\"button\"\r\n+            onClick={() => setIsAddLeadOpen(true)}\r\n+            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n+          >\r\n+            <Plus className=\"h-4 w-4 mr-2\" />\r\n+            Add Lead\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Stats */}\r\n+      <div className=\"mb-6\">\r\n+        <StatsWidget\r\n+          id=\"sales-overview\"\r\n+          title=\"Sales Overview\"\r\n+          stats={[\r\n+            {\r\n+              icon: Users,\r\n+              label: \"Total Leads\",\r\n+              value: stats?.totalLeads || 0,\r\n+              _trend: \"up\"\r\n+            },\r\n+            {\r\n+              icon: DollarSign,\r\n+              label: \"Pipeline Value\",\r\n+              value: formatCurrency(stats?.pipelineValue || 0),\r\n+              _trend: \"up\"\r\n+            },\r\n+            {\r\n+              icon: Target,\r\n+              label: \"Qualified Leads\",\r\n+              value: stats?.qualifiedLeads || 0,\r\n+              _trend: \"up\"\r\n+            },\r\n+            {\r\n+              icon: Activity,\r\n+              label: \"Conversion Rate\",\r\n+              value: `${stats?.conversionRate || 0}%`,\r\n+              _trend: stats?.conversionRate > 30 ? \"up\" : \"down\"\r\n+            }\r\n+          ]}\r\n+        />\r\n+      </div>\r\n+\r\n+      {/* Activity Feed */}\r\n+      <div className=\"mb-8\">\r\n+        <ListWidget\r\n+          id=\"recent-activities\"\r\n+          title=\"Recent Activities\"\r\n+          items={activities.slice(0, 5).map(activity => ({\r\n+            icon: Activity,\r\n+            title: activity.description,\r\n+            subtitle: activity.type,\r\n+            timestamp: new Date(activity.createdAt).toLocaleDateString(),\r\n+            status: {\r\n+              label: activity.type,\r\n+              color: 'bg-blue-100 text-blue-800'\r\n+            }\r\n+          }))}\r\n+        />\r\n+      </div>\r\n+\r\n+      {/* Pipeline Stages */}\r\n+      <div className=\"mb-8\">\r\n+        <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Pipeline Stages</h2>\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n+          {Object.entries(LEAD_STATUS_COLORS).map(([status, colorClass]) => {\r\n+            const stageLeads = leads.filter(lead => lead.status === status);\r\n+            const stageValue = opportunities\r\n+              .filter(opp => stageLeads.some(lead => lead.id === opp.leadId))\r\n+              .reduce((sum, opp) => sum + (opp.value || 0), 0);\r\n+\r\n+            return (\r\n+              <div key={status} className=\"bg-white rounded-lg shadow p-4\">\r\n+                <div className=\"flex items-center justify-between mb-2\">\r\n+                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${colorClass}`}>\r\n+                    {status.charAt(0).toUpperCase() + status.slice(1)}\r\n+                  </span>\r\n+                  <span className=\"text-sm font-medium text-gray-500\">\r\n+                    {stageLeads.length}\r\n+                  </span>\r\n+                </div>\r\n+                <div className=\"text-sm text-gray-500\">\r\n+                  {formatCurrency(stageValue)}\r\n+                </div>\r\n+              </div>\r\n+            );\r\n+          })}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Leads List/Table */}\r\n+      {viewMode === 'table' ? (\r\n+        <SalesTable\r\n+          leads={leads}\r\n+          opportunities={opportunities}\r\n+          onLeadClick={setSelectedLead}\r\n+        />\r\n+      ) : (\r\n+        <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n+          <div className=\"px-4 py-5 sm:px-6\">\r\n+            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n+              Active Leads\r\n+            </h3>\r\n+          </div>\r\n+          <div className=\"border-t border-gray-200\">\r\n+            <Accordion type=\"single\" collapsible>\r\n+              {leads.map((lead) => (\r\n+                <AccordionItem key={lead.id} value={lead.id}>\r\n+                  <AccordionTrigger className=\"px-4 py-5 sm:px-6 hover:bg-gray-50\">\r\n+                    <div className=\"flex items-center justify-between w-full\">\r\n+                      <div className=\"flex items-center\">\r\n+                        <div className=\"min-w-0 flex-1\">\r\n+                          <h4 className=\"text-sm font-medium text-gray-900\">\r\n+                            {lead.school}\r\n+                          </h4>\r\n+                          <p className=\"text-sm text-gray-500\">\r\n+                            {lead.name}\r\n+                          </p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <div className=\"ml-4 flex-shrink-0\">\r\n+                        <span\r\n+                          className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n+                            LEAD_STATUS_COLORS[lead.status as keyof typeof LEAD_STATUS_COLORS]\r\n+                          }`}\r\n+                        >\r\n+                          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n+                        </span>\r\n+                      </div>\r\n+                    </div>\r\n+                  </AccordionTrigger>\r\n+                  <AccordionContent className=\"px-4 py-5 sm:px-6\">\r\n+                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                      <div>\r\n+                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n+                          Contact Information\r\n+                        </h4>\r\n+                        <div className=\"space-y-1\">\r\n+                          <div className=\"flex items-center text-sm text-gray-500\">\r\n+                            <Phone className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n+                            {lead.phone || 'N/A'}\r\n+                          </div>\r\n+                          <div className=\"flex items-center text-sm text-gray-500\">\r\n+                            <Mail className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n+                            {lead.email || 'N/A'}\r\n+                          </div>\r\n+                          <div className=\"flex items-center text-sm text-gray-500\">\r\n+                            <Calendar className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n+                            {lead.createdAt\r\n+                              ? new Date(lead.createdAt).toLocaleDateString()\r\n+                              : 'N/A'}\r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                      <div>\r\n+                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n+                          Lead Details\r\n+                        </h4>\r\n+                        <div className=\"mt-2\">\r\n+                          {(() => {\r\n+                            const relatedOpp = opportunities.find(opp => opp.leadId === lead.id);\r\n+                            return (\r\n+                              <>\r\n+                                <p className=\"text-sm text-gray-500\">\r\n+                                  Value: {formatCurrency(relatedOpp?.value || 0)}\r\n+                                </p>\r\n+                                {relatedOpp?.expectedCloseDate && (\r\n+                                  <p className=\"text-sm text-gray-900\">\r\n+                                    Expected Close: {new Date(relatedOpp.expectedCloseDate).toLocaleDateString()}\r\n+                                  </p>\r\n+                                )}\r\n+                              </>\r\n+                            );\r\n+                          })()}\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    <div className=\"mt-4 flex justify-between items-center\">\r\n+                      <div>\r\n+                        <h4 className=\"text-sm font-medium text-gray-900\">\r\n+                          Notes\r\n+                        </h4>\r\n+                        <p className=\"text-sm text-gray-500\">\r\n+                          {lead.source || 'No notes available'}\r\n+                        </p>\r\n+                      </div>\r\n+                      <div className=\"text-right\">\r\n+                        <p className=\"text-sm font-medium text-gray-900\">\r\n+                          {formatCurrency(opportunities.find(opp => opp.leadId === lead.id)?.value || 0)}\r\n+                        </p>\r\n+                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n+                          lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n+                          lead.status === 'proposal' ? 'bg-red-100 text-red-800' :\r\n+                          'bg-yellow-100 text-yellow-800'\r\n+                        }`}>\r\n+                          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n+                        </span>\r\n+                      </div>\r\n+                    </div>\r\n+                  </AccordionContent>\r\n+                </AccordionItem>\r\n+              ))}\r\n+            </Accordion>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n+      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n+        <StatItem\r\n+          title=\"Pipeline Value\"\r\n+          value={stats.pipelineValue}\r\n+          icon={DollarSign}\r\n+          className=\"bg-blue-500\"\r\n+        />\r\n+        <StatItem\r\n+          title=\"Qualified Leads\"\r\n+          value={stats.qualifiedLeads}\r\n+          icon={Target}\r\n+          className=\"bg-green-500\"\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Sales;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740744848757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n                     <div className=\"flex items-center justify-between w-full\">\r\n                       <div className=\"flex items-center\">\r\n                         <div className=\"min-w-0 flex-1\">\r\n                           <h4 className=\"text-sm font-medium text-gray-900\">\r\n-                            {lead.school}\r\n+                            {lead.schoolname}\r\n                           </h4>\r\n                           <p className=\"text-sm text-gray-500\">\r\n                             {lead.name}\r\n                           </p>\r\n@@ -340,349 +340,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Sales;\n-import React, { useState, useEffect } from 'react';\r\n-import { Plus, Phone, Mail, Calendar, FileText, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\n-import { formatCurrency, formatPercent, formatNumber } from '../lib/utils/format';\r\n-import { useSales } from '../hooks/useSales';\r\n-import { useDashboard } from '../hooks/useDashboard';\r\n-import LoadingSpinner from '../components/LoadingSpinner';\r\n-import type { SalesLead } from '../types/sales';\r\n-import {\r\n-  Accordion,\r\n-  AccordionContent,\r\n-  AccordionItem,\r\n-  AccordionTrigger,\r\n-} from '../components/ui/accordion';\r\n-import SalesTable from '../components/SalesTable';\r\n-import { StatsWidget, ChartWidget, ListWidget } from '../components/widgets';\r\n-import { StatItem } from '../components/StatItem';\r\n-\r\n-const LEAD_STATUS_COLORS = {\r\n-  new: 'bg-blue-100 text-blue-800',\r\n-  contacted: 'bg-yellow-100 text-yellow-800',\r\n-  qualified: 'bg-indigo-100 text-indigo-800',\r\n-  proposal: 'bg-purple-100 text-purple-800',\r\n-  negotiation: 'bg-pink-100 text-pink-800',\r\n-  won: 'bg-green-100 text-green-800',\r\n-  lost: 'bg-red-100 text-red-800',\r\n-  closed: 'bg-green-100 text-green-800',\r\n-  cancelled: 'bg-red-100 text-red-800',\r\n-  on_hold: 'bg-gray-100 text-gray-800',\r\n-  demo_scheduled: 'bg-purple-100 text-purple-800',\r\n-  demo_completed: 'bg-indigo-100 text-indigo-800',\r\n-  proposal_sent: 'bg-pink-100 text-pink-800',\r\n-  negotiation_started: 'bg-pink-100 text-pink-800',\r\n-};\r\n-\r\n-const Sales: React.FC = () => {\r\n-  const { \r\n-    leads = [], \r\n-    activities = [], \r\n-    opportunities = [], \r\n-    stats, \r\n-    loading,\r\n-    _createLead: createLead,\r\n-    _updateLead: updateLead,\r\n-    _addActivity: addActivity\r\n-  } = useSales();\r\n-  \r\n-  const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n-  const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n-  const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n-  const [loadError, _setLoadError] = useState<string | null>(null);\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <LoadingSpinner \r\n-        message=\"Loading sales data...\"\r\n-        timeout={30000}\r\n-        showRetry={true}\r\n-        onRetry={() => window.location.reload()}\r\n-      />\r\n-    );\r\n-  }\r\n-\r\n-  if (loadError) {\r\n-    return (\r\n-      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n-        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n-        <p className=\"mt-2 text-sm text-red-600\">{loadError}</p>\r\n-        <button\r\n-          type=\"button\"\r\n-          onClick={() => window.location.reload()}\r\n-          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n-        >\r\n-          Retry\r\n-        </button>\r\n-      </div>\r\n-    );\r\n-  }\r\n-  return (\r\n-    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n-      {/* Header */}\r\n-      <div className=\"flex justify-between items-center mb-6\">\r\n-        <div>\r\n-          <h1 className=\"text-2xl font-semibold text-gray-900\">Sales Pipeline</h1>\r\n-          <p className=\"mt-1 text-sm text-gray-500\">\r\n-            Manage leads and track sales activities\r\n-          </p>\r\n-        </div>\r\n-        <div className=\"flex items-center space-x-4\">\r\n-          <div className=\"flex items-center bg-gray-100 rounded-lg p-1\">\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setViewMode('list')}\r\n-              title=\"List View\"\r\n-              aria-label=\"Switch to List View\"\r\n-              className={`p-2 rounded ${\r\n-                viewMode === 'list'\r\n-                  ? 'bg-white shadow text-indigo-600'\r\n-                  : 'text-gray-500 hover:text-gray-700'\r\n-              }`}\r\n-            >\r\n-              <List className=\"h-5 w-5\" />\r\n-            </button>\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setViewMode('table')}\r\n-              title=\"Table View\"\r\n-              aria-label=\"Switch to Table View\"\r\n-              className={`p-2 rounded ${\r\n-                viewMode === 'table'\r\n-                  ? 'bg-white shadow text-indigo-600'\r\n-                  : 'text-gray-500 hover:text-gray-700'\r\n-              }`}\r\n-            >\r\n-              <Table className=\"h-5 w-5\" />\r\n-            </button>\r\n-          </div>\r\n-          <button\r\n-            type=\"button\"\r\n-            onClick={() => setIsAddLeadOpen(true)}\r\n-            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n-          >\r\n-            <Plus className=\"h-4 w-4 mr-2\" />\r\n-            Add Lead\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Stats */}\r\n-      <div className=\"mb-6\">\r\n-        <StatsWidget\r\n-          id=\"sales-overview\"\r\n-          title=\"Sales Overview\"\r\n-          stats={[\r\n-            {\r\n-              icon: Users,\r\n-              label: \"Total Leads\",\r\n-              value: stats?.totalLeads || 0,\r\n-              _trend: \"up\"\r\n-            },\r\n-            {\r\n-              icon: DollarSign,\r\n-              label: \"Pipeline Value\",\r\n-              value: formatCurrency(stats?.pipelineValue || 0),\r\n-              _trend: \"up\"\r\n-            },\r\n-            {\r\n-              icon: Target,\r\n-              label: \"Qualified Leads\",\r\n-              value: stats?.qualifiedLeads || 0,\r\n-              _trend: \"up\"\r\n-            },\r\n-            {\r\n-              icon: Activity,\r\n-              label: \"Conversion Rate\",\r\n-              value: `${stats?.conversionRate || 0}%`,\r\n-              _trend: stats?.conversionRate > 30 ? \"up\" : \"down\"\r\n-            }\r\n-          ]}\r\n-        />\r\n-      </div>\r\n-\r\n-      {/* Activity Feed */}\r\n-      <div className=\"mb-8\">\r\n-        <ListWidget\r\n-          id=\"recent-activities\"\r\n-          title=\"Recent Activities\"\r\n-          items={activities.slice(0, 5).map(activity => ({\r\n-            icon: Activity,\r\n-            title: activity.description,\r\n-            subtitle: activity.type,\r\n-            timestamp: new Date(activity.createdAt).toLocaleDateString(),\r\n-            status: {\r\n-              label: activity.type,\r\n-              color: 'bg-blue-100 text-blue-800'\r\n-            }\r\n-          }))}\r\n-        />\r\n-      </div>\r\n-\r\n-      {/* Pipeline Stages */}\r\n-      <div className=\"mb-8\">\r\n-        <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Pipeline Stages</h2>\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n-          {Object.entries(LEAD_STATUS_COLORS).map(([status, colorClass]) => {\r\n-            const stageLeads = leads.filter(lead => lead.status === status);\r\n-            const stageValue = opportunities\r\n-              .filter(opp => stageLeads.some(lead => lead.id === opp.leadId))\r\n-              .reduce((sum, opp) => sum + (opp.value || 0), 0);\r\n-\r\n-            return (\r\n-              <div key={status} className=\"bg-white rounded-lg shadow p-4\">\r\n-                <div className=\"flex items-center justify-between mb-2\">\r\n-                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${colorClass}`}>\r\n-                    {status.charAt(0).toUpperCase() + status.slice(1)}\r\n-                  </span>\r\n-                  <span className=\"text-sm font-medium text-gray-500\">\r\n-                    {stageLeads.length}\r\n-                  </span>\r\n-                </div>\r\n-                <div className=\"text-sm text-gray-500\">\r\n-                  {formatCurrency(stageValue)}\r\n-                </div>\r\n-              </div>\r\n-            );\r\n-          })}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Leads List/Table */}\r\n-      {viewMode === 'table' ? (\r\n-        <SalesTable\r\n-          leads={leads}\r\n-          opportunities={opportunities}\r\n-          onLeadClick={setSelectedLead}\r\n-        />\r\n-      ) : (\r\n-        <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n-          <div className=\"px-4 py-5 sm:px-6\">\r\n-            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n-              Active Leads\r\n-            </h3>\r\n-          </div>\r\n-          <div className=\"border-t border-gray-200\">\r\n-            <Accordion type=\"single\" collapsible>\r\n-              {leads.map((lead) => (\r\n-                <AccordionItem key={lead.id} value={lead.id}>\r\n-                  <AccordionTrigger className=\"px-4 py-5 sm:px-6 hover:bg-gray-50\">\r\n-                    <div className=\"flex items-center justify-between w-full\">\r\n-                      <div className=\"flex items-center\">\r\n-                        <div className=\"min-w-0 flex-1\">\r\n-                          <h4 className=\"text-sm font-medium text-gray-900\">\r\n-                            {lead.company}\r\n-                          </h4>\r\n-                          <p className=\"text-sm text-gray-500\">\r\n-                            {lead.name}\r\n-                          </p>\r\n-                        </div>\r\n-                      </div>\r\n-                      <div className=\"ml-4 flex-shrink-0\">\r\n-                        <span\r\n-                          className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n-                            LEAD_STATUS_COLORS[lead.status as keyof typeof LEAD_STATUS_COLORS]\r\n-                          }`}\r\n-                        >\r\n-                          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n-                        </span>\r\n-                      </div>\r\n-                    </div>\r\n-                  </AccordionTrigger>\r\n-                  <AccordionContent className=\"px-4 py-5 sm:px-6\">\r\n-                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-                      <div>\r\n-                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n-                          Contact Information\r\n-                        </h4>\r\n-                        <div className=\"space-y-1\">\r\n-                          <div className=\"flex items-center text-sm text-gray-500\">\r\n-                            <Phone className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n-                            {lead.phone || 'N/A'}\r\n-                          </div>\r\n-                          <div className=\"flex items-center text-sm text-gray-500\">\r\n-                            <Mail className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n-                            {lead.email || 'N/A'}\r\n-                          </div>\r\n-                          <div className=\"flex items-center text-sm text-gray-500\">\r\n-                            <Calendar className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n-                            {lead.createdAt\r\n-                              ? new Date(lead.createdAt).toLocaleDateString()\r\n-                              : 'N/A'}\r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                      <div>\r\n-                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n-                          Lead Details\r\n-                        </h4>\r\n-                        <div className=\"mt-2\">\r\n-                          {(() => {\r\n-                            const relatedOpp = opportunities.find(opp => opp.leadId === lead.id);\r\n-                            return (\r\n-                              <>\r\n-                                <p className=\"text-sm text-gray-500\">\r\n-                                  Value: {formatCurrency(relatedOpp?.value || 0)}\r\n-                                </p>\r\n-                                {relatedOpp?.expectedCloseDate && (\r\n-                                  <p className=\"text-sm text-gray-900\">\r\n-                                    Expected Close: {new Date(relatedOpp.expectedCloseDate).toLocaleDateString()}\r\n-                                  </p>\r\n-                                )}\r\n-                              </>\r\n-                            );\r\n-                          })()}\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    <div className=\"mt-4 flex justify-between items-center\">\r\n-                      <div>\r\n-                        <h4 className=\"text-sm font-medium text-gray-900\">\r\n-                          Notes\r\n-                        </h4>\r\n-                        <p className=\"text-sm text-gray-500\">\r\n-                          {lead.source || 'No notes available'}\r\n-                        </p>\r\n-                      </div>\r\n-                      <div className=\"text-right\">\r\n-                        <p className=\"text-sm font-medium text-gray-900\">\r\n-                          {formatCurrency(opportunities.find(opp => opp.leadId === lead.id)?.value || 0)}\r\n-                        </p>\r\n-                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n-                          lead.status === 'closed' ? 'bg-green-100 text-green-800' :\r\n-                          lead.status === 'proposal' ? 'bg-red-100 text-red-800' :\r\n-                          'bg-yellow-100 text-yellow-800'\r\n-                        }`}>\r\n-                          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n-                        </span>\r\n-                      </div>\r\n-                    </div>\r\n-                  </AccordionContent>\r\n-                </AccordionItem>\r\n-              ))}\r\n-            </Accordion>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-\r\n-      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n-        <StatItem\r\n-          title=\"Pipeline Value\"\r\n-          value={stats.pipelineValue}\r\n-          icon={DollarSign}\r\n-          className=\"bg-blue-500\"\r\n-        />\r\n-        <StatItem\r\n-          title=\"Qualified Leads\"\r\n-          value={stats.qualifiedLeads}\r\n-          icon={Target}\r\n-          className=\"bg-green-500\"\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default Sales;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740926716370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import { Plus, Phone, Mail, Calendar, FileText, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\n-import { formatCurrency, formatPercent, formatNumber } from '../lib/utils/format';\r\n+import { formatCurrency} from '../lib/utils/format';\r\n import { useSales } from '../hooks/useSales';\r\n import { useDashboard } from '../hooks/useDashboard';\r\n import LoadingSpinner from '../components/LoadingSpinner';\r\n import type { SalesLead } from '../types/sales';\r\n"
                },
                {
                    "date": 1740926732977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import React, { useState, useEffect } from 'react';\r\n-import { Plus, Phone, Mail, Calendar, FileText, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\n+import React, { useState, } from 'react';\r\n+import { Plus, Phone, Mail, Calendar, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\n import { formatCurrency} from '../lib/utils/format';\r\n import { useSales } from '../hooks/useSales';\r\n import { useDashboard } from '../hooks/useDashboard';\r\n import LoadingSpinner from '../components/LoadingSpinner';\r\n"
                },
                {
                    "date": 1740926742884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n-import React, { useState, } from 'react';\r\n-import { Plus, Phone, Mail, Calendar, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\n+import React, { useState} from 'react';\r\n+import { Plus, Phone, Mail, Calendar, Users, DollarSign, Table, List, Target, Activity } from 'lucide-react';\r\n import { formatCurrency} from '../lib/utils/format';\r\n import { useSales } from '../hooks/useSales';\r\n-import { useDashboard } from '../hooks/useDashboard';\r\n+//import { useDashboard } from '../hooks/useDashboard';\r\n import LoadingSpinner from '../components/LoadingSpinner';\r\n import type { SalesLead } from '../types/sales';\r\n import {\r\n   Accordion,\r\n"
                },
                {
                    "date": 1740926819777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   AccordionItem,\r\n   AccordionTrigger,\r\n } from '../components/ui/accordion';\r\n import SalesTable from '../components/SalesTable';\r\n-import { StatsWidget, ChartWidget, ListWidget } from '../components/widgets';\r\n+import { StatsWidget, ListWidget } from '../components/widgets';\r\n import { StatItem } from '../components/StatItem';\r\n \r\n const LEAD_STATUS_COLORS = {\r\n   new: 'bg-blue-100 text-blue-800',\r\n"
                },
                {
                    "date": 1740926837105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,11 @@\n     activities = [], \r\n     opportunities = [], \r\n     stats, \r\n     loading,\r\n-    _createLead: createLead,\r\n-    _updateLead: updateLead,\r\n-    _addActivity: addActivity\r\n+    //_createLead: createLead,\r\n+    //_updateLead: updateLead,\r\n+    //_addActivity: addActivity\r\n   } = useSales();\r\n   \r\n   const [_isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n   const [_selectedLead, setSelectedLead] = useState<SalesLead | null>(null);\r\n"
                }
            ],
            "date": 1740093625426,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Plus, Phone, Mail, Calendar, FileText, Users, DollarSign, Table, List, TrendingUp, Target, Activity } from 'lucide-react';\r\nimport { formatCurrency, formatPercent, formatNumber } from '../lib/utils/format';\r\nimport { useSales } from '../hooks/useSales';\r\nimport { useDashboard } from '../hooks/useDashboard';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport type { SalesLead } from '../types/sales';\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from '../components/ui/accordion';\r\nimport SalesTable from '../components/SalesTable';\r\nimport { StatsWidget, ChartWidget, ListWidget } from '../components/widgets';\r\n\r\nconst LEAD_STATUS_COLORS = {\r\n  new: 'bg-blue-100 text-blue-800',\r\n  contacted: 'bg-yellow-100 text-yellow-800',\r\n  qualified: 'bg-indigo-100 text-indigo-800',\r\n  proposal: 'bg-purple-100 text-purple-800',\r\n  negotiation: 'bg-pink-100 text-pink-800',\r\n  won: 'bg-green-100 text-green-800',\r\n  lost: 'bg-red-100 text-red-800',\r\n};\r\n\r\nconst Sales: React.FC = () => {\r\n  // Hooks\r\n  const { leads = [], activities = [], opportunities = [], stats, loading, createLead, updateLead, addActivity } = useSales();\r\n  const [isAddLeadOpen, setIsAddLeadOpen] = useState<boolean>(false);\r\n  const [selectedLead, setSelectedLead] = useState<SalesLead | null>(null); \r\n  const [viewMode, setViewMode] = useState<'list' | 'table'>('list');\r\n  const [loadError, setLoadError] = useState<string | null>(null);\r\n\r\n  if (loading) {\r\n    return (\r\n      <LoadingSpinner \r\n        message=\"Loading sales data...\"\r\n        timeout={30000}\r\n        showRetry={true}\r\n        onRetry={() => window.location.reload()}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (loadError) {\r\n    return (\r\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n        <p className=\"mt-2 text-sm text-red-600\">{loadError}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Sales Pipeline</h1>\r\n          <p className=\"mt-1 text-sm text-gray-500\">\r\n            Manage leads and track sales activities\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"flex items-center bg-gray-100 rounded-lg p-1\">\r\n            <button\r\n              onClick={() => setViewMode('list')}\r\n              title=\"List View\"\r\n              aria-label=\"Switch to List View\"\r\n              className={`p-2 rounded ${\r\n                viewMode === 'list'\r\n                  ? 'bg-white shadow text-indigo-600'\r\n                  : 'text-gray-500 hover:text-gray-700'\r\n              }`}\r\n            >\r\n              <List className=\"h-5 w-5\" />\r\n            </button>\r\n            <button\r\n              onClick={() => setViewMode('table')}\r\n              title=\"Table View\"\r\n              aria-label=\"Switch to Table View\"\r\n              className={`p-2 rounded ${\r\n                viewMode === 'table'\r\n                  ? 'bg-white shadow text-indigo-600'\r\n                  : 'text-gray-500 hover:text-gray-700'\r\n              }`}\r\n            >\r\n              <Table className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={() => setIsAddLeadOpen(true)}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n          >\r\n            <Plus className=\"h-4 w-4 mr-2\" />\r\n            Add Lead\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"mb-6\">\r\n        <StatsWidget\r\n          id=\"sales-overview\"\r\n          title=\"Sales Overview\"\r\n          stats={[\r\n            {\r\n              icon: Users,\r\n              label: \"Total Leads\",\r\n              value: stats?.totalLeads || 0,\r\n              _trend: \"up\"\r\n            },\r\n            {\r\n              icon: DollarSign,\r\n              label: \"Revenue\",\r\n              value: formatCurrency(stats?.revenue || 0),\r\n              _trend: \"up\"\r\n            },\r\n            {\r\n              icon: Target,\r\n              label: \"Opportunities\",\r\n              value: stats?.opportunities || 0,\r\n              _trend: \"up\"\r\n            },\r\n            {\r\n              icon: Activity,\r\n              label: \"Conversion Rate\",\r\n              value: `${stats?.conversionRate || 0}%`,\r\n              _trend: stats?.conversionRate > 30 ? \"up\" : \"down\"\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      {/* Activity Feed */}\r\n      <div className=\"mb-8\">\r\n        <ListWidget\r\n          id=\"recent-activities\"\r\n          title=\"Recent Activities\"\r\n          items={activities.slice(0, 5).map(activity => ({\r\n            icon: Activity,\r\n            title: activity.subject,\r\n            subtitle: activity.description,\r\n            timestamp: new Date(activity.createdAt).toLocaleDateString(),\r\n            status: {\r\n              label: activity.type,\r\n              color: 'bg-blue-100 text-blue-800'\r\n            }\r\n          }))}\r\n        />\r\n      </div>\r\n\r\n      {/* Pipeline Stages */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Pipeline Stages</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n          {Object.entries(LEAD_STATUS_COLORS).map(([status, colorClass]) => {\r\n            const stageLeads = leads.filter(lead => lead.status === status);\r\n            const stageValue = opportunities\r\n              .filter(opp => stageLeads.some(lead => lead.id === opp.leadId))\r\n              .reduce((sum, opp) => sum + (opp.amount || 0), 0);\r\n\r\n            return (\r\n              <div key={status} className=\"bg-white rounded-lg shadow p-4\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${colorClass}`}>\r\n                    {status.charAt(0).toUpperCase() + status.slice(1)}\r\n                  </span>\r\n                  <span className=\"text-sm font-medium text-gray-500\">\r\n                    {stageLeads.length}\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  {formatCurrency(stageValue)}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Leads List/Table */}\r\n      {viewMode === 'table' ? (\r\n        <SalesTable\r\n          leads={leads}\r\n          opportunities={opportunities}\r\n          onLeadClick={setSelectedLead}\r\n        />\r\n      ) : (\r\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n          <div className=\"px-4 py-5 sm:px-6\">\r\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n              Active Leads\r\n            </h3>\r\n          </div>\r\n          <div className=\"border-t border-gray-200\">\r\n            <Accordion type=\"single\" collapsible>\r\n              {leads.map((lead) => (\r\n                <AccordionItem key={lead.id} value={lead.id}>\r\n                  <AccordionTrigger className=\"px-4 py-5 sm:px-6 hover:bg-gray-50\">\r\n                    <div className=\"flex items-center justify-between w-full\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"min-w-0 flex-1\">\r\n                          <h4 className=\"text-sm font-medium text-gray-900\">\r\n                            {lead.companyName}\r\n                          </h4>\r\n                          <p className=\"text-sm text-gray-500\">\r\n                            {lead.contactName}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"ml-4 flex-shrink-0\">\r\n                        <span\r\n                          className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                            LEAD_STATUS_COLORS[lead.status as keyof typeof LEAD_STATUS_COLORS]\r\n                          }`}\r\n                        >\r\n                          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionTrigger>\r\n                  <AccordionContent className=\"px-4 py-5 sm:px-6\">\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n                          Contact Information\r\n                        </h4>\r\n                        <div className=\"space-y-1\">\r\n                          <div className=\"flex items-center text-sm text-gray-500\">\r\n                            <Phone className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n                            {lead.phone || 'N/A'}\r\n                          </div>\r\n                          <div className=\"flex items-center text-sm text-gray-500\">\r\n                            <Mail className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n                            {lead.email || 'N/A'}\r\n                          </div>\r\n                          <div className=\"flex items-center text-sm text-gray-500\">\r\n                            <Calendar className=\"h-4 w-4 mr-2 text-gray-400\" />\r\n                            {lead.expectedCloseDate\r\n                              ? new Date(lead.expectedCloseDate).toLocaleDateString()\r\n                              : 'N/A'}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\r\n                          Lead Details\r\n                        </h4>\r\n                        <div className=\"mt-2\">\r\n                          <p className=\"text-sm text-gray-500\">\r\n                            Value: {formatCurrency(lead.estimatedValue)}\r\n                          </p>\r\n                          {lead.expectedCloseDate && (\r\n                            <p className=\"text-sm text-gray-900\">\r\n                              Expected Close: {new Date(lead.expectedCloseDate).toLocaleDateString()}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-4 flex justify-between items-center\">\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900\">\r\n                          Notes\r\n                        </h4>\r\n                        <p className=\"text-sm text-gray-500\">\r\n                          {lead.notes || 'No notes available'}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"text-sm font-medium text-gray-900\">\r\n                          {formatCurrency(lead.estimatedValue)}\r\n                        </p>\r\n                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n                          lead.status === 'won' ? 'bg-green-100 text-green-800' :\r\n                          lead.status === 'lost' ? 'bg-red-100 text-red-800' :\r\n                          'bg-yellow-100 text-yellow-800'\r\n                        }`}>\r\n                          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionContent>\r\n                </AccordionItem>\r\n              ))}\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;"
        }
    ]
}