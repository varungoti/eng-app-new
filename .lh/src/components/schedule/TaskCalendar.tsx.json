{
    "sourceFile": "src/components/schedule/TaskCalendar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1739514311516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739514319549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n +  const [isAddEventOpen, setIsAddEventOpen] = useState(false);\r\n    const [currentLesson, setCurrentLesson] = useState<ExtendedLesson | null>(null);\r\n    const [isLocked, setIsLocked] = useState(true);\r\n \r\n-@@ .. @@\r\n+\r\n    return (\r\n      <div className=\"max-w-6xl w-full relative\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n +        <div className=\"flex items-center gap-4\">\r\n"
                },
                {
                    "date": 1739514342470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\r\n  import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n  import { Progress } from \"@/components/ui/progress\";\r\n  import { Button } from \"@/components/ui/button\";\r\n +import { ScheduleDialog } from './ScheduleDialog';\r\n@@ -16,9 +15,9 @@\n    Users,\r\n    Shield,\r\n  } from \"lucide-react\";\r\n \r\n-@@ .. @@\r\n+\r\n    const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson>(lessonsData[0]);\r\n    const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n +  const [isAddEventOpen, setIsAddEventOpen] = useState(false);\r\n"
                },
                {
                    "date": 1739514385769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,68 +1,101 @@\n- import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n- import { Progress } from \"@/components/ui/progress\";\r\n- import { Button } from \"@/components/ui/button\";\r\n-+import { ScheduleDialog } from './ScheduleDialog';\r\n- import {\r\n-   ArrowRight,\r\n-   BookOpen,\r\n-   Calendar,\r\n-   CheckCircle2,\r\n-   Clock,\r\n-   Lock,\r\n-   Plus,\r\n-   RotateCcw,\r\n-   Unlock,\r\n-   Users,\r\n-   Shield,\r\n- } from \"lucide-react\";\r\n+import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n+import { Progress } from \"@/components/ui/progress\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { ScheduleDialog } from './ScheduleDialog';\r\n+import {\r\n+  ArrowRight,\r\n+  BookOpen,\r\n+  Calendar,\r\n+  CheckCircle2,\r\n+  Clock,\r\n+  Lock,\r\n+  Plus,\r\n+  RotateCcw,\r\n+  Unlock,\r\n+  Users,\r\n+  Shield,\r\n+} from \"lucide-react\";\r\n+import { useState } from 'react';\r\n+import { showToast } from \"@/lib/utils\";\r\n \r\n+interface ExtendedLesson {\r\n+  // Add your lesson type properties here\r\n+  id: string;\r\n+  title: string;\r\n+  // ... other properties\r\n+}\r\n \r\n-   const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson>(lessonsData[0]);\r\n-   const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n-   const [dialogOpen, setDialogOpen] = useState(false);\r\n-+  const [isAddEventOpen, setIsAddEventOpen] = useState(false);\r\n-   const [currentLesson, setCurrentLesson] = useState<ExtendedLesson | null>(null);\r\n-   const [isLocked, setIsLocked] = useState(true);\r\n+interface SubLesson {\r\n+  // Add your sublesson type properties here\r\n+  id: string;\r\n+  title: string;\r\n+  // ... other properties\r\n+}\r\n \r\n+export function TaskCalendar() {\r\n+  const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson | null>(null);\r\n+  const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n+  const [dialogOpen, setDialogOpen] = useState(false);\r\n+  const [isAddEventOpen, setIsAddEventOpen] = useState(false);\r\n+  const [currentLesson, setCurrentLesson] = useState<ExtendedLesson | null>(null);\r\n+  const [isLocked, setIsLocked] = useState(true);\r\n \r\n-   return (\r\n-     <div className=\"max-w-6xl w-full relative\">\r\n-       <div className=\"flex items-center justify-between mb-4\">\r\n\\ No newline at end of file\n-+        <div className=\"flex items-center gap-4\">\r\n-           <ClassHeader\r\n-             classes={classesData}\r\n-             selectedClass={selectedClass}\r\n-             onClassChange={handleClassChange}\r\n-           />\r\n-+          <Button\r\n-+            variant=\"outline\"\r\n-+            size=\"sm\"\r\n-+            onClick={() => setIsAddEventOpen(true)}\r\n-+            className=\"ml-4\"\r\n-+          >\r\n-+            <Plus className=\"h-4 w-4 mr-2\" />\r\n-+            Add Event\r\n-+          </Button>\r\n-+        </div>\r\n-         <Button\r\n-           variant=\"outline\"\r\n-           size=\"sm\"\r\n-@@ .. @@\r\n-           </div>\r\n-         </div>\r\n-       </div>\r\n-+      \r\n-+      {/* Add Event Dialog */}\r\n-+      <ScheduleDialog\r\n-+        open={isAddEventOpen}\r\n-+        onOpenChange={setIsAddEventOpen}\r\n-+        onSubmit={async (eventData) => {\r\n-+          try {\r\n-+            // Handle event creation here\r\n-+            console.log('Creating event:', eventData);\r\n-+            showToast('Event created successfully', { type: 'success' });\r\n-+          } catch (error) {\r\n-+            showToast('Failed to create event', { type: 'error' });\r\n-+          }\r\n-+        }}\r\n-+      />\n+  const handleClassChange = (newClass: any) => {\r\n+    // Implement class change logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"max-w-6xl w-full relative\">\r\n+      <div className=\"flex items-center justify-between mb-4\">\r\n+        <div className=\"flex items-center gap-4\">\r\n+          <ClassHeader\r\n+            classes={classesData}\r\n+            selectedClass={selectedClass}\r\n+            onClassChange={handleClassChange}\r\n+          />\r\n+          <Button\r\n+            variant=\"outline\"\r\n+            size=\"sm\"\r\n+            onClick={() => setIsAddEventOpen(true)}\r\n+            className=\"ml-4\"\r\n+          >\r\n+            <Plus className=\"h-4 w-4 mr-2\" />\r\n+            Add Event\r\n+          </Button>\r\n+        </div>\r\n+        <Button\r\n+          variant=\"outline\"\r\n+          size=\"sm\"\r\n+          onClick={() => setIsLocked(!isLocked)}\r\n+        >\r\n+          {isLocked ? (\r\n+            <>\r\n+              <Lock className=\"h-4 w-4 mr-2\" />\r\n+              Locked\r\n+            </>\r\n+          ) : (\r\n+            <>\r\n+              <Unlock className=\"h-4 w-4 mr-2\" />\r\n+              Unlocked\r\n+            </>\r\n+          )}\r\n+        </Button>\r\n+      </div>\r\n+\r\n+      {/* Add Event Dialog */}\r\n+      <ScheduleDialog\r\n+        open={isAddEventOpen}\r\n+        onOpenChange={setIsAddEventOpen}\r\n+        onSubmit={async (eventData) => {\r\n+          try {\r\n+            // Handle event creation here\r\n+            console.log('Creating event:', eventData);\r\n+            showToast('Event created successfully', { type: 'success' });\r\n+          } catch (error) {\r\n+            showToast('Failed to create event', { type: 'error' });\r\n+          }\r\n+        }}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739514425403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n   Shield,\r\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n+import \r\n \r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n   id: string;\r\n"
                },
                {
                    "date": 1739514431547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,11 @@\n   Shield,\r\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n-import \r\n+import { ClassHeader } from \"./ClassHeader\";\r\n \r\n+\r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n   id: string;\r\n   title: string;\r\n"
                },
                {
                    "date": 1739514438508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n+import { classesData } from \"@/data/classes\";\r\n \r\n \r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n"
                },
                {
                    "date": 1739514452965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n-import { classesData } from \"@/data/classes\";\r\n \r\n \r\n+\r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n   id: string;\r\n   title: string;\r\n"
                },
                {
                    "date": 1739514458555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n+import { ExtendedLesson, SubLesson } from \"@/types/lesson\";\r\n \r\n \r\n-\r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n   id: string;\r\n   title: string;\r\n"
                },
                {
                    "date": 1739514466181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n-import { ExtendedLesson, SubLesson } from \"@/types/lesson\";\r\n+import { ExtendedLesson, SubLesson } from \"@/types/index.\";\r\n \r\n \r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n"
                },
                {
                    "date": 1739514472108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n-import { ExtendedLesson, SubLesson } from \"@/types/index.\";\r\n+import { ExtendedLesson, SubLesson } from \"@/types/index.ts\";\r\n \r\n \r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n"
                },
                {
                    "date": 1739514506814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,33 @@\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n import { showToast } from \"@/lib/utils\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n-import { ExtendedLesson, SubLesson } from \"@/types/index.ts\";\r\n+import { ExtendedLesson, SubLesson } from \"@/types/index.import * as React from 'react';\r\n+import { connect } from 'react-redux'\r\n \r\n+export interface IAppProps {\r\n+}\r\n \r\n+class App extends React.Component<IAppProps> {\r\n+  public render() {\r\n+    return (\r\n+      <div>\r\n+        \r\n+      </div>\r\n+    );\r\n+  }\r\n+}\r\n+\r\n+const mapState2Props = state => {\r\n+  return {\r\n+  };\r\n+}\r\n+\r\n+export default connect(mapState2Props)(App);\r\n+\r\n+\r\n+\r\n interface ExtendedLesson {\r\n   // Add your lesson type properties here\r\n   id: string;\r\n   title: string;\r\n"
                },
                {
                    "date": 1739514528381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n   Users,\r\n   Shield,\r\n } from \"lucide-react\";\r\n import { useState } from 'react';\r\n-import { showToast } from \"@/lib/utils\";\r\n+import { toast } from \"@/components/ui/use-toast\";\r\n import { ClassHeader } from \"./ClassHeader\";\r\n-import { ExtendedLesson, SubLesson } from \"@/types/index.import * as React from 'react';\r\n+import { ExtendedLesson, SubLesson } from \"@/types/index\";\r\n import { connect } from 'react-redux'\r\n \r\n export interface IAppProps {\r\n }\r\n@@ -114,11 +114,18 @@\n         onSubmit={async (eventData) => {\r\n           try {\r\n             // Handle event creation here\r\n             console.log('Creating event:', eventData);\r\n-            showToast('Event created successfully', { type: 'success' });\r\n+            toast({\r\n+              title: \"Event created successfully\",\r\n+              description: \"Your event has been created successfully.\",\r\n+            });\r\n           } catch (error) {\r\n-            showToast('Failed to create event', { type: 'error' });\r\n+            toast({\r\n+              title: \"Failed to create event\",\r\n+              description: \"There was an error creating your event. Please try again later.\",\r\n+              variant: \"destructive\",\r\n+            });\r\n           }\r\n         }}\r\n       />\r\n     </div>\r\n"
                },
                {
                    "date": 1739514544895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,21 +42,9 @@\n export default connect(mapState2Props)(App);\r\n \r\n \r\n \r\n-interface ExtendedLesson {\r\n-  // Add your lesson type properties here\r\n-  id: string;\r\n-  title: string;\r\n-  // ... other properties\r\n-}\r\n \r\n-interface SubLesson {\r\n-  // Add your sublesson type properties here\r\n-  id: string;\r\n-  title: string;\r\n-  // ... other properties\r\n-}\r\n \r\n export function TaskCalendar() {\r\n   const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson | null>(null);\r\n   const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n"
                },
                {
                    "date": 1739514550243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,21 @@\n export default connect(mapState2Props)(App);\r\n \r\n \r\n \r\n+interface ExtendedLesson {\r\n+  // Add your lesson type properties here\r\n+  id: string;\r\n+  title: string;\r\n+  // ... other properties\r\n+}\r\n \r\n+interface SubLesson {\r\n+  // Add your sublesson type properties here\r\n+  id: string;\r\n+  title: string;\r\n+  // ... other properties\r\n+}\r\n \r\n export function TaskCalendar() {\r\n   const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson | null>(null);\r\n   const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n"
                },
                {
                    "date": 1739514558587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,21 +42,21 @@\n export default connect(mapState2Props)(App);\r\n \r\n \r\n \r\n-interface ExtendedLesson {\r\n-  // Add your lesson type properties here\r\n-  id: string;\r\n-  title: string;\r\n-  // ... other properties\r\n-}\r\n+// interface ExtendedLesson {\r\n+//   // Add your lesson type properties here\r\n+//   id: string;\r\n+//   title: string;\r\n+//   // ... other properties\r\n+// }\r\n \r\n-interface SubLesson {\r\n-  // Add your sublesson type properties here\r\n-  id: string;\r\n-  title: string;\r\n-  // ... other properties\r\n-}\r\n+// interface SubLesson {\r\n+//   // Add your sublesson type properties here\r\n+//   id: string;\r\n+//   title: string;\r\n+//   // ... other properties\r\n+// }\r\n \r\n export function TaskCalendar() {\r\n   const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson | null>(null);\r\n   const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n"
                }
            ],
            "date": 1739514311516,
            "name": "Commit-0",
            "content": "\r\n import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n import { Progress } from \"@/components/ui/progress\";\r\n import { Button } from \"@/components/ui/button\";\r\n+import { ScheduleDialog } from './ScheduleDialog';\r\n import {\r\n   ArrowRight,\r\n   BookOpen,\r\n   Calendar,\r\n   CheckCircle2,\r\n   Clock,\r\n   Lock,\r\n   Plus,\r\n   RotateCcw,\r\n   Unlock,\r\n   Users,\r\n   Shield,\r\n } from \"lucide-react\";\r\n\r\n@@ .. @@\r\n   const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson>(lessonsData[0]);\r\n   const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n   const [dialogOpen, setDialogOpen] = useState(false);\r\n+  const [isAddEventOpen, setIsAddEventOpen] = useState(false);\r\n   const [currentLesson, setCurrentLesson] = useState<ExtendedLesson | null>(null);\r\n   const [isLocked, setIsLocked] = useState(true);\r\n\r\n@@ .. @@\r\n   return (\r\n     <div className=\"max-w-6xl w-full relative\">\r\n       <div className=\"flex items-center justify-between mb-4\">\r\n+        <div className=\"flex items-center gap-4\">\r\n           <ClassHeader\r\n             classes={classesData}\r\n             selectedClass={selectedClass}\r\n             onClassChange={handleClassChange}\r\n           />\r\n+          <Button\r\n+            variant=\"outline\"\r\n+            size=\"sm\"\r\n+            onClick={() => setIsAddEventOpen(true)}\r\n+            className=\"ml-4\"\r\n+          >\r\n+            <Plus className=\"h-4 w-4 mr-2\" />\r\n+            Add Event\r\n+          </Button>\r\n+        </div>\r\n         <Button\r\n           variant=\"outline\"\r\n           size=\"sm\"\r\n@@ .. @@\r\n           </div>\r\n         </div>\r\n       </div>\r\n+      \r\n+      {/* Add Event Dialog */}\r\n+      <ScheduleDialog\r\n+        open={isAddEventOpen}\r\n+        onOpenChange={setIsAddEventOpen}\r\n+        onSubmit={async (eventData) => {\r\n+          try {\r\n+            // Handle event creation here\r\n+            console.log('Creating event:', eventData);\r\n+            showToast('Event created successfully', { type: 'success' });\r\n+          } catch (error) {\r\n+            showToast('Failed to create event', { type: 'error' });\r\n+          }\r\n+        }}\r\n+      />"
        }
    ]
}