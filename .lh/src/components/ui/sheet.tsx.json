{
    "sourceFile": "src/components/ui/sheet.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1739448946308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739452812357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,140 +1,140 @@\n-\"use client\"\r\n-\r\n-import * as React from \"react\"\r\n-import * as SheetPrimitive from \"@radix-ui/react-dialog\"\r\n-import { cva, type VariantProps } from \"class-variance-authority\"\r\n-import { X } from \"lucide-react\"\r\n-\r\n-import { cn } from \"@/lib/utils\"\r\n-\r\n-const Sheet = SheetPrimitive.Root\r\n-\r\n-const SheetTrigger = SheetPrimitive.Trigger\r\n-\r\n-const SheetClose = SheetPrimitive.Close\r\n-\r\n-const SheetPortal = SheetPrimitive.Portal\r\n-\r\n-const SheetOverlay = React.forwardRef<\r\n-  React.ElementRef<typeof SheetPrimitive.Overlay>,\r\n-  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\r\n->(({ className, ...props }, ref) => (\r\n-  <SheetPrimitive.Overlay\r\n-    className={cn(\r\n-      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n-      className\r\n-    )}\r\n-    {...props}\r\n-    ref={ref}\r\n-  />\r\n-))\r\n-SheetOverlay.displayName = SheetPrimitive.Overlay.displayName\r\n-\r\n-const sheetVariants = cva(\r\n-  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\r\n-  {\r\n-    variants: {\r\n-      side: {\r\n-        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n-        bottom:\r\n-          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n-        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n-        right:\r\n-          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n-      },\r\n-    },\r\n-    defaultVariants: {\r\n-      side: \"right\",\r\n-    },\r\n-  }\r\n-)\r\n-\r\n-interface SheetContentProps\r\n-  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\r\n-    VariantProps<typeof sheetVariants> {}\r\n-\r\n-const SheetContent = React.forwardRef<\r\n-  React.ElementRef<typeof SheetPrimitive.Content>,\r\n-  SheetContentProps\r\n->(({ side = \"right\", className, children, ...props }, ref) => (\r\n-  <SheetPortal>\r\n-    <SheetOverlay />\r\n-    <SheetPrimitive.Content\r\n-      ref={ref}\r\n-      className={cn(sheetVariants({ side }), className)}\r\n-      {...props}\r\n-    >\r\n-      {children}\r\n-      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n-        <X className=\"h-4 w-4\" />\r\n-        <span className=\"sr-only\">Close</span>\r\n-      </SheetPrimitive.Close>\r\n-    </SheetPrimitive.Content>\r\n-  </SheetPortal>\r\n-))\r\n-SheetContent.displayName = SheetPrimitive.Content.displayName\r\n-\r\n-const SheetHeader = ({\r\n-  className,\r\n-  ...props\r\n-}: React.HTMLAttributes<HTMLDivElement>) => (\r\n-  <div\r\n-    className={cn(\r\n-      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n-      className\r\n-    )}\r\n-    {...props}\r\n-  />\r\n-)\r\n-SheetHeader.displayName = \"SheetHeader\"\r\n-\r\n-const SheetFooter = ({\r\n-  className,\r\n-  ...props\r\n-}: React.HTMLAttributes<HTMLDivElement>) => (\r\n-  <div\r\n-    className={cn(\r\n-      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n-      className\r\n-    )}\r\n-    {...props}\r\n-  />\r\n-)\r\n-SheetFooter.displayName = \"SheetFooter\"\r\n-\r\n-const SheetTitle = React.forwardRef<\r\n-  React.ElementRef<typeof SheetPrimitive.Title>,\r\n-  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\r\n->(({ className, ...props }, ref) => (\r\n-  <SheetPrimitive.Title\r\n-    ref={ref}\r\n-    className={cn(\"text-lg font-semibold text-foreground\", className)}\r\n-    {...props}\r\n-  />\r\n-))\r\n-SheetTitle.displayName = SheetPrimitive.Title.displayName\r\n-\r\n-const SheetDescription = React.forwardRef<\r\n-  React.ElementRef<typeof SheetPrimitive.Description>,\r\n-  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\r\n->(({ className, ...props }, ref) => (\r\n-  <SheetPrimitive.Description\r\n-    ref={ref}\r\n-    className={cn(\"text-sm text-muted-foreground\", className)}\r\n-    {...props}\r\n-  />\r\n-))\r\n-SheetDescription.displayName = SheetPrimitive.Description.displayName\r\n-\r\n-export {\r\n-  Sheet,\r\n-  SheetPortal,\r\n-  SheetOverlay,\r\n-  SheetTrigger,\r\n-  SheetClose,\r\n-  SheetContent,\r\n-  SheetHeader,\r\n-  SheetFooter,\r\n-  SheetTitle,\r\n-  SheetDescription,\r\n-}\r\n+\"use client\"\n+\n+import * as React from \"react\"\n+import * as SheetPrimitive from \"@radix-ui/react-dialog\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { X } from \"lucide-react\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const Sheet = SheetPrimitive.Root\n+\n+const SheetTrigger = SheetPrimitive.Trigger\n+\n+const SheetClose = SheetPrimitive.Close\n+\n+const SheetPortal = SheetPrimitive.Portal\n+\n+const SheetOverlay = React.forwardRef<\n+  React.ElementRef<typeof SheetPrimitive.Overlay>,\n+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n+>(({ className, ...props }, ref) => (\n+  <SheetPrimitive.Overlay\n+    className={cn(\n+      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n+      className\n+    )}\n+    {...props}\n+    ref={ref}\n+  />\n+))\n+SheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n+\n+const sheetVariants = cva(\n+  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n+  {\n+    variants: {\n+      side: {\n+        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n+        bottom:\n+          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n+        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n+        right:\n+          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n+      },\n+    },\n+    defaultVariants: {\n+      side: \"right\",\n+    },\n+  }\n+)\n+\n+interface SheetContentProps\n+  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n+    VariantProps<typeof sheetVariants> {}\n+\n+const SheetContent = React.forwardRef<\n+  React.ElementRef<typeof SheetPrimitive.Content>,\n+  SheetContentProps\n+>(({ side = \"right\", className, children, ...props }, ref) => (\n+  <SheetPortal>\n+    <SheetOverlay />\n+    <SheetPrimitive.Content\n+      ref={ref}\n+      className={cn(sheetVariants({ side }), className)}\n+      {...props}\n+    >\n+      {children}\n+      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n+        <X className=\"h-4 w-4\" />\n+        <span className=\"sr-only\">Close</span>\n+      </SheetPrimitive.Close>\n+    </SheetPrimitive.Content>\n+  </SheetPortal>\n+))\n+SheetContent.displayName = SheetPrimitive.Content.displayName\n+\n+const SheetHeader = ({\n+  className,\n+  ...props\n+}: React.HTMLAttributes<HTMLDivElement>) => (\n+  <div\n+    className={cn(\n+      \"flex flex-col space-y-2 text-center sm:text-left\",\n+      className\n+    )}\n+    {...props}\n+  />\n+)\n+SheetHeader.displayName = \"SheetHeader\"\n+\n+const SheetFooter = ({\n+  className,\n+  ...props\n+}: React.HTMLAttributes<HTMLDivElement>) => (\n+  <div\n+    className={cn(\n+      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n+      className\n+    )}\n+    {...props}\n+  />\n+)\n+SheetFooter.displayName = \"SheetFooter\"\n+\n+const SheetTitle = React.forwardRef<\n+  React.ElementRef<typeof SheetPrimitive.Title>,\n+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n+>(({ className, ...props }, ref) => (\n+  <SheetPrimitive.Title\n+    ref={ref}\n+    className={cn(\"text-lg font-semibold text-foreground\", className)}\n+    {...props}\n+  />\n+))\n+SheetTitle.displayName = SheetPrimitive.Title.displayName\n+\n+const SheetDescription = React.forwardRef<\n+  React.ElementRef<typeof SheetPrimitive.Description>,\n+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n+>(({ className, ...props }, ref) => (\n+  <SheetPrimitive.Description\n+    ref={ref}\n+    className={cn(\"text-sm text-muted-foreground\", className)}\n+    {...props}\n+  />\n+))\n+SheetDescription.displayName = SheetPrimitive.Description.displayName\n+\n+export {\n+  Sheet,\n+  SheetPortal,\n+  SheetOverlay,\n+  SheetTrigger,\n+  SheetClose,\n+  SheetContent,\n+  SheetHeader,\n+  SheetFooter,\n+  SheetTitle,\n+  SheetDescription,\n+}\n"
                }
            ],
            "date": 1739448946308,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Sheet = SheetPrimitive.Root\r\n\r\nconst SheetTrigger = SheetPrimitive.Trigger\r\n\r\nconst SheetClose = SheetPrimitive.Close\r\n\r\nconst SheetPortal = SheetPrimitive.Portal\r\n\r\nconst SheetOverlay = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\r\n\r\nconst sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface SheetContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\r\n    VariantProps<typeof sheetVariants> {}\r\n\r\nconst SheetContent = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Content>,\r\n  SheetContentProps\r\n>(({ side = \"right\", className, children, ...props }, ref) => (\r\n  <SheetPortal>\r\n    <SheetOverlay />\r\n    <SheetPrimitive.Content\r\n      ref={ref}\r\n      className={cn(sheetVariants({ side }), className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </SheetPrimitive.Close>\r\n    </SheetPrimitive.Content>\r\n  </SheetPortal>\r\n))\r\nSheetContent.displayName = SheetPrimitive.Content.displayName\r\n\r\nconst SheetHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetHeader.displayName = \"SheetHeader\"\r\n\r\nconst SheetFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetFooter.displayName = \"SheetFooter\"\r\n\r\nconst SheetTitle = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetTitle.displayName = SheetPrimitive.Title.displayName\r\n\r\nconst SheetDescription = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetDescription.displayName = SheetPrimitive.Description.displayName\r\n\r\nexport {\r\n  Sheet,\r\n  SheetPortal,\r\n  SheetOverlay,\r\n  SheetTrigger,\r\n  SheetClose,\r\n  SheetContent,\r\n  SheetHeader,\r\n  SheetFooter,\r\n  SheetTitle,\r\n  SheetDescription,\r\n}\r\n"
        }
    ]
}