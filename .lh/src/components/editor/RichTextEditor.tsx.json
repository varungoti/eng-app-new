{
    "sourceFile": "src/components/editor/RichTextEditor.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1740772364441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740772369810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,16 +113,18 @@\n           >\r\n             <Bold className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Italic\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleItalic().run()}\r\n             data-active={editor.isActive('italic')}\r\n           >\r\n             <Italic className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Underline\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleUnderline().run()}\r\n             data-active={editor.isActive('underline')}\r\n"
                },
                {
                    "date": 1740772376169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,24 +131,27 @@\n           >\r\n             <Underline className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Strikethrough\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleStrike().run()}\r\n             data-active={editor.isActive('strike')}\r\n           >\r\n             <Strikethrough className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Subscript\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleSubscript().run()}\r\n             data-active={editor.isActive('subscript')}\r\n           >\r\n             <SubscriptIcon className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Superscript\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleSuperscript().run()}\r\n             data-active={editor.isActive('superscript')}\r\n"
                },
                {
                    "date": 1740772384798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,8 +185,9 @@\n \r\n         {/* Lists */}\r\n         <div className=\"flex gap-1\">\r\n           <Button\r\n+            title=\"Bullet List\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n             data-active={editor.isActive('bulletList')}\r\n"
                },
                {
                    "date": 1740772391291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,16 +194,18 @@\n           >\r\n             <List className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Ordered List\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n             data-active={editor.isActive('orderedList')}\r\n           >\r\n             <ListOrdered className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Task List\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleTaskList().run()}\r\n             data-active={editor.isActive('taskList')}\r\n@@ -214,8 +216,9 @@\n \r\n         {/* Alignment */}\r\n         <div className=\"flex gap-1\">\r\n           <Button\r\n+            title=\"Align Left\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().setTextAlign('left').run()}\r\n             data-active={editor.isActive({ textAlign: 'left' })}\r\n"
                },
                {
                    "date": 1740772397687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,24 +225,27 @@\n           >\r\n             <AlignLeft className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Align Center\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().setTextAlign('center').run()}\r\n             data-active={editor.isActive({ textAlign: 'center' })}\r\n           >\r\n             <AlignCenter className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Align Right\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().setTextAlign('right').run()}\r\n             data-active={editor.isActive({ textAlign: 'right' })}\r\n           >\r\n             <AlignRight className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Align Justify\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().setTextAlign('justify').run()}\r\n             data-active={editor.isActive({ textAlign: 'justify' })}\r\n"
                },
                {
                    "date": 1740772408285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,16 +256,18 @@\n \r\n         {/* Special Formatting */}\r\n         <div className=\"flex gap-1\">\r\n           <Button\r\n+            title=\"Blockquote\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleBlockquote().run()}\r\n             data-active={editor.isActive('blockquote')}\r\n           >\r\n             <Quote className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Code\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().toggleCode().run()}\r\n             data-active={editor.isActive('code')}\r\n@@ -282,8 +284,9 @@\n         </div>\r\n \r\n         {/* Table */}\r\n         <Button\r\n+          title=\"Table\"\r\n           variant=\"ghost\"\r\n           size=\"sm\"\r\n           onClick={addTable}\r\n         >\r\n"
                },
                {
                    "date": 1740772415076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -295,15 +295,17 @@\n \r\n         {/* Media */}\r\n         <div className=\"flex gap-1\">\r\n           <Button\r\n+            title=\"Image\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={addImage}\r\n           >\r\n             <ImageIcon className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Link\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={addLink}\r\n             data-active={editor.isActive('link')}\r\n@@ -314,8 +316,9 @@\n \r\n         {/* History */}\r\n         <div className=\"flex gap-1\">\r\n           <Button\r\n+            title=\"Undo\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().undo().run()}\r\n           >\r\n"
                },
                {
                    "date": 1740772424952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,8 +324,9 @@\n           >\r\n             <Undo className=\"h-4 w-4\" />\r\n           </Button>\r\n           <Button\r\n+            title=\"Redo\"\r\n             variant=\"ghost\"\r\n             size=\"sm\"\r\n             onClick={() => editor.chain().focus().redo().run()}\r\n           >\r\n@@ -337,8 +338,9 @@\n         <div className=\"flex gap-1\">\r\n           {[1, 2, 3].map((level) => (\r\n             <Button\r\n               key={level}\r\n+              title={`Heading ${level}`}\r\n               variant=\"ghost\"\r\n               size=\"sm\"\r\n               onClick={() => editor.chain().focus().toggleHeading({ level: level as 1 | 2 | 3 | 4 | 5 | 6 }).run()}\r\n               data-active={editor.isActive('heading', { level: level as 1 | 2 | 3 | 4 | 5 | 6 })}\r\n@@ -351,8 +353,9 @@\n         </div>\r\n \r\n         {/* Code Block */}\r\n         <Button\r\n+          title=\"Code Block\"\r\n           variant=\"ghost\"\r\n           size=\"sm\"\r\n           onClick={() => editor.chain().focus().toggleCodeBlock().run()}\r\n           data-active={editor.isActive('codeBlock')}\r\n"
                },
                {
                    "date": 1740772436693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,8 +364,9 @@\n         </Button>\r\n \r\n         {/* Highlight */}\r\n         <Button\r\n+          title=\"Highlight\"\r\n           variant=\"ghost\"\r\n           size=\"sm\"\r\n           onClick={() => editor.chain().focus().toggleHighlight().run()}\r\n           data-active={editor.isActive('highlight')}\r\n@@ -374,8 +375,9 @@\n         </Button>\r\n \r\n         {/* Hard Break */}\r\n         <Button\r\n+          title=\"Hard Break\"\r\n           variant=\"ghost\"\r\n           size=\"sm\"\r\n           onClick={() => editor.chain().focus().setHardBreak().run()}\r\n         >\r\n@@ -384,9 +386,9 @@\n \r\n         {/* Typography */}\r\n         <Popover>\r\n           <PopoverTrigger asChild>\r\n-            <Button variant=\"ghost\" size=\"sm\">\r\n+            <Button title=\"Typography\" variant=\"ghost\" size=\"sm\">\r\n               <TypographyIcon className=\"h-4 w-4\" />\r\n             </Button>\r\n           </PopoverTrigger>\r\n           <PopoverContent className=\"w-56\">\r\n"
                },
                {
                    "date": 1740772443551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -393,16 +393,18 @@\n           </PopoverTrigger>\r\n           <PopoverContent className=\"w-56\">\r\n             <div className=\"space-y-1\">\r\n               <Button\r\n+                title=\"Hard Break\"\r\n                 variant=\"ghost\"\r\n                 size=\"sm\"\r\n                 className=\"w-full justify-start\"\r\n                 onClick={() => editor.chain().focus().setHardBreak().run()}\r\n               >\r\n                 Hard Break\r\n               </Button>\r\n               <Button\r\n+                title=\"Smart Quotes\"\r\n                 variant=\"ghost\"\r\n                 size=\"sm\"\r\n                 className=\"w-full justify-start\"\r\n                 onClick={() => editor.commands.setTextSelection({ \r\n"
                },
                {
                    "date": 1740772450076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -414,8 +414,9 @@\n               >\r\n                 Smart Quotes\r\n               </Button>\r\n               <Button\r\n+                title=\"Em Dash\"\r\n                 variant=\"ghost\"\r\n                 size=\"sm\"\r\n                 className=\"w-full justify-start\"\r\n                 onClick={() => editor.commands.setTextSelection({ \r\n@@ -429,8 +430,9 @@\n           </PopoverContent>\r\n         </Popover>\r\n \r\n         <Button\r\n+          title=\"Clear Content\"\r\n           variant=\"ghost\"\r\n           size=\"sm\"\r\n           onClick={() => editor.chain().focus().clearContent().run()}\r\n         >\r\n"
                }
            ],
            "date": 1740772364441,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport React, { useEffect } from 'react'\r\nimport { useEditor, EditorContent } from '@tiptap/react'\r\nimport { extensions } from './extensions'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Bold, Italic, Underline, Strikethrough, \r\n  List, ListOrdered, ListChecks,\r\n  Image as ImageIcon, Link as LinkIcon,\r\n  Undo, Redo,\r\n  Quote, Code as CodeIcon, \r\n  Table as TableIcon, \r\n  Minus,\r\n  Subscript as SubscriptIcon,\r\n  Superscript as SuperscriptIcon,\r\n  AlignLeft, AlignCenter, AlignRight, AlignJustify,\r\n  Trash,\r\n  Code2,\r\n  Heading1, Heading2, Heading3,\r\n  HighlighterIcon,\r\n  Brackets,\r\n  Type as TypographyIcon,\r\n} from \"lucide-react\"\r\nimport { \r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\nimport CharacterCount from '@tiptap/extension-character-count'\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface RichTextEditorProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  maxLength?: number;\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function RichTextEditor({ value, onChange, maxLength, placeholder, className }: RichTextEditorProps) {\r\n  const editor = useEditor({\r\n    extensions: [\r\n      ...extensions,\r\n      ...(maxLength ? [CharacterCount.configure({ limit: maxLength })] : [])\r\n    ],\r\n    content: value || '',\r\n    onUpdate: ({ editor }) => {\r\n      try {\r\n        const html = editor.getHTML();\r\n        onChange(html);\r\n      } catch (error) {\r\n        console.error('Editor update error:', error);\r\n      }\r\n    },\r\n    editorProps: {\r\n      attributes: {\r\n        class: 'prose prose-sm max-w-none focus:outline-none',\r\n        ...(placeholder && { 'data-placeholder': placeholder })\r\n      }\r\n    }\r\n  });\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      editor?.destroy();\r\n    };\r\n  }, [editor]);\r\n\r\n  if (!editor) return null;\r\n\r\n  const addTable = () => {\r\n    editor.chain().focus().insertTable({ rows: 3, cols: 3 }).run();\r\n  }\r\n\r\n  const addImage = () => {\r\n    const url = window.prompt('Enter image URL');\r\n    if (url) editor.chain().focus().setImage({ src: url }).run();\r\n  }\r\n\r\n  const addLink = () => {\r\n    const url = window.prompt('Enter URL');\r\n    if (url) editor.chain().focus().setLink({ href: url }).run();\r\n  }\r\n\r\n  const setFontSize = (size: string) => {\r\n    editor.chain().focus().setFontSize(size).run();\r\n  }\r\n\r\n  const setFontFamily = (font: string) => {\r\n    editor.chain().focus().setFontFamily(font).run();\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"border rounded-lg\", className)}>\r\n      <div className=\"border-b p-2 flex flex-wrap gap-2\">\r\n        {/* Text Style Controls */}\r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            title=\"Bold\"\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleBold().run()}\r\n            data-active={editor.isActive('bold')}\r\n          >\r\n            <Bold className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleItalic().run()}\r\n            data-active={editor.isActive('italic')}\r\n          >\r\n            <Italic className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleUnderline().run()}\r\n            data-active={editor.isActive('underline')}\r\n          >\r\n            <Underline className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleStrike().run()}\r\n            data-active={editor.isActive('strike')}\r\n          >\r\n            <Strikethrough className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleSubscript().run()}\r\n            data-active={editor.isActive('subscript')}\r\n          >\r\n            <SubscriptIcon className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleSuperscript().run()}\r\n            data-active={editor.isActive('superscript')}\r\n          >\r\n            <SuperscriptIcon className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Font Controls */}\r\n        <Select onValueChange={setFontSize}>\r\n          <SelectTrigger className=\"w-[100px]\">\r\n            <SelectValue placeholder=\"Size\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {['8px', '10px', '12px', '14px', '16px', '20px', '24px', '32px'].map(size => (\r\n              <SelectItem key={size} value={size}>{size}</SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n\r\n        <Select onValueChange={setFontFamily}>\r\n          <SelectTrigger className=\"w-[120px]\">\r\n            <SelectValue placeholder=\"Font\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {['Arial', 'Times New Roman', 'Courier New', 'Georgia', 'Verdana'].map(font => (\r\n              <SelectItem key={font} value={font}>{font}</SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n\r\n        {/* Lists */}\r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n            data-active={editor.isActive('bulletList')}\r\n          >\r\n            <List className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n            data-active={editor.isActive('orderedList')}\r\n          >\r\n            <ListOrdered className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleTaskList().run()}\r\n            data-active={editor.isActive('taskList')}\r\n          >\r\n            <ListChecks className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Alignment */}\r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().setTextAlign('left').run()}\r\n            data-active={editor.isActive({ textAlign: 'left' })}\r\n          >\r\n            <AlignLeft className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().setTextAlign('center').run()}\r\n            data-active={editor.isActive({ textAlign: 'center' })}\r\n          >\r\n            <AlignCenter className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().setTextAlign('right').run()}\r\n            data-active={editor.isActive({ textAlign: 'right' })}\r\n          >\r\n            <AlignRight className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().setTextAlign('justify').run()}\r\n            data-active={editor.isActive({ textAlign: 'justify' })}\r\n          >\r\n            <AlignJustify className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Special Formatting */}\r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleBlockquote().run()}\r\n            data-active={editor.isActive('blockquote')}\r\n          >\r\n            <Quote className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().toggleCode().run()}\r\n            data-active={editor.isActive('code')}\r\n          >\r\n            <CodeIcon className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().setHorizontalRule().run()}\r\n          >\r\n            <Minus className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={addTable}\r\n        >\r\n          <TableIcon className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        {/* Media */}\r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={addImage}\r\n          >\r\n            <ImageIcon className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={addLink}\r\n            data-active={editor.isActive('link')}\r\n          >\r\n            <LinkIcon className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* History */}\r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().undo().run()}\r\n          >\r\n            <Undo className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => editor.chain().focus().redo().run()}\r\n          >\r\n            <Redo className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Heading Levels */}\r\n        <div className=\"flex gap-1\">\r\n          {[1, 2, 3].map((level) => (\r\n            <Button\r\n              key={level}\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => editor.chain().focus().toggleHeading({ level: level as 1 | 2 | 3 | 4 | 5 | 6 }).run()}\r\n              data-active={editor.isActive('heading', { level: level as 1 | 2 | 3 | 4 | 5 | 6 })}\r\n            >\r\n              {level === 1 && <Heading1 className=\"h-4 w-4\" />}\r\n              {level === 2 && <Heading2 className=\"h-4 w-4\" />}\r\n              {level === 3 && <Heading3 className=\"h-4 w-4\" />}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Code Block */}\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => editor.chain().focus().toggleCodeBlock().run()}\r\n          data-active={editor.isActive('codeBlock')}\r\n        >\r\n          <Code2 className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        {/* Highlight */}\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => editor.chain().focus().toggleHighlight().run()}\r\n          data-active={editor.isActive('highlight')}\r\n        >\r\n          <HighlighterIcon className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        {/* Hard Break */}\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => editor.chain().focus().setHardBreak().run()}\r\n        >\r\n          <Brackets className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        {/* Typography */}\r\n        <Popover>\r\n          <PopoverTrigger asChild>\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <TypographyIcon className=\"h-4 w-4\" />\r\n            </Button>\r\n          </PopoverTrigger>\r\n          <PopoverContent className=\"w-56\">\r\n            <div className=\"space-y-1\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"w-full justify-start\"\r\n                onClick={() => editor.chain().focus().setHardBreak().run()}\r\n              >\r\n                Hard Break\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"w-full justify-start\"\r\n                onClick={() => editor.commands.setTextSelection({ \r\n                  from: editor.state.selection.from - 1,\r\n                  to: editor.state.selection.from \r\n                })}\r\n              >\r\n                Smart Quotes\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"w-full justify-start\"\r\n                onClick={() => editor.commands.setTextSelection({ \r\n                  from: editor.state.selection.from - 1,\r\n                  to: editor.state.selection.from \r\n                })}\r\n              >\r\n                Em Dash\r\n              </Button>\r\n            </div>\r\n          </PopoverContent>\r\n        </Popover>\r\n\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => editor.chain().focus().clearContent().run()}\r\n        >\r\n          <Trash className=\"h-4 w-4\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <EditorContent \r\n        editor={editor} \r\n        className={cn(\"p-4 min-h-[300px] prose prose-sm max-w-none\", className)}\r\n      />\r\n\r\n      {maxLength && editor?.storage.characterCount.characters() !== undefined && (\r\n        <div className=\"p-2 text-sm text-muted-foreground border-t\">\r\n          {editor.storage.characterCount.characters()}/{maxLength} characters\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n} "
        }
    ]
}