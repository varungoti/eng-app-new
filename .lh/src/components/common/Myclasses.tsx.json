{
    "sourceFile": "src/components/common/Myclasses.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1740777423452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740777461548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,11 +229,11 @@\n                     <CardHeader className=\"pb-0\">\r\n                       <CardTitle className=\"flex items-center justify-between text-lg\">\r\n                         <span className=\"text-xl\">{subLesson.title}</span>\r\n                         {subLesson.unlocked ? (\r\n-                          <Unlock className=\"h-5 w-5 text-green-500\" />\r\n+                          <Icon type=\"phosphor\" name=\"UNLOCK\" className=\"h-5 w-5 text-green-500\" />\r\n                         ) : (\r\n-                          <Lock className=\"h-5 w-5\" />\r\n+                          <Icon type=\"phosphor\" name=\"LOCK_SIMPLE\" className=\"h-5 w-5\" />\r\n                         )}\r\n                       </CardTitle>\r\n                     </CardHeader>\r\n                     <CardContent className=\"relative\">\r\n"
                },
                {
                    "date": 1740777476894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,10 @@\n   DialogDescription,\r\n   DialogFooter,\r\n } from \"@/components/ui/dialog\";\r\n import ClassHeader from \"./ClassHeader\";\r\n+import Link from \"next/link\";\r\n+import { Lock, Unlock } from \"lucide-react\";\r\n \r\n interface SubLesson {\r\n   id: number;\r\n   title: string;\r\n@@ -229,11 +231,11 @@\n                     <CardHeader className=\"pb-0\">\r\n                       <CardTitle className=\"flex items-center justify-between text-lg\">\r\n                         <span className=\"text-xl\">{subLesson.title}</span>\r\n                         {subLesson.unlocked ? (\r\n-                          <Icon type=\"phosphor\" name=\"UNLOCK\" className=\"h-5 w-5 text-green-500\" />\r\n+                          <Unlock className=\"h-5 w-5 text-green-500\" />\r\n                         ) : (\r\n-                          <Icon type=\"phosphor\" name=\"LOCK_SIMPLE\" className=\"h-5 w-5\" />\r\n+                          <Lock className=\"h-5 w-5\" />\r\n                         )}\r\n                       </CardTitle>\r\n                     </CardHeader>\r\n                     <CardContent className=\"relative\">\r\n"
                },
                {
                    "date": 1740777517988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,14 +121,15 @@\n         threshold: [0, 0.25, 0.5, 0.75, 1],\r\n       }\r\n     );\r\n \r\n-    lessonRefs.current.forEach((ref) => {\r\n+    const currentRefs = lessonRefs.current;\r\n+    currentRefs.forEach((ref) => {\r\n       if (ref) observer.observe(ref);\r\n     });\r\n \r\n     return () => {\r\n-      lessonRefs.current.forEach((ref) => {\r\n+      currentRefs.forEach((ref) => {\r\n         if (ref) observer.unobserve(ref);\r\n       });\r\n     };\r\n   }, [lessons]);\r\n"
                },
                {
                    "date": 1740777552036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   Dialog,\r\n   DialogContent,\r\n   DialogHeader,\r\n   DialogTitle,\r\n-  DialogDescription,\r\n+\r\n   DialogFooter,\r\n } from \"@/components/ui/dialog\";\r\n import ClassHeader from \"./ClassHeader\";\r\n import Link from \"next/link\";\r\n"
                }
            ],
            "date": 1740777423452,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Button } from \"../ui/button\";\r\nimport { classesData, lessonsData } from \"@/data/mockData\";\r\nimport { Icon } from '@/components/ui/icons';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\";\r\nimport ClassHeader from \"./ClassHeader\";\r\n\r\ninterface SubLesson {\r\n  id: number;\r\n  title: string;\r\n  unlocked: boolean;\r\n  completed?: boolean;\r\n  duration?: number;\r\n  description?: string;\r\n}\r\n\r\ninterface ExtendedClass {\r\n  id: number;\r\n  name: string;\r\n  schedule: string;\r\n  students: number;\r\n  gradeLevel?: string;\r\n  createdAt?: Date;\r\n  maxStudents?: number;\r\n  lessonIds?: number[];\r\n  assignments?: number[];\r\n  studentIds?: number[];\r\n}\r\n\r\ninterface ExtendedLesson {\r\n  id: number;\r\n  classId: number;\r\n  title: string;\r\n  topic: string;\r\n  duration: number;\r\n  lessonNumber: string;\r\n  totalTopics: string;\r\n  difficulty: string;\r\n  color: string;\r\n  unlocked: boolean;\r\n  completed: boolean;\r\n  subLessons: SubLesson[];\r\n}\r\n\r\ninterface MyClassesProps {\r\n  data?: any;\r\n}\r\n\r\nexport function MyClasses({ data }: MyClassesProps) {\r\n  const [lessons, setLessons] = useState<ExtendedLesson[]>(lessonsData);\r\n  const [selectedClass, setSelectedClass] = useState<ExtendedClass>(classesData[0]);\r\n  const [selectedLesson, setSelectedLesson] = useState<ExtendedLesson>(lessonsData[0]);\r\n  const [selectedSubLesson, setSelectedSubLesson] = useState<SubLesson | null>(null);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [currentLesson, setCurrentLesson] = useState<ExtendedLesson | null>(null);\r\n\r\n  const handleClassChange = (classData: ExtendedClass) => {\r\n    setSelectedClass(classData);\r\n    console.log(classData, \"classData\");\r\n    if (classData) {\r\n      const filteredLessons = lessonsData.filter(\r\n        (lesson) => lesson.classId === classData?.id\r\n      );\r\n      setLessons(filteredLessons);\r\n    }\r\n  };\r\n\r\n  const handleSubLessonClick = (\r\n    e: React.MouseEvent,\r\n    subLesson: SubLesson,\r\n    lesson: ExtendedLesson\r\n  ) => {\r\n    e.preventDefault();\r\n    setSelectedSubLesson(subLesson);\r\n    setCurrentLesson(lesson);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleStartLesson = (lessonId: number, subLessonId: number) => {\r\n    setDialogOpen(false);\r\n    window.location.href = `/lesson/${lessonId}/${subLessonId}`;\r\n  };\r\n\r\n  const handleRestartLesson = (lessonId: number, subLessonId: number) => {\r\n    setDialogOpen(false);\r\n    window.location.href = `/lesson/${lessonId}/${subLessonId}?restart=true`;\r\n  };\r\n\r\n  const lessonRefs = useRef<(HTMLDivElement | null)[]>([]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            const lessonInView = lessons.find(\r\n              (lesson) => lesson.id === parseInt(entry.target.id)\r\n            );\r\n            if (lessonInView) {\r\n              setSelectedLesson(lessonInView);\r\n            }\r\n          }\r\n        });\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: \"-05% 0px -85% 0px\",\r\n        threshold: [0, 0.25, 0.5, 0.75, 1],\r\n      }\r\n    );\r\n\r\n    lessonRefs.current.forEach((ref) => {\r\n      if (ref) observer.observe(ref);\r\n    });\r\n\r\n    return () => {\r\n      lessonRefs.current.forEach((ref) => {\r\n        if (ref) observer.unobserve(ref);\r\n      });\r\n    };\r\n  }, [lessons]);\r\n\r\n  return (\r\n    <div className=\"max-w-6xl w-full relative\">\r\n      <ClassHeader\r\n        classes={classesData}\r\n        selectedClass={selectedClass}\r\n        onClassChange={handleClassChange as any}\r\n      />\r\n      \r\n      <Card className=\"text-gray-700 bg-white bg-opacity-15 rounded-3xl mb-4 border-0 shadow\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-2xl\">{selectedClass?.name}</CardTitle>\r\n          <div className=\"grid grid-cols-4 gap-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Icon type=\"phosphor\" name=\"USERS\" className=\"h-4 w-4 text-blue-300\" />\r\n              <span className=\"text-sm font-medium\">\r\n                {selectedClass?.studentIds?.length ?? 0}/\r\n                {selectedClass?.maxStudents ?? 0} Students\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Icon type=\"phosphor\" name=\"BOOK_OPEN\" className=\"h-4 w-4 text-green-300\" />\r\n              <span className=\"text-sm font-medium\">\r\n                {selectedClass?.lessonIds?.length ?? 0} Lessons\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Icon type=\"phosphor\" name=\"CALENDAR\" className=\"h-4 w-4 text-purple-300\" />\r\n              <span className=\"text-sm font-medium\">\r\n                {selectedClass?.assignments?.length ?? 0} Assignments\r\n              </span>\r\n            </div>\r\n            <div className=\"text-sm mt-2\">70% Completed</div>\r\n          </div> \r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <Card className={`${selectedLesson.color} text-white rounded-xl`}>\r\n        <CardHeader className=\"p-2 md:p-4 md:pl-6\">\r\n          <CardTitle className=\"text-2xl\">{selectedLesson.title}</CardTitle>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Icon type=\"phosphor\" name=\"CLOCK_COUNTDOWN\" className=\"h-4 w-4\" />\r\n            <span>{selectedLesson.duration} minutes</span>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      <div className=\"space-y-8 -z-10 pb-[100vh]\">\r\n        {lessons.map((lesson, index) => (\r\n          <div\r\n            id={lesson.id.toString()}\r\n            ref={(el: HTMLDivElement | null) => {\r\n              if (lessonRefs.current) {\r\n                lessonRefs.current[index] = el;\r\n              }\r\n            }}\r\n            key={lesson.id}\r\n            className=\"space-y-4 mb-8\"\r\n          >\r\n            <div className={`pt-2 pb-2 px-4 ${index === 0 && `-mt-10`}`}>\r\n              <div className=\"flex w-full justify-center\">\r\n                <div className=\"flex items-center relative max-w-lg w-full\">\r\n                  {/* Left line */}\r\n                  <div className=\"flex-grow border-t border-gray-300 dark:border-gray-700\"></div>\r\n\r\n                  {/* Text with dynamic color */}\r\n                  <div\r\n                    className={`${lesson.color} z-10 text-white rounded-3xl text-xl px-4`}\r\n                  >\r\n                    {lesson.title}\r\n                  </div>\r\n\r\n                  {/* Progress bar */}\r\n                  {/* <Progress\r\n                    value={lesson.completed ? 100 : 50}\r\n                    className=\"z-0 w-full bg-white/30 absolute rounded-3xl top-1/2 transform -translate-y-1/2\"\r\n                  /> */}\r\n\r\n                  {/* Right line */}\r\n                  <div className=\"flex-grow border-t border-gray-300 dark:border-gray-700\"></div>\r\n                </div>\r\n              </div>\r\n \r\n            </div>\r\n            <div className=\"flex flex-col gap-4\">\r\n              {lesson.subLessons.map((subLesson) => (\r\n                <Link\r\n                  href={`/lesson/${lesson.id}/${subLesson.id}`}\r\n                  key={subLesson.id}\r\n                  onClick={(e) => handleSubLessonClick(e, subLesson, lesson)}\r\n                >\r\n                  <Card\r\n                    className={`mx-4 border border-gray-200 dark:border-gray-800  rounded-3xl bg-white dark:bg-gray-900 overflow-hidden cursor-pointer hover:shadow-md transition-shadow ${\r\n                      subLesson.unlocked ? \"\" : \"opacity-50\"\r\n                    }`}\r\n                  >\r\n                    <CardHeader className=\"pb-0\">\r\n                      <CardTitle className=\"flex items-center justify-between text-lg\">\r\n                        <span className=\"text-xl\">{subLesson.title}</span>\r\n                        {subLesson.unlocked ? (\r\n                          <Unlock className=\"h-5 w-5 text-green-500\" />\r\n                        ) : (\r\n                          <Lock className=\"h-5 w-5\" />\r\n                        )}\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"relative\">\r\n                      <Progress\r\n                        value={subLesson.completed ? 100 : 0}\r\n                        className=\"w-full absolute bottom-0 -ml-6\"\r\n                      />\r\n                      <p className=\"mt-2 text-sm text-gray-600\">\r\n                        {subLesson.completed\r\n                          ? \"Completed\"\r\n                          : subLesson.unlocked\r\n                          ? \"Ready to start\"\r\n                          : \"Locked\"}\r\n                      </p>\r\n                      <p className=\"mt-1 text-xs text-gray-500\">\r\n                        Estimated time: 15 minutes\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <Icon type=\"phosphor\" name=\"BOOK_OPEN\" className=\"h-5 w-5\" />\r\n              {selectedSubLesson?.title}\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            <Icon type=\"phosphor\" name=\"CLOCK_COUNTDOWN\" className=\"h-4 w-4\" />\r\n            <span>{selectedSubLesson?.duration} minutes</span>\r\n          </div>\r\n\r\n          <DialogFooter className=\"sm:justify-start gap-2\">\r\n            {!selectedSubLesson?.unlocked ? (\r\n              <div className=\"flex items-center gap-2 text-gray-500\">\r\n                <Icon type=\"phosphor\" name=\"LOCK_SIMPLE\" className=\"h-4 w-4\" />\r\n                <span>Complete previous lessons to unlock</span>\r\n              </div>\r\n            ) : selectedSubLesson.completed ? (\r\n              <>\r\n                <Button variant=\"outline\" className=\"gap-2\">\r\n                  <Icon type=\"phosphor\" name=\"ARROWS_CLOCKWISE\" className=\"h-4 w-4\" />\r\n                  Restart Lesson\r\n                </Button>\r\n                <Button>\r\n                  <Icon type=\"phosphor\" name=\"CARET_RIGHT\" className=\"h-4 w-4 mr-2\" />\r\n                  Continue to Review\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button className=\"w-full gap-2\">\r\n                <Icon type=\"phosphor\" name=\"PLAY_CIRCLE\" className=\"h-4 w-4\" />\r\n                Start Lesson\r\n              </Button>\r\n            )}\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}