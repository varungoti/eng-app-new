{
    "sourceFile": "src/components/Layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1739299476094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739299488264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,8 +185,62 @@\n       </Link>\r\n     );\r\n   };\r\n \r\n+  const SidebarItem = ({ item, isActive }: { item: NavigationItem; isActive: boolean }) => {\r\n+    const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\r\n+    const Icon = item.icon;\r\n+\r\n+    if (item.submenu) {\r\n+      return (\r\n+        <div>\r\n+          <button\r\n+            onClick={() => setIsSubmenuOpen(!isSubmenuOpen)}\r\n+            className={`flex w-full items-center px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${\r\n+              isActive ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n+            }`}\r\n+          >\r\n+            <Icon className=\"mr-3 h-4 w-4\" />\r\n+            <span>{item.name}</span>\r\n+            <ChevronDown className={`ml-auto h-4 w-4 transform transition-transform ${isSubmenuOpen ? 'rotate-180' : ''}`} />\r\n+          </button>\r\n+          {isSubmenuOpen && (\r\n+            <div className=\"ml-4 space-y-1\">\r\n+              {item.submenu.map((subItem) => {\r\n+                const SubIcon = subItem.icon;\r\n+                const isSubItemActive = pathname === subItem.href;\r\n+                return (\r\n+                  <Link\r\n+                    key={subItem.href}\r\n+                    href={subItem.href}\r\n+                    className={`flex items-center px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${\r\n+                      isSubItemActive ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n+                    }`}\r\n+                  >\r\n+                    <SubIcon className=\"mr-3 h-4 w-4\" />\r\n+                    <span>{subItem.name}</span>\r\n+                  </Link>\r\n+                );\r\n+              })}\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      );\r\n+    }\r\n+\r\n+    return (\r\n+      <Link\r\n+        href={item.href}\r\n+        className={`flex items-center px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${\r\n+          isActive ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n+        }`}\r\n+      >\r\n+        <Icon className=\"mr-3 h-4 w-4\" />\r\n+        <span>{item.name}</span>\r\n+      </Link>\r\n+    );\r\n+  };\r\n+\r\n   return (\r\n     <div className={`min-h-screen ${currentTheme.background}`}>\r\n       <div className=\"flex h-screen overflow-hidden\">\r\n         <ErrorBoundary source=\"Notifications\">\r\n"
                },
                {
                    "date": 1739299915396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,320 +1,266 @@\n-\"use client\";\r\n-\r\n-import React, { useState } from 'react';\r\n-import { useLocation, Link, Outlet } from 'react-router-dom';\r\n-import { useTheme } from \"next-themes\";\r\n-import { AuthContext } from '../contexts/AuthContext';\r\n-import { logger } from '../lib/logger';\r\n-import { useError } from '../hooks/useError';\r\n-import NotificationBell from './notifications/NotificationBell';\r\n-import UserProfileMenu from './UserProfileMenu';\r\n-import ErrorBoundary from './ErrorBoundary';\r\n-import { PerformanceIndicator } from './PerformanceIndicator';\r\n-import { LoadingIndicator } from './LoadingIndicator';\r\n-import { ErrorMetricsDisplay } from './ErrorMonitor/ErrorMetricsDisplay';\r\n-import { themes } from '../lib/themes';\r\n-import { getNavigationItems } from '../lib/permissions';\r\n-import UserRoleIndicator from './UserRoleIndicator';\r\n-import ThemeSelector from './ThemeSelector';\r\n-import { ThemeToggle } from \"./theme-toggle\";\r\n-import { SidebarItem } from '../types/navigation';\r\n-import { \r\n-  Home, \r\n-  Bookmark, \r\n-  ChevronUp, \r\n-  ChevronDown, \r\n-  Loader, \r\n-  AlertTriangle, \r\n-  BookOpen, \r\n-  Book,\r\n-  type LucideIcon \r\n-} from 'lucide-react';\r\n-//import { Books } from '@phosphor-icons/react/dist/ssr';\r\n-\r\n-interface NavItem  {\r\n-  name: string;\r\n-  href?: string;\r\n-  icon: LucideIcon;\r\n-  current?: boolean;\r\n-  submenu?: { \r\n-    name: string; \r\n-    href: string;\r\n-    icon: LucideIcon;\r\n-    current?: boolean; \r\n-  }[];\r\n-}\r\n-\r\n-const Layout: React.FC = () => {\r\n-  const location = useLocation();\r\n-  const { theme, resolvedTheme } = useTheme();\r\n-  const { user, loading } = React.useContext(AuthContext);\r\n-  const { error } = useError();\r\n-  const currentTheme = themes[theme as keyof typeof themes] || themes[resolvedTheme as keyof typeof themes] || themes.light;\r\n-  const [openSubmenu, setOpenSubmenu] = useState<string | null>(null);\r\n-\r\n-  const navigation = user ? getNavigationItems(user.role).map(item => ({\r\n-    ...item,\r\n-    current: item.submenu \r\n-      ? item.submenu.some(subitem => location.pathname === subitem.href)\r\n-      : location.pathname === item.href\r\n-  })) : [];\r\n-\r\n-  React.useEffect(() => {\r\n-    logger.debug('Navigation state updated', {\r\n-      context: {\r\n-        pathname: location.pathname,\r\n-        role: user?.role,\r\n-        navigationItems: navigation.length\r\n-      },\r\n-      source: 'Layout'\r\n-    });\r\n-  }, [location.pathname, user?.role, navigation.length]);\r\n-\r\n-  if (loading || !user) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n-        <div className=\"text-center space-y-2\">\r\n-          <Loader \r\n-            className=\"h-12 w-12 text-indigo-600 animate-spin mx-auto\"\r\n-          />\r\n-          <p className=\"mt-4 text-gray-600\">Loading application...</p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n-        <div className=\"text-center space-y-4 max-w-md mx-auto px-4\">\r\n-          <AlertTriangle \r\n-            className=\"h-12 w-12 text-red-600 mx-auto\"\r\n-          />\r\n-          <h2 className=\"text-lg font-medium text-gray-900\">Application Error</h2>\r\n-          <p className=\"text-sm text-gray-600\">{error}</p>\r\n-          <button\r\n-            onClick={() => window.location.reload()}\r\n-            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n-          >\r\n-            Reload Application\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  const renderNavItem = (item: NavItem) => {\r\n-    if (item.submenu) {\r\n-      const isSubmenuActive = item.submenu.some(subitem => location.pathname.startsWith(subitem.href));\r\n-      const isOpen = openSubmenu === item.name;\r\n-      \r\n-      return (\r\n-        <div className=\"mb-2\">\r\n-          <button\r\n-            onClick={() => setOpenSubmenu(openSubmenu === item.name ? null : item.name)}\r\n-            className={`${\r\n-              isSubmenuActive || isOpen\r\n-                ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\r\n-                : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\r\n-            } w-full group flex items-center justify-between px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 ease-in-out hover:shadow-md`}\r\n-          >\r\n-            <div className=\"flex items-center\">\r\n-              <item.icon \r\n-                className={`${\r\n-                  isSubmenuActive || isOpen\r\n-                    ? 'text-indigo-600 dark:text-indigo-400' \r\n-                    : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\r\n-                } mr-3 flex-shrink-0 h-5 w-5 transition-all duration-200 group-hover:scale-110`}\r\n-              />\r\n-              {item.name}\r\n-            </div>\r\n-            {isOpen ? (\r\n-              <ChevronUp className=\"h-4 w-4 text-gray-400 transition-transform duration-200\" />\r\n-            ) : (\r\n-              <ChevronDown className=\"h-4 w-4 text-gray-400 transition-transform duration-200\" />\r\n-            )}\r\n-          </button>\r\n-          \r\n-          {isOpen && (\r\n-            <div className=\"mt-1 ml-4 space-y-1 animate-slideDown\">\r\n-              {item.submenu.map((subitem, subIndex) => (\r\n-                <Link\r\n-                  key={subitem.href}\r\n-                  to={subitem.href}\r\n-                  className={`${\r\n-                    location.pathname.startsWith(subitem.href)\r\n-                      ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\r\n-                      : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\r\n-                  } group flex items-center px-4 py-2.5 text-sm font-medium rounded-lg transition-all duration-200 hover:shadow-sm`}\r\n-                  style={{ animationDelay: `${subIndex * 50}ms` }}\r\n-                >\r\n-                  <subitem.icon \r\n-                    className={`${\r\n-                      location.pathname === subitem.href \r\n-                        ? 'text-indigo-600 dark:text-indigo-400' \r\n-                        : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\r\n-                    } mr-3 flex-shrink-0 h-4 w-4 transition-all duration-200 group-hover:scale-110`}\r\n-                  />\r\n-                  {subitem.name}\r\n-                </Link>\r\n-              ))}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      );\r\n-    }\r\n-\r\n-    return (\r\n-      <Link\r\n-        key={item.name}\r\n-        to={item.href || '#'}\r\n-        className={`${\r\n-          location.pathname === item.href\r\n-            ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\r\n-            : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\r\n-        } group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 hover:shadow-md mb-1`}\r\n-      >\r\n-        <item.icon \r\n-          className={`${\r\n-            location.pathname === item.href\r\n-              ? 'text-indigo-600 dark:text-indigo-400' \r\n-              : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\r\n-          } mr-3 flex-shrink-0 h-5 w-5 transition-all duration-200 group-hover:scale-110`}\r\n-        />\r\n-        {item.name}\r\n-      </Link>\r\n-    );\r\n-  };\r\n-\r\n-  const SidebarItem = ({ item, isActive }: { item: NavigationItem; isActive: boolean }) => {\r\n-    const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\r\n-    const Icon = item.icon;\r\n-\r\n-    if (item.submenu) {\r\n-      return (\r\n-        <div>\r\n-          <button\r\n-            onClick={() => setIsSubmenuOpen(!isSubmenuOpen)}\r\n-            className={`flex w-full items-center px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${\r\n-              isActive ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n-            }`}\r\n-          >\r\n-            <Icon className=\"mr-3 h-4 w-4\" />\r\n-            <span>{item.name}</span>\r\n-            <ChevronDown className={`ml-auto h-4 w-4 transform transition-transform ${isSubmenuOpen ? 'rotate-180' : ''}`} />\r\n-          </button>\r\n-          {isSubmenuOpen && (\r\n-            <div className=\"ml-4 space-y-1\">\r\n-              {item.submenu.map((subItem) => {\r\n-                const SubIcon = subItem.icon;\r\n-                const isSubItemActive = pathname === subItem.href;\r\n-                return (\r\n-                  <Link\r\n-                    key={subItem.href}\r\n-                    href={subItem.href}\r\n-                    className={`flex items-center px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${\r\n-                      isSubItemActive ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n-                    }`}\r\n-                  >\r\n-                    <SubIcon className=\"mr-3 h-4 w-4\" />\r\n-                    <span>{subItem.name}</span>\r\n-                  </Link>\r\n-                );\r\n-              })}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      );\r\n-    }\r\n-\r\n-    return (\r\n-      <Link\r\n-        href={item.href}\r\n-        className={`flex items-center px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${\r\n-          isActive ? 'bg-gray-100 dark:bg-gray-800' : ''\r\n-        }`}\r\n-      >\r\n-        <Icon className=\"mr-3 h-4 w-4\" />\r\n-        <span>{item.name}</span>\r\n-      </Link>\r\n-    );\r\n-  };\r\n-\r\n-  return (\r\n-    <div className={`min-h-screen ${currentTheme.background}`}>\r\n-      <div className=\"flex h-screen overflow-hidden\">\r\n-        <ErrorBoundary source=\"Notifications\">\r\n-          <div className=\"fixed top-4 right-16 z-50\">\r\n-            <NotificationBell />\r\n-          </div>\r\n-        </ErrorBoundary>\r\n-\r\n-        <div className=\"hidden md:flex md:flex-shrink-0 relative\">\r\n-          <div className=\"flex flex-col w-80\">\r\n-            <ErrorBoundary source=\"Sidebar\">\r\n-              <div className={`flex flex-col flex-grow pt-6 overflow-y-auto ${currentTheme.sidebar} border-r ${currentTheme.border} shadow-xl backdrop-blur-sm bg-opacity-95 transition-all duration-300 ease-in-out`}>\r\n-                <div className=\"flex items-center justify-between px-6 mb-8\">\r\n-                  <div className=\"flex items-center space-x-3 group\">\r\n-                    <Bookmark \r\n-                      className={`w-8 h-8 ${currentTheme.primary.replace('bg-', 'text-')} transform transition-transform group-hover:scale-110 duration-200`}\r\n-                    />\r\n-                    <span className={`text-xl font-bold tracking-tight ${currentTheme.text} group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors duration-200`}>\r\n-                      SpeakWell Admin\r\n-                    </span>\r\n-                  </div>\r\n-                </div>\r\n-\r\n-                <div className=\"flex-grow flex flex-col px-3\">\r\n-                  <nav className=\"flex-1 space-y-1.5\">\r\n-                    {navigation.map((item, index) => (\r\n-                      <div key={item.name} \r\n-                        className=\"animate-fadeIn\" \r\n-                        style={{ animationDelay: `${index * 50}ms` }}\r\n-                      >\r\n-                        {renderNavItem(item)}\r\n-                      </div>\r\n-                    ))}\r\n-                  </nav>\r\n-                </div>\r\n-\r\n-                <div className=\"p-5 mt-6 border-t border-gray-200 dark:border-gray-700/50 backdrop-blur-sm\">\r\n-                  <UserProfileMenu />\r\n-                </div>\r\n-              </div>\r\n-            </ErrorBoundary>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\r\n-          <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\r\n-            <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\r\n-              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-8 ${currentTheme.background}`}>\r\n-                <ErrorBoundary source=\"MainContent\">\r\n-                  <div className={`${currentTheme.card} rounded-lg p-6`}>\r\n-                    <Outlet />\r\n-                  </div>\r\n-                </ErrorBoundary>\r\n-              </div>\r\n-            </div>\r\n-          </main>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <ErrorBoundary source=\"Monitoring\">\r\n-        <div className=\"fixed bottom-4 right-4 z-50 space-y-4\">\r\n-          <PerformanceIndicator source=\"Layout\" showCompleted={true} />\r\n-          <LoadingIndicator resource=\"Layout\" />\r\n-          <ErrorMetricsDisplay />\r\n-        </div>\r\n-      </ErrorBoundary>\r\n-\r\n-      <ErrorBoundary source=\"UserRole\">\r\n-        <UserRoleIndicator />\r\n-      </ErrorBoundary>\r\n-\r\n-      <ThemeToggle />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n+\"use client\";\n+\n+import React, { useState } from 'react';\n+import { useLocation, Link, Outlet } from 'react-router-dom';\n+import { useTheme } from \"next-themes\";\n+import { AuthContext } from '../contexts/AuthContext';\n+import { logger } from '../lib/logger';\n+import { useError } from '../hooks/useError';\n+import NotificationBell from './notifications/NotificationBell';\n+import UserProfileMenu from './UserProfileMenu';\n+import ErrorBoundary from './ErrorBoundary';\n+import { PerformanceIndicator } from './PerformanceIndicator';\n+import { LoadingIndicator } from './LoadingIndicator';\n+import { ErrorMetricsDisplay } from './ErrorMonitor/ErrorMetricsDisplay';\n+import { themes } from '../lib/themes';\n+import { getNavigationItems } from '../lib/permissions';\n+import UserRoleIndicator from './UserRoleIndicator';\n+import ThemeSelector from './ThemeSelector';\n+import { ThemeToggle } from \"./theme-toggle\";\n+import { SidebarItem } from '../types/navigation';\n+import { \n+  Home, \n+  Bookmark, \n+  ChevronUp, \n+  ChevronDown, \n+  Loader, \n+  AlertTriangle, \n+  BookOpen, \n+  Book,\n+  type LucideIcon \n+} from 'lucide-react';\n+//import { Books } from '@phosphor-icons/react/dist/ssr';\n+\n+interface NavItem  {\n+  name: string;\n+  href?: string;\n+  icon: LucideIcon;\n+  current?: boolean;\n+  submenu?: { \n+    name: string; \n+    href: string;\n+    icon: LucideIcon;\n+    current?: boolean; \n+  }[];\n+}\n+\n+const Layout: React.FC = () => {\n+  const location = useLocation();\n+  const { theme, resolvedTheme } = useTheme();\n+  const { user, loading } = React.useContext(AuthContext);\n+  const { error } = useError();\n+  const currentTheme = themes[theme as keyof typeof themes] || themes[resolvedTheme as keyof typeof themes] || themes.light;\n+  const [openSubmenu, setOpenSubmenu] = useState<string | null>(null);\n+\n+  const navigation = user ? getNavigationItems(user.role).map(item => ({\n+    ...item,\n+    current: item.submenu \n+      ? item.submenu.some(subitem => location.pathname === subitem.href)\n+      : location.pathname === item.href\n+  })) : [];\n+\n+  React.useEffect(() => {\n+    logger.debug('Navigation state updated', {\n+      context: {\n+        pathname: location.pathname,\n+        role: user?.role,\n+        navigationItems: navigation.length\n+      },\n+      source: 'Layout'\n+    });\n+  }, [location.pathname, user?.role, navigation.length]);\n+\n+  if (loading || !user) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n+        <div className=\"text-center space-y-2\">\n+          <Loader \n+            className=\"h-12 w-12 text-indigo-600 animate-spin mx-auto\"\n+          />\n+          <p className=\"mt-4 text-gray-600\">Loading application...</p>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n+        <div className=\"text-center space-y-4 max-w-md mx-auto px-4\">\n+          <AlertTriangle \n+            className=\"h-12 w-12 text-red-600 mx-auto\"\n+          />\n+          <h2 className=\"text-lg font-medium text-gray-900\">Application Error</h2>\n+          <p className=\"text-sm text-gray-600\">{error}</p>\n+          <button\n+            onClick={() => window.location.reload()}\n+            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\n+          >\n+            Reload Application\n+          </button>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  const renderNavItem = (item: NavItem) => {\n+    if (item.submenu) {\n+      const isSubmenuActive = item.submenu.some(subitem => location.pathname.startsWith(subitem.href));\n+      const isOpen = openSubmenu === item.name;\n+      \n+      return (\n+        <div className=\"mb-2\">\n+          <button\n+            onClick={() => setOpenSubmenu(openSubmenu === item.name ? null : item.name)}\n+            className={`${\n+              isSubmenuActive || isOpen\n+                ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\n+                : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\n+            } w-full group flex items-center justify-between px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 ease-in-out hover:shadow-md`}\n+          >\n+            <div className=\"flex items-center\">\n+              <item.icon \n+                className={`${\n+                  isSubmenuActive || isOpen\n+                    ? 'text-indigo-600 dark:text-indigo-400' \n+                    : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\n+                } mr-3 flex-shrink-0 h-5 w-5 transition-all duration-200 group-hover:scale-110`}\n+              />\n+              {item.name}\n+            </div>\n+            {isOpen ? (\n+              <ChevronUp className=\"h-4 w-4 text-gray-400 transition-transform duration-200\" />\n+            ) : (\n+              <ChevronDown className=\"h-4 w-4 text-gray-400 transition-transform duration-200\" />\n+            )}\n+          </button>\n+          \n+          {isOpen && (\n+            <div className=\"mt-1 ml-4 space-y-1 animate-slideDown\">\n+              {item.submenu.map((subitem, subIndex) => (\n+                <Link\n+                  key={subitem.href}\n+                  to={subitem.href}\n+                  className={`${\n+                    location.pathname.startsWith(subitem.href)\n+                      ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\n+                      : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\n+                  } group flex items-center px-4 py-2.5 text-sm font-medium rounded-lg transition-all duration-200 hover:shadow-sm`}\n+                  style={{ animationDelay: `${subIndex * 50}ms` }}\n+                >\n+                  <subitem.icon \n+                    className={`${\n+                      location.pathname === subitem.href \n+                        ? 'text-indigo-600 dark:text-indigo-400' \n+                        : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\n+                    } mr-3 flex-shrink-0 h-4 w-4 transition-all duration-200 group-hover:scale-110`}\n+                  />\n+                  {subitem.name}\n+                </Link>\n+              ))}\n+            </div>\n+          )}\n+        </div>\n+      );\n+    }\n+\n+    return (\n+      <Link\n+        key={item.name}\n+        to={item.href || '#'}\n+        className={`${\n+          location.pathname === item.href\n+            ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\n+            : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\n+        } group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 hover:shadow-md mb-1`}\n+      >\n+        <item.icon \n+          className={`${\n+            location.pathname === item.href\n+              ? 'text-indigo-600 dark:text-indigo-400' \n+              : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\n+          } mr-3 flex-shrink-0 h-5 w-5 transition-all duration-200 group-hover:scale-110`}\n+        />\n+        {item.name}\n+      </Link>\n+    );\n+  };\n+\n+  return (\n+    <div className={`min-h-screen ${currentTheme.background}`}>\n+      <div className=\"flex h-screen overflow-hidden\">\n+        <ErrorBoundary source=\"Notifications\">\n+          <div className=\"fixed top-4 right-16 z-50\">\n+            <NotificationBell />\n+          </div>\n+        </ErrorBoundary>\n+\n+        <div className=\"hidden md:flex md:flex-shrink-0 relative\">\n+          <div className=\"flex flex-col w-80\">\n+            <ErrorBoundary source=\"Sidebar\">\n+              <div className={`flex flex-col flex-grow pt-6 overflow-y-auto ${currentTheme.sidebar} border-r ${currentTheme.border} shadow-xl backdrop-blur-sm bg-opacity-95 transition-all duration-300 ease-in-out`}>\n+                <div className=\"flex items-center justify-between px-6 mb-8\">\n+                  <div className=\"flex items-center space-x-3 group\">\n+                    <Bookmark \n+                      className={`w-8 h-8 ${currentTheme.primary.replace('bg-', 'text-')} transform transition-transform group-hover:scale-110 duration-200`}\n+                    />\n+                    <span className={`text-xl font-bold tracking-tight ${currentTheme.text} group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors duration-200`}>\n+                      SpeakWell Admin\n+                    </span>\n+                  </div>\n+                </div>\n+\n+                <div className=\"flex-grow flex flex-col px-3\">\n+                  <nav className=\"flex-1 space-y-1.5\">\n+                    {navigation.map((item, index) => (\n+                      <div key={item.name} \n+                        className=\"animate-fadeIn\" \n+                        style={{ animationDelay: `${index * 50}ms` }}\n+                      >\n+                        {renderNavItem(item)}\n+                      </div>\n+                    ))}\n+                  </nav>\n+                </div>\n+\n+                <div className=\"p-5 mt-6 border-t border-gray-200 dark:border-gray-700/50 backdrop-blur-sm\">\n+                  <UserProfileMenu />\n+                </div>\n+              </div>\n+            </ErrorBoundary>\n+          </div>\n+        </div>\n+\n+        <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\n+          <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n+            <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n+              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-8 ${currentTheme.background}`}>\n+                <ErrorBoundary source=\"MainContent\">\n+                  <div className={`${currentTheme.card} rounded-lg p-6`}>\n+                    <Outlet />\n+                  </div>\n+                </ErrorBoundary>\n+              </div>\n+            </div>\n+          </main>\n+        </div>\n+      </div>\n+\n+      <ErrorBoundary source=\"Monitoring\">\n+        <div className=\"fixed bottom-4 right-4 z-50 space-y-4\">\n+          <PerformanceIndicator source=\"Layout\" showCompleted={true} />\n+          <LoadingIndicator resource=\"Layout\" />\n+          <ErrorMetricsDisplay />\n+        </div>\n+      </ErrorBoundary>\n+\n+      <ErrorBoundary source=\"UserRole\">\n+        <UserRoleIndicator />\n+      </ErrorBoundary>\n+\n+      <ThemeToggle />\n+    </div>\n+  );\n+};\n+\n export default Layout;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739304993598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n \n         <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n-              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-8 ${currentTheme.background}`}>\n+              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n                   <div className={`${currentTheme.card} rounded-lg p-6`}>\n                     <Outlet />\n                   </div>\n"
                },
                {
                    "date": 1739305009866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n \n         <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n-              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n+              <div className={`max-w-7xl mx-auto px-4 sm:px-2 md:px-2 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n                   <div className={`${currentTheme.card} rounded-lg p-6`}>\n                     <Outlet />\n                   </div>\n"
                },
                {
                    "date": 1739305080967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n \n         <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n-              <div className={`max-w-7xl mx-auto px-4 sm:px-2 md:px-2 ${currentTheme.background}`}>\n+              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-8 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n                   <div className={`${currentTheme.card} rounded-lg p-6`}>\n                     <Outlet />\n                   </div>\n"
                },
                {
                    "date": 1739305259745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n \n         <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n-              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-8 ${currentTheme.background}`}>\n+              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n                   <div className={`${currentTheme.card} rounded-lg p-6`}>\n                     <Outlet />\n                   </div>\n"
                },
                {
                    "date": 1739305266263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n \n         <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n-              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n+              <div className={`max-w-9xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n                   <div className={`${currentTheme.card} rounded-lg p-6`}>\n                     <Outlet />\n                   </div>\n"
                },
                {
                    "date": 1739305292534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n               <div className={`max-w-9xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n-                  <div className={`${currentTheme.card} rounded-lg p-6`}>\n+                  <div className={`${currentTheme.card} rounded-lg p-`}>\n                     <Outlet />\n                   </div>\n                 </ErrorBoundary>\n               </div>\n"
                },
                {
                    "date": 1739305299297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n           <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n             <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\n               <div className={`max-w-9xl mx-auto px-4 sm:px-6 md:px-2 ${currentTheme.background}`}>\n                 <ErrorBoundary source=\"MainContent\">\n-                  <div className={`${currentTheme.card} rounded-lg p-`}>\n+                  <div className={`${currentTheme.card} rounded-lg p-1`}>\n                     <Outlet />\n                   </div>\n                 </ErrorBoundary>\n               </div>\n"
                }
            ],
            "date": 1739299476094,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { useLocation, Link, Outlet } from 'react-router-dom';\r\nimport { useTheme } from \"next-themes\";\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { logger } from '../lib/logger';\r\nimport { useError } from '../hooks/useError';\r\nimport NotificationBell from './notifications/NotificationBell';\r\nimport UserProfileMenu from './UserProfileMenu';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport { PerformanceIndicator } from './PerformanceIndicator';\r\nimport { LoadingIndicator } from './LoadingIndicator';\r\nimport { ErrorMetricsDisplay } from './ErrorMonitor/ErrorMetricsDisplay';\r\nimport { themes } from '../lib/themes';\r\nimport { getNavigationItems } from '../lib/permissions';\r\nimport UserRoleIndicator from './UserRoleIndicator';\r\nimport ThemeSelector from './ThemeSelector';\r\nimport { ThemeToggle } from \"./theme-toggle\";\r\nimport { SidebarItem } from '../types/navigation';\r\nimport { \r\n  Home, \r\n  Bookmark, \r\n  ChevronUp, \r\n  ChevronDown, \r\n  Loader, \r\n  AlertTriangle, \r\n  BookOpen, \r\n  Book,\r\n  type LucideIcon \r\n} from 'lucide-react';\r\n//import { Books } from '@phosphor-icons/react/dist/ssr';\r\n\r\ninterface NavItem  {\r\n  name: string;\r\n  href?: string;\r\n  icon: LucideIcon;\r\n  current?: boolean;\r\n  submenu?: { \r\n    name: string; \r\n    href: string;\r\n    icon: LucideIcon;\r\n    current?: boolean; \r\n  }[];\r\n}\r\n\r\nconst Layout: React.FC = () => {\r\n  const location = useLocation();\r\n  const { theme, resolvedTheme } = useTheme();\r\n  const { user, loading } = React.useContext(AuthContext);\r\n  const { error } = useError();\r\n  const currentTheme = themes[theme as keyof typeof themes] || themes[resolvedTheme as keyof typeof themes] || themes.light;\r\n  const [openSubmenu, setOpenSubmenu] = useState<string | null>(null);\r\n\r\n  const navigation = user ? getNavigationItems(user.role).map(item => ({\r\n    ...item,\r\n    current: item.submenu \r\n      ? item.submenu.some(subitem => location.pathname === subitem.href)\r\n      : location.pathname === item.href\r\n  })) : [];\r\n\r\n  React.useEffect(() => {\r\n    logger.debug('Navigation state updated', {\r\n      context: {\r\n        pathname: location.pathname,\r\n        role: user?.role,\r\n        navigationItems: navigation.length\r\n      },\r\n      source: 'Layout'\r\n    });\r\n  }, [location.pathname, user?.role, navigation.length]);\r\n\r\n  if (loading || !user) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center space-y-2\">\r\n          <Loader \r\n            className=\"h-12 w-12 text-indigo-600 animate-spin mx-auto\"\r\n          />\r\n          <p className=\"mt-4 text-gray-600\">Loading application...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center space-y-4 max-w-md mx-auto px-4\">\r\n          <AlertTriangle \r\n            className=\"h-12 w-12 text-red-600 mx-auto\"\r\n          />\r\n          <h2 className=\"text-lg font-medium text-gray-900\">Application Error</h2>\r\n          <p className=\"text-sm text-gray-600\">{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n          >\r\n            Reload Application\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const renderNavItem = (item: NavItem) => {\r\n    if (item.submenu) {\r\n      const isSubmenuActive = item.submenu.some(subitem => location.pathname.startsWith(subitem.href));\r\n      const isOpen = openSubmenu === item.name;\r\n      \r\n      return (\r\n        <div className=\"mb-2\">\r\n          <button\r\n            onClick={() => setOpenSubmenu(openSubmenu === item.name ? null : item.name)}\r\n            className={`${\r\n              isSubmenuActive || isOpen\r\n                ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\r\n                : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\r\n            } w-full group flex items-center justify-between px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 ease-in-out hover:shadow-md`}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <item.icon \r\n                className={`${\r\n                  isSubmenuActive || isOpen\r\n                    ? 'text-indigo-600 dark:text-indigo-400' \r\n                    : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\r\n                } mr-3 flex-shrink-0 h-5 w-5 transition-all duration-200 group-hover:scale-110`}\r\n              />\r\n              {item.name}\r\n            </div>\r\n            {isOpen ? (\r\n              <ChevronUp className=\"h-4 w-4 text-gray-400 transition-transform duration-200\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4 text-gray-400 transition-transform duration-200\" />\r\n            )}\r\n          </button>\r\n          \r\n          {isOpen && (\r\n            <div className=\"mt-1 ml-4 space-y-1 animate-slideDown\">\r\n              {item.submenu.map((subitem, subIndex) => (\r\n                <Link\r\n                  key={subitem.href}\r\n                  to={subitem.href}\r\n                  className={`${\r\n                    location.pathname.startsWith(subitem.href)\r\n                      ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\r\n                      : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\r\n                  } group flex items-center px-4 py-2.5 text-sm font-medium rounded-lg transition-all duration-200 hover:shadow-sm`}\r\n                  style={{ animationDelay: `${subIndex * 50}ms` }}\r\n                >\r\n                  <subitem.icon \r\n                    className={`${\r\n                      location.pathname === subitem.href \r\n                        ? 'text-indigo-600 dark:text-indigo-400' \r\n                        : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\r\n                    } mr-3 flex-shrink-0 h-4 w-4 transition-all duration-200 group-hover:scale-110`}\r\n                  />\r\n                  {subitem.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Link\r\n        key={item.name}\r\n        to={item.href || '#'}\r\n        className={`${\r\n          location.pathname === item.href\r\n            ? `bg-indigo-50 dark:bg-indigo-900/20 text-indigo-600 dark:text-indigo-400 shadow-sm ring-1 ring-indigo-500/20`\r\n            : `text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800/50`\r\n        } group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 hover:shadow-md mb-1`}\r\n      >\r\n        <item.icon \r\n          className={`${\r\n            location.pathname === item.href\r\n              ? 'text-indigo-600 dark:text-indigo-400' \r\n              : 'text-gray-400 group-hover:text-gray-500 dark:text-gray-400'\r\n          } mr-3 flex-shrink-0 h-5 w-5 transition-all duration-200 group-hover:scale-110`}\r\n        />\r\n        {item.name}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${currentTheme.background}`}>\r\n      <div className=\"flex h-screen overflow-hidden\">\r\n        <ErrorBoundary source=\"Notifications\">\r\n          <div className=\"fixed top-4 right-16 z-50\">\r\n            <NotificationBell />\r\n          </div>\r\n        </ErrorBoundary>\r\n\r\n        <div className=\"hidden md:flex md:flex-shrink-0 relative\">\r\n          <div className=\"flex flex-col w-80\">\r\n            <ErrorBoundary source=\"Sidebar\">\r\n              <div className={`flex flex-col flex-grow pt-6 overflow-y-auto ${currentTheme.sidebar} border-r ${currentTheme.border} shadow-xl backdrop-blur-sm bg-opacity-95 transition-all duration-300 ease-in-out`}>\r\n                <div className=\"flex items-center justify-between px-6 mb-8\">\r\n                  <div className=\"flex items-center space-x-3 group\">\r\n                    <Bookmark \r\n                      className={`w-8 h-8 ${currentTheme.primary.replace('bg-', 'text-')} transform transition-transform group-hover:scale-110 duration-200`}\r\n                    />\r\n                    <span className={`text-xl font-bold tracking-tight ${currentTheme.text} group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors duration-200`}>\r\n                      SpeakWell Admin\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex-grow flex flex-col px-3\">\r\n                  <nav className=\"flex-1 space-y-1.5\">\r\n                    {navigation.map((item, index) => (\r\n                      <div key={item.name} \r\n                        className=\"animate-fadeIn\" \r\n                        style={{ animationDelay: `${index * 50}ms` }}\r\n                      >\r\n                        {renderNavItem(item)}\r\n                      </div>\r\n                    ))}\r\n                  </nav>\r\n                </div>\r\n\r\n                <div className=\"p-5 mt-6 border-t border-gray-200 dark:border-gray-700/50 backdrop-blur-sm\">\r\n                  <UserProfileMenu />\r\n                </div>\r\n              </div>\r\n            </ErrorBoundary>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`flex flex-col flex-1 overflow-hidden ${currentTheme.background}`}>\r\n          <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\r\n            <div className={`py-6 ${currentTheme.background} ${currentTheme.text}`}>\r\n              <div className={`max-w-7xl mx-auto px-4 sm:px-6 md:px-8 ${currentTheme.background}`}>\r\n                <ErrorBoundary source=\"MainContent\">\r\n                  <div className={`${currentTheme.card} rounded-lg p-6`}>\r\n                    <Outlet />\r\n                  </div>\r\n                </ErrorBoundary>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n\r\n      <ErrorBoundary source=\"Monitoring\">\r\n        <div className=\"fixed bottom-4 right-4 z-50 space-y-4\">\r\n          <PerformanceIndicator source=\"Layout\" showCompleted={true} />\r\n          <LoadingIndicator resource=\"Layout\" />\r\n          <ErrorMetricsDisplay />\r\n        </div>\r\n      </ErrorBoundary>\r\n\r\n      <ErrorBoundary source=\"UserRole\">\r\n        <UserRoleIndicator />\r\n      </ErrorBoundary>\r\n\r\n      <ThemeToggle />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;"
        }
    ]
}