{
    "sourceFile": "src/components/ErrorMonitor/ErrorMetricsDisplay.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1739390593960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739390601079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,13 +23,13 @@\n           <div className=\"flex items-center justify-between\">\r\n             <div>\r\n               <p className=\"text-sm font-medium text-gray-600\">Total Errors</p>\r\n               <p className=\"text-2xl font-semibold text-gray-900\">\r\n-                {metrics.totalErrors}\r\n+                {metrics.total}\r\n               </p>\r\n             </div>\r\n             <AlertTriangle className={`h-8 w-8 ${\r\n-              metrics.totalErrors > 10 ? 'text-red-500' : 'text-yellow-500'\r\n+              metrics.total > 10 ? 'text-red-500' : 'text-yellow-500'\r\n             }`} />\r\n           </div>\r\n         </div>\r\n \r\n"
                }
            ],
            "date": 1739390593960,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { useErrorMetrics } from '../../hooks/useErrorMetrics';\r\nimport { AlertTriangle, BarChart2, RefreshCw } from 'lucide-react';\r\n\r\nexport const ErrorMetricsDisplay: React.FC = () => {\r\n  const metrics = useErrorMetrics();\r\n\r\n  if (metrics.total === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded-lg shadow-md\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900\">Error Metrics</h3>\r\n        <span className=\"text-sm text-gray-500\">\r\n          Last {metrics.timeWindow / 1000 / 60} minutes\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Errors</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900\">\r\n                {metrics.totalErrors}\r\n              </p>\r\n            </div>\r\n            <AlertTriangle className={`h-8 w-8 ${\r\n              metrics.totalErrors > 10 ? 'text-red-500' : 'text-yellow-500'\r\n            }`} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Error Rate</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900\">\r\n                {metrics.errorRate.toFixed(2)}/s\r\n              </p>\r\n            </div>\r\n            <BarChart2 className={`h-8 w-8 ${\r\n              metrics.errorRate > 1 ? 'text-red-500' : 'text-yellow-500'\r\n            }`} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">Retry Rate</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900\">\r\n                {metrics.averageRetryCount.toFixed(1)}x\r\n              </p>\r\n            </div>\r\n            <RefreshCw className={`h-8 w-8 ${\r\n              metrics.averageRetryCount > 2 ? 'text-red-500' : 'text-yellow-500'\r\n            }`} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Sources */}\r\n      {Object.keys(metrics.errorsBySource).length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Error Sources</h4>\r\n          <div className=\"space-y-2\">\r\n            {Object.entries(metrics.errorsBySource)\r\n              .sort(([, a], [, b]) => b - a)\r\n              .map(([source, count]) => (\r\n                <div key={source} className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{source}</span>\r\n                  <span className=\"text-sm font-medium text-gray-900\">{count}</span>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"
        }
    ]
}