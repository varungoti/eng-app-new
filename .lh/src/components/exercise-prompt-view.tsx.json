{
    "sourceFile": "src/components/exercise-prompt-view.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1739911900314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740091709169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n             </div>\r\n           )}\r\n \r\n           {/* Title and Description */}\r\n-          <div className={cn(\"space-y-2\", prompt.media && \"mt-4\")}>\r\n+          <div className={cn(\"space-y-6\", prompt.media && \"mt-4\")}>\r\n             <CardTitle className=\"text-lg font-semibold leading-tight\">\r\n               {prompt.text}\r\n             </CardTitle>\r\n             {prompt.content?.instructions && (\r\n"
                },
                {
                    "date": 1740091777849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n             </div>\r\n           )}\r\n \r\n           {/* Title and Description */}\r\n-          <div className={cn(\"space-y-6\", prompt.media && \"mt-4\")}>\r\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-4\")}>\r\n             <CardTitle className=\"text-lg font-semibold leading-tight\">\r\n               {prompt.text}\r\n             </CardTitle>\r\n             {prompt.content?.instructions && (\r\n"
                },
                {
                    "date": 1740091895208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n             </div>\r\n           )}\r\n \r\n           {/* Title and Description */}\r\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-4\")}>\r\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-\")}>\r\n             <CardTitle className=\"text-lg font-semibold leading-tight\">\r\n               {prompt.text}\r\n             </CardTitle>\r\n             {prompt.content?.instructions && (\r\n"
                },
                {
                    "date": 1740091967624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     >\r\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\r\n         <CardHeader className=\"relative overflow-hidden\">\r\n           {/* Floating badge with shine effect */}\r\n-          <div className=\"absolute top-4 left-4 z-10 flex gap-2\">\r\n+          <div className=\"absolute top-4 -4 z-10 flex gap-2\">\r\n             <Badge \r\n               variant=\"outline\" \r\n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\r\n             >\r\n@@ -88,9 +88,9 @@\n             </div>\r\n           )}\r\n \r\n           {/* Title and Description */}\r\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-\")}>\r\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\r\n             <CardTitle className=\"text-lg font-semibold leading-tight\">\r\n               {prompt.text}\r\n             </CardTitle>\r\n             {prompt.content?.instructions && (\r\n"
                },
                {
                    "date": 1740091975586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     >\r\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\r\n         <CardHeader className=\"relative overflow-hidden\">\r\n           {/* Floating badge with shine effect */}\r\n-          <div className=\"absolute top-4 -4 z-10 flex gap-2\">\r\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\r\n             <Badge \r\n               variant=\"outline\" \r\n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\r\n             >\r\n"
                },
                {
                    "date": 1740092072045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n           {prompt.narration && (\r\n             <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\r\n               <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                 <Volume2 className=\"h-4 w-4\" />\r\n-                <h4 className=\"font-medium\">Narration</h4>\r\n+                <h4 className=\"font-medium\">Narration:</h4>\r\n               </div>\r\n               <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n             </div>\r\n           )}\r\n"
                },
                {
                    "date": 1740092087216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n               <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                 <Volume2 className=\"h-4 w-4\" />\r\n                 <h4 className=\"font-medium\">Narration:</h4>\r\n               </div>\r\n-              <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n+              < className=\"text-muted-foreground\">{prompt.narration}</p>\r\n             </div>\r\n           )}\r\n \r\n           {/* Say Text Section */}\r\n"
                },
                {
                    "date": 1740092096253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n               <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                 <Volume2 className=\"h-4 w-4\" />\r\n                 <h4 className=\"font-medium\">Narration:</h4>\r\n               </div>\r\n-              < className=\"text-muted-foreground\">{prompt.narration}</p>\r\n+              <div className=\"text-muted-foreground\">{prompt.narration}</p>\r\n             </div>\r\n           )}\r\n \r\n           {/* Say Text Section */}\r\n"
                },
                {
                    "date": 1740092103065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n               <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                 <Volume2 className=\"h-4 w-4\" />\r\n                 <h4 className=\"font-medium\">Narration:</h4>\r\n               </div>\r\n-              <div className=\"text-muted-foreground\">{prompt.narration}</p>\r\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\r\n             </div>\r\n           )}\r\n \r\n           {/* Say Text Section */}\r\n"
                },
                {
                    "date": 1740092222294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     >\r\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\r\n         <CardHeader className=\"relative overflow-hidden\">\r\n           {/* Floating badge with shine effect */}\r\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\r\n+          <div className=\"absolute top-4 right-10 z-10 flex gap-2\">\r\n             <Badge \r\n               variant=\"outline\" \r\n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\r\n             >\r\n"
                },
                {
                    "date": 1740092601757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     >\r\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\r\n         <CardHeader className=\"relative overflow-hidden\">\r\n           {/* Floating badge with shine effect */}\r\n-          <div className=\"absolute top-4 right-10 z-10 flex gap-2\">\r\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\r\n             <Badge \r\n               variant=\"outline\" \r\n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\r\n             >\r\n"
                },
                {
                    "date": 1740989995929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb } from \"lucide-react\";\r\n import { cn } from \"@/lib/utils\";\r\n+import { ImagePreview } from \"@/components/image-preview\";\r\n \r\n interface ExercisePromptViewProps {\r\n   prompt: {\r\n     id: string;\r\n@@ -61,31 +62,39 @@\n           </div>\r\n \r\n           {/* Media Section */}\r\n           {prompt.media && (\r\n-            <div className=\"relative rounded-lg overflow-hidden group/media\">\r\n-              {prompt.type === 'image' && (\r\n-                <div className=\"relative h-[200px] overflow-hidden\">\r\n-                  <img\r\n-                    src={prompt.media}\r\n-                    alt={prompt.text}\r\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\r\n-                    loading=\"lazy\"\r\n+            <div className=\"relative aspect-video rounded-md overflow-hidden mb-4\">\r\n+              {prompt.type === 'image' ? (\r\n+                <div className=\"w-full h-full relative\">\r\n+                  <ImagePreview\r\n+                    imageUrl={prompt.media}\r\n+                    alt={`Exercise ${index + 1} media`}\r\n+                    className=\"w-full h-full object-cover\"\r\n+                    priority={index < 3} // Prioritize loading first 3 images\r\n                   />\r\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\r\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent pointer-events-none\" />\r\n                 </div>\r\n-              )}\r\n-              {prompt.type === 'video' && (\r\n-                <div className=\"relative h-[200px]\">\r\n+              ) : prompt.type === 'video' ? (\r\n+                <div className=\"relative w-full h-full\">\r\n                   <video\r\n                     src={prompt.media}\r\n                     controls\r\n                     className=\"w-full h-full object-cover\"\r\n+                    poster=\"/images/video-placeholder.jpg\"\r\n                     preload=\"metadata\"\r\n                   />\r\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                 </div>\r\n-              )}\r\n+              ) : prompt.type === 'gif' ? (\r\n+                <div className=\"relative w-full h-full\">\r\n+                  <ImagePreview\r\n+                    imageUrl={prompt.media}\r\n+                    alt={`Exercise ${index + 1} animated gif`}\r\n+                    className=\"w-full h-full object-cover\"\r\n+                    priority={index < 3}\r\n+                  />\r\n+                </div>\r\n+              ) : null}\r\n             </div>\r\n           )}\r\n \r\n           {/* Title and Description */}\r\n"
                },
                {
                    "date": 1740990221460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,169 +1,160 @@\n-\"use client\";\r\n-\r\n-import { motion } from \"framer-motion\";\r\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\n-import { Badge } from \"@/components/ui/badge\";\r\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb } from \"lucide-react\";\r\n-import { cn } from \"@/lib/utils\";\r\n-import { ImagePreview } from \"@/components/image-preview\";\r\n-\r\n-interface ExercisePromptViewProps {\r\n-  prompt: {\r\n-    id: string;\r\n-    text: string;\r\n-    type: 'image' | 'video' | 'gif';\r\n-    media: string | null;\r\n-    narration: string | null;\r\n-    saytext: string | null;\r\n-    content?: {\r\n-      instructions?: string;\r\n-      writingPrompt?: string;\r\n-      speakingPrompt?: string;\r\n-    };\r\n-    metadata?: {\r\n-      difficulty?: 'beginner' | 'intermediate' | 'advanced';\r\n-      estimatedTime?: number;\r\n-    };\r\n-  };\r\n-  index: number;\r\n-}\r\n-\r\n-export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\r\n-  return (\r\n-    <motion.div\r\n-      initial={{ opacity: 0, y: 20 }}\r\n-      animate={{ opacity: 1, y: 0 }}\r\n-      transition={{ duration: 0.3, delay: index * 0.1 }}\r\n-      className=\"group\"\r\n-    >\r\n-      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\r\n-        <CardHeader className=\"relative overflow-hidden\">\r\n-          {/* Floating badge with shine effect */}\r\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\r\n-            <Badge \r\n-              variant=\"outline\" \r\n-              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\r\n-            >\r\n-              Exercise {index + 1}\r\n-            </Badge>\r\n-            {prompt.metadata?.difficulty && (\r\n-              <Badge \r\n-                variant=\"outline\" \r\n-                className={cn(\r\n-                  \"capitalize bg-background/80 backdrop-blur-sm\",\r\n-                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\r\n-                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\r\n-                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\r\n-                )}\r\n-              >\r\n-                {prompt.metadata.difficulty}\r\n-              </Badge>\r\n-            )}\r\n-          </div>\r\n-\r\n-          {/* Media Section */}\r\n-          {prompt.media && (\r\n-            <div className=\"relative aspect-video rounded-md overflow-hidden mb-4\">\r\n-              {prompt.type === 'image' ? (\r\n-                <div className=\"w-full h-full relative\">\r\n-                  <ImagePreview\r\n-                    imageUrl={prompt.media}\r\n-                    alt={`Exercise ${index + 1} media`}\r\n-                    className=\"w-full h-full object-cover\"\r\n-                    priority={index < 3} // Prioritize loading first 3 images\r\n-                  />\r\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent pointer-events-none\" />\r\n-                </div>\r\n-              ) : prompt.type === 'video' ? (\r\n-                <div className=\"relative w-full h-full\">\r\n-                  <video\r\n-                    src={prompt.media}\r\n-                    controls\r\n-                    className=\"w-full h-full object-cover\"\r\n-                    poster=\"/images/video-placeholder.jpg\"\r\n-                    preload=\"metadata\"\r\n-                  />\r\n-                </div>\r\n-              ) : prompt.type === 'gif' ? (\r\n-                <div className=\"relative w-full h-full\">\r\n-                  <ImagePreview\r\n-                    imageUrl={prompt.media}\r\n-                    alt={`Exercise ${index + 1} animated gif`}\r\n-                    className=\"w-full h-full object-cover\"\r\n-                    priority={index < 3}\r\n-                  />\r\n-                </div>\r\n-              ) : null}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {/* Title and Description */}\r\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\r\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\r\n-              {prompt.text}\r\n-            </CardTitle>\r\n-            {prompt.content?.instructions && (\r\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\r\n-                <Lightbulb className=\"h-4 w-4\" />\r\n-                {prompt.content.instructions}\r\n-              </CardDescription>\r\n-            )}\r\n-          </div>\r\n-        </CardHeader>\r\n-\r\n-        <CardContent className=\"space-y-4\">\r\n-          {/* Narration Section */}\r\n-          {prompt.narration && (\r\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\r\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n-                <Volume2 className=\"h-4 w-4\" />\r\n-                <h4 className=\"font-medium\">Narration:</h4>\r\n-              </div>\r\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\r\n-            </div>\r\n-          )}\r\n-\r\n-          {/* Say Text Section */}\r\n-          {prompt.saytext && (\r\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\r\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n-                <MessageCircle className=\"h-4 w-4\" />\r\n-                <h4 className=\"font-medium\">Say Text</h4>\r\n-              </div>\r\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\r\n-            </div>\r\n-          )}\r\n-\r\n-          {/* Writing/Speaking Prompts */}\r\n-          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\r\n-            <div className=\"grid gap-4\">\r\n-              {prompt.content.writingPrompt && (\r\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\r\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\r\n-                </div>\r\n-              )}\r\n-              {prompt.content.speakingPrompt && (\r\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\r\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          )}\r\n-\r\n-          {/* Metadata Footer */}\r\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <Clock className=\"h-4 w-4\" />\r\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\r\n-            </div>\r\n-            <Badge variant=\"outline\" className=\"capitalize\">\r\n-              {prompt.type}\r\n-            </Badge>\r\n-          </div>\r\n-        </CardContent>\r\n-      </Card>\r\n-    </motion.div>\r\n-  );\r\n+\"use client\";\n+\n+import { motion } from \"framer-motion\";\n+import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n+import { Badge } from \"@/components/ui/badge\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb } from \"lucide-react\";\n+import { cn } from \"@/lib/utils\";\n+\n+interface ExercisePromptViewProps {\n+  prompt: {\n+    id: string;\n+    text: string;\n+    type: 'image' | 'video' | 'gif';\n+    media: string | null;\n+    narration: string | null;\n+    saytext: string | null;\n+    content?: {\n+      instructions?: string;\n+      writingPrompt?: string;\n+      speakingPrompt?: string;\n+    };\n+    metadata?: {\n+      difficulty?: 'beginner' | 'intermediate' | 'advanced';\n+      estimatedTime?: number;\n+    };\n+  };\n+  index: number;\n+}\n+\n+export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n+  return (\n+    <motion.div\n+      initial={{ opacity: 0, y: 20 }}\n+      animate={{ opacity: 1, y: 0 }}\n+      transition={{ duration: 0.3, delay: index * 0.1 }}\n+      className=\"group\"\n+    >\n+      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n+        <CardHeader className=\"relative overflow-hidden\">\n+          {/* Floating badge with shine effect */}\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n+            <Badge \n+              variant=\"outline\" \n+              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n+            >\n+              Exercise {index + 1}\n+            </Badge>\n+            {prompt.metadata?.difficulty && (\n+              <Badge \n+                variant=\"outline\" \n+                className={cn(\n+                  \"capitalize bg-background/80 backdrop-blur-sm\",\n+                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n+                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n+                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n+                )}\n+              >\n+                {prompt.metadata.difficulty}\n+              </Badge>\n+            )}\n+          </div>\n+\n+          {/* Media Section */}\n+          {prompt.media && (\n+            <div className=\"relative rounded-lg overflow-hidden group/media\">\n+              {prompt.type === 'image' && (\n+                <div className=\"relative h-[200px] overflow-hidden\">\n+                  <img\n+                    src={prompt.media}\n+                    alt={prompt.text}\n+                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n+                    loading=\"lazy\"\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                </div>\n+              )}\n+              {prompt.type === 'video' && (\n+                <div className=\"relative h-[200px]\">\n+                  <video\n+                    src={prompt.media}\n+                    controls\n+                    className=\"w-full h-full object-cover\"\n+                    preload=\"metadata\"\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                </div>\n+              )}\n+            </div>\n+          )}\n+\n+          {/* Title and Description */}\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n+            <CardTitle className=\"text-lg font-semibold leading-tight\">\n+              {prompt.text}\n+            </CardTitle>\n+            {prompt.content?.instructions && (\n+              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4\" />\n+                {prompt.content.instructions}\n+              </CardDescription>\n+            )}\n+          </div>\n+        </CardHeader>\n+\n+        <CardContent className=\"space-y-4\">\n+          {/* Narration Section */}\n+          {prompt.narration && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Narration:</h4>\n+              </div>\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+            </div>\n+          )}\n+\n+          {/* Say Text Section */}\n+          {prompt.saytext && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <MessageCircle className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Say Text</h4>\n+              </div>\n+              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n+            </div>\n+          )}\n+\n+          {/* Writing/Speaking Prompts */}\n+          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n+            <div className=\"grid gap-4\">\n+              {prompt.content.writingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n+                </div>\n+              )}\n+              {prompt.content.speakingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n+                </div>\n+              )}\n+            </div>\n+          )}\n+\n+          {/* Metadata Footer */}\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n+            <div className=\"flex items-center gap-2\">\n+              <Clock className=\"h-4 w-4\" />\n+              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n+            </div>\n+            <Badge variant=\"outline\" className=\"capitalize\">\n+              {prompt.type}\n+            </Badge>\n+          </div>\n+        </CardContent>\n+      </Card>\n+    </motion.div>\n+  );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740990276535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,12 @@\n \n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb } from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n+import { Button } from \"@/components/ui/button\";\n+import { ImagePreview } from \"@/components/image-preview\";\n \n interface ExercisePromptViewProps {\n   prompt: {\n     id: string;\n@@ -61,29 +63,73 @@\n           </div>\n \n           {/* Media Section */}\n           {prompt.media && (\n-            <div className=\"relative rounded-lg overflow-hidden group/media\">\n+            <div \n+              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n+              onClick={() => {\n+                // Dispatch custom event to notify parent components that media should be displayed in right panel\n+                const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n+                  detail: {\n+                    mediaUrl: prompt.media,\n+                    mediaType: prompt.type,\n+                    mediaTitle: prompt.text,\n+                    sourceId: prompt.id\n+                  },\n+                  bubbles: true\n+                });\n+                document.dispatchEvent(mediaEvent);\n+              }}\n+            >\n               {prompt.type === 'image' && (\n                 <div className=\"relative h-[200px] overflow-hidden\">\n-                  <img\n-                    src={prompt.media}\n+                  <ImagePreview\n+                    imageUrl={prompt.media}\n                     alt={prompt.text}\n                     className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n-                    loading=\"lazy\"\n+                    priority={false}\n                   />\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n                 </div>\n               )}\n               {prompt.type === 'video' && (\n                 <div className=\"relative h-[200px]\">\n                   <video\n                     src={prompt.media}\n-                    controls\n                     className=\"w-full h-full object-cover\"\n                     preload=\"metadata\"\n+                    onClick={(e) => e.stopPropagation()} \n                   />\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n+                  {/* Adding controls button separately for better UI */}\n+                  <div className=\"absolute bottom-2 right-2\">\n+                    <Button \n+                      variant=\"ghost\" \n+                      size=\"sm\" \n+                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      onClick={(e) => {\n+                        e.stopPropagation();\n+                        const videoEl = e.currentTarget.closest('.relative').querySelector('video');\n+                        if (videoEl) {\n+                          videoEl.controls = true;\n+                          videoEl.play();\n+                        }\n+                      }}\n+                    >\n+                      <Play className=\"h-4 w-4 mr-1\" />\n+                      Play\n+                    </Button>\n+                  </div>\n                 </div>\n               )}\n             </div>\n           )}\n"
                },
                {
                    "date": 1740990300480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n \"use client\";\n \n+import React from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n-import { ImagePreview } from \"@/components/image-preview\";\n+import { ImagePreview } from \"@/components/common/ImagePreview\";\n \n interface ExercisePromptViewProps {\n   prompt: {\n     id: string;\n@@ -101,9 +102,16 @@\n                   <video\n                     src={prompt.media}\n                     className=\"w-full h-full object-cover\"\n                     preload=\"metadata\"\n-                    onClick={(e) => e.stopPropagation()} \n+                    onClick={(e: React.MouseEvent) => {\n+                      e.stopPropagation();\n+                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                      if (videoEl) {\n+                        videoEl.controls = true;\n+                        videoEl.play();\n+                      }\n+                    }}\n                   />\n                   <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                   <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n                     <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n@@ -115,16 +123,8 @@\n                     <Button \n                       variant=\"ghost\" \n                       size=\"sm\" \n                       className=\"bg-black/50 hover:bg-black/70 text-white\"\n-                      onClick={(e) => {\n-                        e.stopPropagation();\n-                        const videoEl = e.currentTarget.closest('.relative').querySelector('video');\n-                        if (videoEl) {\n-                          videoEl.controls = true;\n-                          videoEl.play();\n-                        }\n-                      }}\n                     >\n                       <Play className=\"h-4 w-4 mr-1\" />\n                       Play\n                     </Button>\n"
                },
                {
                    "date": 1740990406091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,16 @@\n                     <Button \n                       variant=\"ghost\" \n                       size=\"sm\" \n                       className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      onClick={(e: React.MouseEvent) => {\n+                        e.stopPropagation();\n+                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                        if (videoEl) {\n+                          videoEl.controls = true;\n+                          videoEl.play();\n+                        }\n+                      }}\n                     >\n                       <Play className=\"h-4 w-4 mr-1\" />\n                       Play\n                     </Button>\n"
                },
                {
                    "date": 1740990417492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n   return (\n     <motion.div\n+      id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n"
                },
                {
                    "date": 1740993438931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,19 +68,34 @@\n           {prompt.media && (\n             <div \n               className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n               onClick={() => {\n-                // Dispatch custom event to notify parent components that media should be displayed in right panel\n-                const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n-                  detail: {\n+                try {\n+                  console.log(\"Dispatching displayMediaInRightPanel event:\", {\n                     mediaUrl: prompt.media,\n                     mediaType: prompt.type,\n                     mediaTitle: prompt.text,\n                     sourceId: prompt.id\n-                  },\n-                  bubbles: true\n-                });\n-                document.dispatchEvent(mediaEvent);\n+                  });\n+\n+                  // Create a properly typed custom event with the correct detail structure\n+                  const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n+                    bubbles: true,\n+                    composed: true,\n+                    detail: {\n+                      mediaUrl: prompt.media,\n+                      mediaType: prompt.type,\n+                      mediaTitle: prompt.text,\n+                      sourceId: prompt.id\n+                    }\n+                  });\n+                  \n+                  // Dispatch on both document and window to ensure it's captured\n+                  document.dispatchEvent(mediaEvent);\n+                  window.dispatchEvent(mediaEvent);\n+                } catch (err) {\n+                  console.error(\"Error dispatching media event:\", err);\n+                }\n               }}\n             >\n               {prompt.type === 'image' && (\n                 <div className=\"relative h-[200px] overflow-hidden\">\n"
                },
                {
                    "date": 1741083167584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \"use client\";\n \n-import React from \"react\";\n+import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n@@ -30,15 +30,59 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n+  // Function to dispatch media display event\n+  const displayMedia = () => {\n+    if (!prompt.media) return;\n+    \n+    try {\n+      console.log(\"Dispatching displayMediaInRightPanel event:\", {\n+        mediaUrl: prompt.media,\n+        mediaType: prompt.type,\n+        mediaTitle: prompt.text,\n+        sourceId: prompt.id\n+      });\n+\n+      // Create a properly typed custom event with the correct detail structure\n+      const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n+        bubbles: true,\n+        composed: true,\n+        detail: {\n+          mediaUrl: prompt.media,\n+          mediaType: prompt.type,\n+          mediaTitle: prompt.text,\n+          sourceId: prompt.id\n+        }\n+      });\n+      \n+      // Dispatch on both document and window to ensure it's captured\n+      document.dispatchEvent(mediaEvent);\n+      window.dispatchEvent(mediaEvent);\n+    } catch (err) {\n+      console.error(\"Error dispatching media event:\", err);\n+    }\n+  };\n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n+      onMouseEnter={() => {\n+        if (prompt.media) {\n+          console.log(\"Mouse entered exercise prompt:\", prompt.id);\n+          displayMedia();\n+        }\n+      }}\n+      onClick={() => {\n+        if (prompt.media) {\n+          console.log(\"Clicked on exercise prompt:\", prompt.id);\n+          displayMedia();\n+        }\n+      }}\n     >\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n         <CardHeader className=\"relative overflow-hidden\">\n           {/* Floating badge with shine effect */}\n@@ -67,35 +111,11 @@\n           {/* Media Section */}\n           {prompt.media && (\n             <div \n               className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n-              onClick={() => {\n-                try {\n-                  console.log(\"Dispatching displayMediaInRightPanel event:\", {\n-                    mediaUrl: prompt.media,\n-                    mediaType: prompt.type,\n-                    mediaTitle: prompt.text,\n-                    sourceId: prompt.id\n-                  });\n-\n-                  // Create a properly typed custom event with the correct detail structure\n-                  const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n-                    bubbles: true,\n-                    composed: true,\n-                    detail: {\n-                      mediaUrl: prompt.media,\n-                      mediaType: prompt.type,\n-                      mediaTitle: prompt.text,\n-                      sourceId: prompt.id\n-                    }\n-                  });\n-                  \n-                  // Dispatch on both document and window to ensure it's captured\n-                  document.dispatchEvent(mediaEvent);\n-                  window.dispatchEvent(mediaEvent);\n-                } catch (err) {\n-                  console.error(\"Error dispatching media event:\", err);\n-                }\n+              onClick={(e) => {\n+                e.stopPropagation(); // Prevent double triggering with parent onClick\n+                displayMedia();\n               }}\n             >\n               {prompt.type === 'image' && (\n                 <div className=\"relative h-[200px] overflow-hidden\">\n"
                },
                {
                    "date": 1741087392224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,27 +32,37 @@\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n   // Function to dispatch media display event\n   const displayMedia = () => {\n-    if (!prompt.media) return;\n+    if (!prompt || !prompt.media) {\n+      console.log(\"No media available for this prompt\");\n+      return;\n+    }\n     \n     try {\n+      // Check if URL is from external domains that need special handling\n+      const isExternalDomain = \n+        typeof prompt.media === 'string' && \n+        (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n+      \n       console.log(\"Dispatching displayMediaInRightPanel event:\", {\n         mediaUrl: prompt.media,\n         mediaType: prompt.type,\n-        mediaTitle: prompt.text,\n-        sourceId: prompt.id\n+        mediaTitle: prompt.text || 'Exercise Media',\n+        sourceId: prompt.id || 'unknown',\n+        isExternalDomain\n       });\n \n       // Create a properly typed custom event with the correct detail structure\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n         bubbles: true,\n         composed: true,\n         detail: {\n           mediaUrl: prompt.media,\n-          mediaType: prompt.type,\n-          mediaTitle: prompt.text,\n-          sourceId: prompt.id\n+          mediaType: prompt.type || 'image',\n+          mediaTitle: prompt.text || 'Exercise Media',\n+          sourceId: prompt.id || 'unknown',\n+          isExternalDomain\n         }\n       });\n       \n       // Dispatch on both document and window to ensure it's captured\n"
                },
                {
                    "date": 1741087408650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,16 +80,16 @@\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n       onMouseEnter={() => {\n-        if (prompt.media) {\n-          console.log(\"Mouse entered exercise prompt:\", prompt.id);\n+        if (prompt && prompt.media) {\n+          console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n       onClick={() => {\n-        if (prompt.media) {\n-          console.log(\"Clicked on exercise prompt:\", prompt.id);\n+        if (prompt && prompt.media) {\n+          console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n     >\n"
                },
                {
                    "date": 1741088575565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,16 +38,27 @@\n       return;\n     }\n     \n     try {\n+      // Generate a unique identifier to ensure media updates\n+      const timestamp = new Date().getTime();\n+      \n       // Check if URL is from external domains that need special handling\n       const isExternalDomain = \n         typeof prompt.media === 'string' && \n         (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n       \n+      // Add a timestamp parameter to force media refresh\n+      let mediaUrl = prompt.media;\n+      if (mediaUrl.includes('?')) {\n+        mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n+      } else {\n+        mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n+      }\n+      \n       console.log(\"Dispatching displayMediaInRightPanel event:\", {\n-        mediaUrl: prompt.media,\n-        mediaType: prompt.type,\n+        mediaUrl,\n+        mediaType: prompt.type || 'image',\n         mediaTitle: prompt.text || 'Exercise Media',\n         sourceId: prompt.id || 'unknown',\n         isExternalDomain\n       });\n@@ -56,9 +67,9 @@\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n         bubbles: true,\n         composed: true,\n         detail: {\n-          mediaUrl: prompt.media,\n+          mediaUrl,\n           mediaType: prompt.type || 'image',\n           mediaTitle: prompt.text || 'Exercise Media',\n           sourceId: prompt.id || 'unknown',\n           isExternalDomain\n"
                },
                {
                    "date": 1741090734149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,10 @@\n         mediaUrl,\n         mediaType: prompt.type || 'image',\n         mediaTitle: prompt.text || 'Exercise Media',\n         sourceId: prompt.id || 'unknown',\n-        isExternalDomain\n+        isExternalDomain,\n+        isPermanent: true // Add a flag to indicate this was manually selected\n       });\n \n       // Create a properly typed custom event with the correct detail structure\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n@@ -71,9 +72,10 @@\n           mediaUrl,\n           mediaType: prompt.type || 'image',\n           mediaTitle: prompt.text || 'Exercise Media',\n           sourceId: prompt.id || 'unknown',\n-          isExternalDomain\n+          isExternalDomain,\n+          isPermanent: true // Add a flag to indicate this was manually selected\n         }\n       });\n       \n       // Dispatch on both document and window to ensure it's captured\n"
                },
                {
                    "date": 1741091970958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,29 +54,34 @@\n       } else {\n         mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n       }\n       \n-      console.log(\"Dispatching displayMediaInRightPanel event:\", {\n+      // Create a persistent media object\n+      const persistentMedia = {\n         mediaUrl,\n         mediaType: prompt.type || 'image',\n         mediaTitle: prompt.text || 'Exercise Media',\n         sourceId: prompt.id || 'unknown',\n         isExternalDomain,\n-        isPermanent: true // Add a flag to indicate this was manually selected\n-      });\n+        isPermanent: true,\n+        timestamp\n+      };\n+      \n+      // Log the event details\n+      console.log(\"Dispatching displayMediaInRightPanel event:\", persistentMedia);\n+      \n+      // Store the selected media in localStorage to ensure it persists\n+      try {\n+        localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n+      } catch (e) {\n+        console.warn(\"Failed to store media in localStorage:\", e);\n+      }\n \n       // Create a properly typed custom event with the correct detail structure\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n         bubbles: true,\n         composed: true,\n-        detail: {\n-          mediaUrl,\n-          mediaType: prompt.type || 'image',\n-          mediaTitle: prompt.text || 'Exercise Media',\n-          sourceId: prompt.id || 'unknown',\n-          isExternalDomain,\n-          isPermanent: true // Add a flag to indicate this was manually selected\n-        }\n+        detail: persistentMedia\n       });\n       \n       // Dispatch on both document and window to ensure it's captured\n       document.dispatchEvent(mediaEvent);\n"
                },
                {
                    "date": 1741092057924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,18 @@\n             <div \n               className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n               onClick={(e) => {\n                 e.stopPropagation(); // Prevent double triggering with parent onClick\n+                \n+                // First, display the media immediately\n                 displayMedia();\n+                \n+                // Then, schedule another update after a short delay to ensure it sticks\n+                // This helps overcome any race conditions that might reset the image\n+                setTimeout(() => {\n+                  console.log(\"Resending media display event after delay to ensure it sticks\");\n+                  displayMedia();\n+                }, 200);\n               }}\n             >\n               {prompt.type === 'image' && (\n                 <div className=\"relative h-[200px] overflow-hidden\">\n"
                },
                {
                    "date": 1741864487873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,90 +3,92 @@\n import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play, CalendarClock, CheckCircle } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n+import SafeImage from '@/components/ui/safe-image';\n \n+interface ExercisePrompt {\n+  id: string;\n+  text: string;\n+  type?: string;\n+  media?: string;\n+  narration?: string;\n+  saytext?: string;\n+  content?: {\n+    instructions?: string;\n+    writingPrompt?: string;\n+    speakingPrompt?: string;\n+  };\n+  metadata?: {\n+    difficulty?: 'beginner' | 'intermediate' | 'advanced';\n+    estimatedTime?: number;\n+    imageUrl?: string;\n+  };\n+  data?: any;\n+}\n+\n interface ExercisePromptViewProps {\n-  prompt: {\n-    id: string;\n-    text: string;\n-    type: 'image' | 'video' | 'gif';\n-    media: string | null;\n-    narration: string | null;\n-    saytext: string | null;\n-    content?: {\n-      instructions?: string;\n-      writingPrompt?: string;\n-      speakingPrompt?: string;\n-    };\n-    metadata?: {\n-      difficulty?: 'beginner' | 'intermediate' | 'advanced';\n-      estimatedTime?: number;\n-    };\n-  };\n+  prompt: ExercisePrompt;\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n-  // Function to dispatch media display event\n+  // Function to dispatch media display event to parent components\n   const displayMedia = () => {\n-    if (!prompt || !prompt.media) {\n+    if (!prompt || (!prompt.media && !prompt.data?.image_url && !prompt.metadata?.imageUrl)) {\n       console.log(\"No media available for this prompt\");\n       return;\n     }\n     \n     try {\n+      // Get media URL from various possible locations\n+      let mediaUrl = prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl;\n+      if (!mediaUrl) {\n+        console.log(\"No media URL found in prompt\");\n+        return;\n+      }\n+      \n       // Generate a unique identifier to ensure media updates\n       const timestamp = new Date().getTime();\n       \n-      // Check if URL is from external domains that need special handling\n-      const isExternalDomain = \n-        typeof prompt.media === 'string' && \n-        (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n-      \n       // Add a timestamp parameter to force media refresh\n-      let mediaUrl = prompt.media;\n       if (mediaUrl.includes('?')) {\n         mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n       } else {\n         mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n       }\n       \n-      // Create a persistent media object\n-      const persistentMedia = {\n-        mediaUrl,\n-        mediaType: prompt.type || 'image',\n-        mediaTitle: prompt.text || 'Exercise Media',\n-        sourceId: prompt.id || 'unknown',\n-        isExternalDomain,\n-        isPermanent: true,\n-        timestamp\n-      };\n+      // Check if URL is from external domains that need special handling\n+      const isExternalDomain = typeof mediaUrl === 'string' && (\n+        mediaUrl.includes('gifsec.com') || \n+        mediaUrl.includes('gifdb.com') ||\n+        mediaUrl.includes('usagif.com')\n+      );\n       \n-      // Log the event details\n-      console.log(\"Dispatching displayMediaInRightPanel event:\", persistentMedia);\n-      \n-      // Store the selected media in localStorage to ensure it persists\n-      try {\n-        localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n-      } catch (e) {\n-        console.warn(\"Failed to store media in localStorage:\", e);\n-      }\n-\n       // Create a properly typed custom event with the correct detail structure\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n         bubbles: true,\n         composed: true,\n-        detail: persistentMedia\n+        detail: {\n+          mediaUrl,\n+          mediaType: prompt.type || 'image',\n+          mediaTitle: prompt.text || 'Exercise Media',\n+          sourceId: prompt.id || 'unknown',\n+          isExternalDomain,\n+          isPermanent: true,\n+          timestamp\n+        }\n       });\n       \n       // Dispatch on both document and window to ensure it's captured\n       document.dispatchEvent(mediaEvent);\n       window.dispatchEvent(mediaEvent);\n+      \n+      console.log(\"🖼️ Media display event dispatched:\", mediaUrl);\n     } catch (err) {\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n@@ -98,15 +100,15 @@\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n       onMouseEnter={() => {\n-        if (prompt && prompt.media) {\n+        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n       onClick={() => {\n-        if (prompt && prompt.media) {\n+        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n           console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n@@ -135,152 +137,56 @@\n               </Badge>\n             )}\n           </div>\n \n-          {/* Media Section */}\n-          {prompt.media && (\n-            <div \n-              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n-              onClick={(e) => {\n-                e.stopPropagation(); // Prevent double triggering with parent onClick\n-                \n-                // First, display the media immediately\n-                displayMedia();\n-                \n-                // Then, schedule another update after a short delay to ensure it sticks\n-                // This helps overcome any race conditions that might reset the image\n-                setTimeout(() => {\n-                  console.log(\"Resending media display event after delay to ensure it sticks\");\n-                  displayMedia();\n-                }, 200);\n-              }}\n-            >\n-              {prompt.type === 'image' && (\n-                <div className=\"relative h-[200px] overflow-hidden\">\n-                  <ImagePreview\n-                    imageUrl={prompt.media}\n-                    alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n-                    priority={false}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n-                  </div>\n-                </div>\n-              )}\n-              {prompt.type === 'video' && (\n-                <div className=\"relative h-[200px]\">\n-                  <video\n-                    src={prompt.media}\n-                    className=\"w-full h-full object-cover\"\n-                    preload=\"metadata\"\n-                    onClick={(e: React.MouseEvent) => {\n-                      e.stopPropagation();\n-                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                      if (videoEl) {\n-                        videoEl.controls = true;\n-                        videoEl.play();\n-                      }\n-                    }}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n-                  </div>\n-                  {/* Adding controls button separately for better UI */}\n-                  <div className=\"absolute bottom-2 right-2\">\n-                    <Button \n-                      variant=\"ghost\" \n-                      size=\"sm\" \n-                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n-                      onClick={(e: React.MouseEvent) => {\n-                        e.stopPropagation();\n-                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                        if (videoEl) {\n-                          videoEl.controls = true;\n-                          videoEl.play();\n-                        }\n-                      }}\n-                    >\n-                      <Play className=\"h-4 w-4 mr-1\" />\n-                      Play\n-                    </Button>\n-                  </div>\n-                </div>\n-              )}\n+          {/* Display a small preview of the media */}\n+          {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n+            <div className=\"absolute top-4 left-4 h-12 w-12 rounded-md overflow-hidden border border-primary/20 hover:border-primary/50 transition-colors\">\n+              <SafeImage\n+                src={prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl}\n+                alt={prompt.text || 'Exercise media'}\n+                fill\n+                className=\"object-cover\"\n+              />\n             </div>\n           )}\n-\n-          {/* Title and Description */}\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\n-              {prompt.text}\n-            </CardTitle>\n-            {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4\" />\n-                {prompt.content.instructions}\n-              </CardDescription>\n-            )}\n-          </div>\n+          \n+          <h3 className=\"text-lg font-semibold mt-6 pl-16\">{prompt.text}</h3>\n+          \n+          {prompt.metadata?.estimatedTime && (\n+            <div className=\"flex items-center gap-2 mt-2 text-sm text-muted-foreground\">\n+              <CalendarClock className=\"h-4 w-4\" />\n+              <span>Est. time: {prompt.metadata.estimatedTime} min</span>\n+            </div>\n+          )}\n         </CardHeader>\n-\n-        <CardContent className=\"space-y-4\">\n-          {/* Narration Section */}\n-          {prompt.narration && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Narration:</h4>\n-              </div>\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+        \n+        <CardContent className=\"space-y-4 pt-2\">\n+          {prompt.content?.instructions && (\n+            <div className=\"text-sm text-muted-foreground\">\n+              <p>{prompt.content.instructions}</p>\n             </div>\n           )}\n-\n-          {/* Say Text Section */}\n-          {prompt.saytext && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <MessageCircle className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Say Text</h4>\n-              </div>\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n+          \n+          {prompt.content?.writingPrompt && (\n+            <div className=\"mt-4 p-4 rounded-md border bg-card\">\n+              <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n+                <CheckCircle className=\"h-4 w-4 text-green-500\" />\n+                Writing Prompt\n+              </h4>\n+              <p className=\"text-sm\">{prompt.content.writingPrompt}</p>\n             </div>\n           )}\n-\n-          {/* Writing/Speaking Prompts */}\n-          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n-            <div className=\"grid gap-4\">\n-              {prompt.content.writingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n-                </div>\n-              )}\n-              {prompt.content.speakingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n-                </div>\n-              )}\n+          \n+          {prompt.content?.speakingPrompt && (\n+            <div className=\"mt-4 p-4 rounded-md border bg-card\">\n+              <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n+                <CheckCircle className=\"h-4 w-4 text-blue-500\" />\n+                Speaking Prompt\n+              </h4>\n+              <p className=\"text-sm\">{prompt.content.speakingPrompt}</p>\n             </div>\n           )}\n-\n-          {/* Metadata Footer */}\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n-            <div className=\"flex items-center gap-2\">\n-              <Clock className=\"h-4 w-4\" />\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n-            </div>\n-            <Badge variant=\"outline\" className=\"capitalize\">\n-              {prompt.type}\n-            </Badge>\n-          </div>\n         </CardContent>\n       </Card>\n     </motion.div>\n   );\n"
                },
                {
                    "date": 1741872932623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,11 +13,11 @@\n interface ExercisePrompt {\n   id: string;\n   text: string;\n   type?: string;\n-  media?: string;\n-  narration?: string;\n-  saytext?: string;\n+  media?: string | null;\n+  narration?: string | null;\n+  saytext?: string | null;\n   content?: {\n     instructions?: string;\n     writingPrompt?: string;\n     speakingPrompt?: string;\n"
                },
                {
                    "date": 1741872937857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,23 @@\n \"use client\";\n \n-import React, { useEffect } from \"react\";\n+import React, { useState } from \"react\";\n import { motion } from \"framer-motion\";\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n+import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play, CalendarClock, CheckCircle } from \"lucide-react\";\n+import { \n+  Volume2, \n+  MessageCircle, \n+  CalendarClock, \n+  CheckCircle, \n+  Play, \n+  Pause, \n+  Maximize2,\n+  Video, \n+  Image as ImageIcon\n+} from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n-import { ImagePreview } from \"@/components/common/ImagePreview\";\n import SafeImage from '@/components/ui/safe-image';\n \n interface ExercisePrompt {\n   id: string;\n@@ -35,8 +44,11 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n+  const [isPlaying, setIsPlaying] = useState(false);\n+  const [showFullMedia, setShowFullMedia] = useState(false);\n+  \n   // Function to dispatch media display event to parent components\n   const displayMedia = () => {\n     if (!prompt || (!prompt.media && !prompt.data?.image_url && !prompt.metadata?.imageUrl)) {\n       console.log(\"No media available for this prompt\");\n@@ -87,87 +99,154 @@\n       document.dispatchEvent(mediaEvent);\n       window.dispatchEvent(mediaEvent);\n       \n       console.log(\"🖼️ Media display event dispatched:\", mediaUrl);\n+      \n+      // Set showFullMedia to true if it was triggered by a maximize button\n+      if (showFullMedia) {\n+        // Find any fullscreen button in the page and click it\n+        const fullscreenButton = document.querySelector('[aria-label=\"View fullscreen\"]');\n+        if (fullscreenButton && fullscreenButton instanceof HTMLButtonElement) {\n+          setTimeout(() => {\n+            fullscreenButton.click();\n+          }, 300);\n+        }\n+      }\n     } catch (err) {\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n-\n+  \n+  // Function to toggle play state\n+  const togglePlay = (e: React.MouseEvent) => {\n+    e.stopPropagation(); // Prevent parent handlers from firing\n+    setIsPlaying(!isPlaying);\n+    displayMedia(); // Display the media in the right panel\n+  };\n+  \n+  // Determine if we have media to display\n+  const hasMedia = prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl);\n+  \n+  // Determine if we have narration/audio\n+  const hasAudio = prompt && (prompt.narration || prompt.saytext);\n+  \n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n-      onMouseEnter={() => {\n-        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n-          console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n-          displayMedia();\n-        }\n-      }}\n       onClick={() => {\n-        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n+        if (hasMedia) {\n           console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n     >\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden\">\n-          {/* Floating badge with shine effect */}\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n+        <CardHeader className=\"relative overflow-hidden pb-2\">\n+          {/* Top badges */}\n+          <div className=\"flex justify-between items-center\">\n             <Badge \n               variant=\"outline\" \n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n             >\n               Exercise {index + 1}\n             </Badge>\n-            {prompt.metadata?.difficulty && (\n-              <Badge \n-                variant=\"outline\" \n-                className={cn(\n-                  \"capitalize bg-background/80 backdrop-blur-sm\",\n-                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n-                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n-                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n-                )}\n-              >\n-                {prompt.metadata.difficulty}\n-              </Badge>\n+            \n+            <div className=\"flex gap-2\">\n+              {prompt.metadata?.difficulty && (\n+                <Badge \n+                  variant=\"outline\" \n+                  className={cn(\n+                    \"capitalize bg-background/80 backdrop-blur-sm\",\n+                    prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n+                    prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n+                    prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n+                  )}\n+                >\n+                  {prompt.metadata.difficulty}\n+                </Badge>\n+              )}\n+              \n+              {hasMedia && (\n+                <Badge variant=\"outline\" className=\"bg-background/80 backdrop-blur-sm border-primary/20\">\n+                  {prompt.type === 'video' ? <Video className=\"h-3 w-3 mr-1\" /> : <ImageIcon className=\"h-3 w-3 mr-1\" />}\n+                  {prompt.type || 'Media'}\n+                </Badge>\n+              )}\n+            </div>\n+          </div>\n+          \n+          {/* Title with larger font */}\n+          <CardTitle className=\"text-xl font-bold mt-2\">{prompt.text}</CardTitle>\n+          \n+          {/* Metadata info */}\n+          <div className=\"flex items-center gap-4 mt-2 text-sm text-muted-foreground\">\n+            {prompt.metadata?.estimatedTime && (\n+              <div className=\"flex items-center gap-1\">\n+                <CalendarClock className=\"h-4 w-4\" />\n+                <span>{prompt.metadata.estimatedTime} min</span>\n+              </div>\n             )}\n+            \n+            {hasAudio && (\n+              <div className=\"flex items-center gap-1\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <span>Audio available</span>\n+              </div>\n+            )}\n           </div>\n-\n-          {/* Display a small preview of the media */}\n-          {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n-            <div className=\"absolute top-4 left-4 h-12 w-12 rounded-md overflow-hidden border border-primary/20 hover:border-primary/50 transition-colors\">\n+        </CardHeader>\n+        \n+        <CardContent className=\"space-y-4 pt-2\">\n+          {/* Media preview - larger and more prominent */}\n+          {hasMedia && (\n+            <div className=\"relative rounded-md overflow-hidden border border-primary/20 h-[200px] group/media\">\n               <SafeImage\n-                src={prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl}\n+                src={prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl || ''}\n                 alt={prompt.text || 'Exercise media'}\n+                className=\"object-cover\"\n                 fill\n-                className=\"object-cover\"\n               />\n+              \n+              {/* Media overlay with controls */}\n+              <div className=\"absolute inset-0 bg-black/30 opacity-0 group-hover/media:opacity-100 transition-opacity flex items-center justify-center gap-3\">\n+                <Button \n+                  variant=\"secondary\" \n+                  size=\"sm\" \n+                  className=\"rounded-full\" \n+                  onClick={togglePlay}\n+                >\n+                  {isPlaying ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n+                </Button>\n+                \n+                <Button \n+                  variant=\"secondary\" \n+                  size=\"sm\" \n+                  className=\"rounded-full\"\n+                  onClick={(e) => {\n+                    e.stopPropagation();\n+                    setShowFullMedia(true);\n+                    displayMedia();\n+                  }}\n+                >\n+                  <Maximize2 className=\"h-4 w-4\" />\n+                </Button>\n+              </div>\n             </div>\n           )}\n           \n-          <h3 className=\"text-lg font-semibold mt-6 pl-16\">{prompt.text}</h3>\n-          \n-          {prompt.metadata?.estimatedTime && (\n-            <div className=\"flex items-center gap-2 mt-2 text-sm text-muted-foreground\">\n-              <CalendarClock className=\"h-4 w-4\" />\n-              <span>Est. time: {prompt.metadata.estimatedTime} min</span>\n-            </div>\n-          )}\n-        </CardHeader>\n-        \n-        <CardContent className=\"space-y-4 pt-2\">\n+          {/* Instructions */}\n           {prompt.content?.instructions && (\n-            <div className=\"text-sm text-muted-foreground\">\n-              <p>{prompt.content.instructions}</p>\n+            <div className=\"text-sm\">\n+              <h4 className=\"font-medium mb-1\">Instructions:</h4>\n+              <p className=\"text-muted-foreground\">{prompt.content.instructions}</p>\n             </div>\n           )}\n           \n+          {/* Writing prompt */}\n           {prompt.content?.writingPrompt && (\n             <div className=\"mt-4 p-4 rounded-md border bg-card\">\n               <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n                 <CheckCircle className=\"h-4 w-4 text-green-500\" />\n@@ -176,8 +255,9 @@\n               <p className=\"text-sm\">{prompt.content.writingPrompt}</p>\n             </div>\n           )}\n           \n+          {/* Speaking prompt */}\n           {prompt.content?.speakingPrompt && (\n             <div className=\"mt-4 p-4 rounded-md border bg-card\">\n               <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n                 <CheckCircle className=\"h-4 w-4 text-blue-500\" />\n@@ -185,9 +265,51 @@\n               </h4>\n               <p className=\"text-sm\">{prompt.content.speakingPrompt}</p>\n             </div>\n           )}\n+          \n+          {/* Narration content */}\n+          {prompt.narration && (\n+            <div className=\"mt-4 p-4 rounded-md border bg-card\">\n+              <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n+                <Volume2 className=\"h-4 w-4 text-blue-500\" />\n+                Narration\n+              </h4>\n+              <p className=\"text-sm\">{prompt.narration}</p>\n+            </div>\n+          )}\n         </CardContent>\n+        \n+        {/* Footer with action buttons */}\n+        <CardFooter className=\"pt-0 pb-4 flex justify-end gap-2\">\n+          {hasMedia && (\n+            <Button \n+              variant=\"outline\" \n+              size=\"sm\" \n+              className=\"flex items-center gap-1\"\n+              onClick={(e) => {\n+                e.stopPropagation();\n+                setShowFullMedia(true);\n+                displayMedia();\n+              }}\n+            >\n+              <Maximize2 className=\"h-4 w-4\" />\n+              View Media\n+            </Button>\n+          )}\n+          \n+          {hasAudio && (\n+            <Button \n+              variant=\"outline\" \n+              size=\"sm\" \n+              className=\"flex items-center gap-1\"\n+              onClick={togglePlay}\n+            >\n+              {isPlaying ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n+              {isPlaying ? 'Pause Audio' : 'Play Audio'}\n+            </Button>\n+          )}\n+        </CardFooter>\n       </Card>\n     </motion.div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741873161117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,14 @@\n \"use client\";\n \n-import React, { useState } from \"react\";\n+import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\n+import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { \n-  Volume2, \n-  MessageCircle, \n-  CalendarClock, \n-  CheckCircle, \n-  Play, \n-  Pause, \n-  Maximize2,\n-  Video, \n-  Image as ImageIcon\n-} from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n+import { ImagePreview } from \"@/components/common/ImagePreview\";\n import SafeImage from '@/components/ui/safe-image';\n \n interface ExercisePrompt {\n   id: string;\n@@ -44,12 +35,9 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n-  const [isPlaying, setIsPlaying] = useState(false);\n-  const [showFullMedia, setShowFullMedia] = useState(false);\n-  \n-  // Function to dispatch media display event to parent components\n+  // Function to dispatch media display event\n   const displayMedia = () => {\n     if (!prompt || (!prompt.media && !prompt.data?.image_url && !prompt.metadata?.imageUrl)) {\n       console.log(\"No media available for this prompt\");\n       return;\n@@ -98,218 +86,205 @@\n       // Dispatch on both document and window to ensure it's captured\n       document.dispatchEvent(mediaEvent);\n       window.dispatchEvent(mediaEvent);\n       \n-      console.log(\"🖼️ Media display event dispatched:\", mediaUrl);\n-      \n-      // Set showFullMedia to true if it was triggered by a maximize button\n-      if (showFullMedia) {\n-        // Find any fullscreen button in the page and click it\n-        const fullscreenButton = document.querySelector('[aria-label=\"View fullscreen\"]');\n-        if (fullscreenButton && fullscreenButton instanceof HTMLButtonElement) {\n-          setTimeout(() => {\n-            fullscreenButton.click();\n-          }, 300);\n-        }\n-      }\n+      console.log(\"Media display event dispatched:\", mediaUrl);\n     } catch (err) {\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n-  \n-  // Function to toggle play state\n-  const togglePlay = (e: React.MouseEvent) => {\n-    e.stopPropagation(); // Prevent parent handlers from firing\n-    setIsPlaying(!isPlaying);\n-    displayMedia(); // Display the media in the right panel\n-  };\n-  \n-  // Determine if we have media to display\n-  const hasMedia = prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl);\n-  \n-  // Determine if we have narration/audio\n-  const hasAudio = prompt && (prompt.narration || prompt.saytext);\n-  \n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n+      onMouseEnter={() => {\n+        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n+          console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n+          displayMedia();\n+        }\n+      }}\n       onClick={() => {\n-        if (hasMedia) {\n+        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n           console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n     >\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden pb-2\">\n-          {/* Top badges */}\n-          <div className=\"flex justify-between items-center\">\n+        <CardHeader className=\"relative overflow-hidden\">\n+          {/* Floating badge with shine effect */}\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n             <Badge \n               variant=\"outline\" \n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n             >\n               Exercise {index + 1}\n             </Badge>\n-            \n-            <div className=\"flex gap-2\">\n-              {prompt.metadata?.difficulty && (\n-                <Badge \n-                  variant=\"outline\" \n-                  className={cn(\n-                    \"capitalize bg-background/80 backdrop-blur-sm\",\n-                    prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n-                    prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n-                    prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n-                  )}\n-                >\n-                  {prompt.metadata.difficulty}\n-                </Badge>\n+            {prompt.metadata?.difficulty && (\n+              <Badge \n+                variant=\"outline\" \n+                className={cn(\n+                  \"capitalize bg-background/80 backdrop-blur-sm\",\n+                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n+                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n+                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n+                )}\n+              >\n+                {prompt.metadata.difficulty}\n+              </Badge>\n+            )}\n+          </div>\n+\n+          {/* Media Section */}\n+          {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n+            <div \n+              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n+              onClick={(e) => {\n+                e.stopPropagation(); // Prevent double triggering with parent onClick\n+                \n+                // First, display the media immediately\n+                displayMedia();\n+                \n+                // Then, schedule another update after a short delay to ensure it sticks\n+                // This helps overcome any race conditions that might reset the image\n+                setTimeout(() => {\n+                  console.log(\"Resending media display event after delay to ensure it sticks\");\n+                  displayMedia();\n+                }, 200);\n+              }}\n+            >\n+              {(prompt.type === 'image' || !prompt.type) && (\n+                <div className=\"relative h-[200px] overflow-hidden\">\n+                  <SafeImage\n+                    src={prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl || ''}\n+                    alt={prompt.text || 'Exercise image'}\n+                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n+                    fill\n+                    unoptimized={true}\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n+                </div>\n               )}\n-              \n-              {hasMedia && (\n-                <Badge variant=\"outline\" className=\"bg-background/80 backdrop-blur-sm border-primary/20\">\n-                  {prompt.type === 'video' ? <Video className=\"h-3 w-3 mr-1\" /> : <ImageIcon className=\"h-3 w-3 mr-1\" />}\n-                  {prompt.type || 'Media'}\n-                </Badge>\n+              {prompt.type === 'video' && (\n+                <div className=\"relative h-[200px]\">\n+                  <video\n+                    src={prompt.media || ''}\n+                    className=\"w-full h-full object-cover\"\n+                    preload=\"metadata\"\n+                    onClick={(e: React.MouseEvent) => {\n+                      e.stopPropagation();\n+                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                      if (videoEl) {\n+                        videoEl.controls = true;\n+                        videoEl.play();\n+                      }\n+                    }}\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n+                  {/* Adding controls button separately for better UI */}\n+                  <div className=\"absolute bottom-2 right-2\">\n+                    <Button \n+                      variant=\"ghost\" \n+                      size=\"sm\" \n+                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      onClick={(e: React.MouseEvent) => {\n+                        e.stopPropagation();\n+                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                        if (videoEl) {\n+                          videoEl.controls = true;\n+                          videoEl.play();\n+                        }\n+                      }}\n+                    >\n+                      <Play className=\"h-4 w-4 mr-1\" />\n+                      Play\n+                    </Button>\n+                  </div>\n+                </div>\n               )}\n             </div>\n-          </div>\n-          \n-          {/* Title with larger font */}\n-          <CardTitle className=\"text-xl font-bold mt-2\">{prompt.text}</CardTitle>\n-          \n-          {/* Metadata info */}\n-          <div className=\"flex items-center gap-4 mt-2 text-sm text-muted-foreground\">\n-            {prompt.metadata?.estimatedTime && (\n-              <div className=\"flex items-center gap-1\">\n-                <CalendarClock className=\"h-4 w-4\" />\n-                <span>{prompt.metadata.estimatedTime} min</span>\n-              </div>\n+          )}\n+\n+          {/* Title and Description */}\n+          <div className={cn(\"space-y-4\", (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && \"mt-40\")}>\n+            <CardTitle className=\"text-lg font-semibold leading-tight\">\n+              {prompt.text}\n+            </CardTitle>\n+            {prompt.content?.instructions && (\n+              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4\" />\n+                {prompt.content.instructions}\n+              </CardDescription>\n             )}\n-            \n-            {hasAudio && (\n-              <div className=\"flex items-center gap-1\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <span>Audio available</span>\n-              </div>\n-            )}\n           </div>\n         </CardHeader>\n-        \n-        <CardContent className=\"space-y-4 pt-2\">\n-          {/* Media preview - larger and more prominent */}\n-          {hasMedia && (\n-            <div className=\"relative rounded-md overflow-hidden border border-primary/20 h-[200px] group/media\">\n-              <SafeImage\n-                src={prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl || ''}\n-                alt={prompt.text || 'Exercise media'}\n-                className=\"object-cover\"\n-                fill\n-              />\n-              \n-              {/* Media overlay with controls */}\n-              <div className=\"absolute inset-0 bg-black/30 opacity-0 group-hover/media:opacity-100 transition-opacity flex items-center justify-center gap-3\">\n-                <Button \n-                  variant=\"secondary\" \n-                  size=\"sm\" \n-                  className=\"rounded-full\" \n-                  onClick={togglePlay}\n-                >\n-                  {isPlaying ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n-                </Button>\n-                \n-                <Button \n-                  variant=\"secondary\" \n-                  size=\"sm\" \n-                  className=\"rounded-full\"\n-                  onClick={(e) => {\n-                    e.stopPropagation();\n-                    setShowFullMedia(true);\n-                    displayMedia();\n-                  }}\n-                >\n-                  <Maximize2 className=\"h-4 w-4\" />\n-                </Button>\n+\n+        <CardContent className=\"space-y-4\">\n+          {/* Narration Section */}\n+          {prompt.narration && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Narration:</h4>\n               </div>\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n             </div>\n           )}\n-          \n-          {/* Instructions */}\n-          {prompt.content?.instructions && (\n-            <div className=\"text-sm\">\n-              <h4 className=\"font-medium mb-1\">Instructions:</h4>\n-              <p className=\"text-muted-foreground\">{prompt.content.instructions}</p>\n+\n+          {/* Say Text Section */}\n+          {prompt.saytext && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <MessageCircle className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Say Text</h4>\n+              </div>\n+              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n             </div>\n           )}\n-          \n-          {/* Writing prompt */}\n-          {prompt.content?.writingPrompt && (\n-            <div className=\"mt-4 p-4 rounded-md border bg-card\">\n-              <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n-                <CheckCircle className=\"h-4 w-4 text-green-500\" />\n-                Writing Prompt\n-              </h4>\n-              <p className=\"text-sm\">{prompt.content.writingPrompt}</p>\n+\n+          {/* Writing/Speaking Prompts */}\n+          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n+            <div className=\"grid gap-4\">\n+              {prompt.content.writingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n+                </div>\n+              )}\n+              {prompt.content.speakingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n+                </div>\n+              )}\n             </div>\n           )}\n-          \n-          {/* Speaking prompt */}\n-          {prompt.content?.speakingPrompt && (\n-            <div className=\"mt-4 p-4 rounded-md border bg-card\">\n-              <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n-                <CheckCircle className=\"h-4 w-4 text-blue-500\" />\n-                Speaking Prompt\n-              </h4>\n-              <p className=\"text-sm\">{prompt.content.speakingPrompt}</p>\n+\n+          {/* Metadata Footer */}\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n+            <div className=\"flex items-center gap-2\">\n+              <Clock className=\"h-4 w-4\" />\n+              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n             </div>\n-          )}\n-          \n-          {/* Narration content */}\n-          {prompt.narration && (\n-            <div className=\"mt-4 p-4 rounded-md border bg-card\">\n-              <h4 className=\"text-sm font-semibold mb-2 flex items-center gap-2\">\n-                <Volume2 className=\"h-4 w-4 text-blue-500\" />\n-                Narration\n-              </h4>\n-              <p className=\"text-sm\">{prompt.narration}</p>\n-            </div>\n-          )}\n+            <Badge variant=\"outline\" className=\"capitalize\">\n+              {prompt.type || 'Content'}\n+            </Badge>\n+          </div>\n         </CardContent>\n-        \n-        {/* Footer with action buttons */}\n-        <CardFooter className=\"pt-0 pb-4 flex justify-end gap-2\">\n-          {hasMedia && (\n-            <Button \n-              variant=\"outline\" \n-              size=\"sm\" \n-              className=\"flex items-center gap-1\"\n-              onClick={(e) => {\n-                e.stopPropagation();\n-                setShowFullMedia(true);\n-                displayMedia();\n-              }}\n-            >\n-              <Maximize2 className=\"h-4 w-4\" />\n-              View Media\n-            </Button>\n-          )}\n-          \n-          {hasAudio && (\n-            <Button \n-              variant=\"outline\" \n-              size=\"sm\" \n-              className=\"flex items-center gap-1\"\n-              onClick={togglePlay}\n-            >\n-              {isPlaying ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n-              {isPlaying ? 'Pause Audio' : 'Play Audio'}\n-            </Button>\n-          )}\n-        </CardFooter>\n       </Card>\n     </motion.div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741886276335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,22 +60,34 @@\n       } else {\n         mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n       }\n       \n+      // Determine media type from URL or prompt type\n+      let mediaType = prompt.type || 'image';\n+      if (typeof mediaUrl === 'string') {\n+        if (mediaUrl.match(/\\.(mp4|webm|ogg|mov)($|\\?)/i)) {\n+          mediaType = 'video';\n+        } else if (mediaUrl.match(/\\.(gif)($|\\?)/i)) {\n+          mediaType = 'gif';\n+        }\n+      }\n+      \n       // Check if URL is from external domains that need special handling\n       const isExternalDomain = typeof mediaUrl === 'string' && (\n         mediaUrl.includes('gifsec.com') || \n         mediaUrl.includes('gifdb.com') ||\n         mediaUrl.includes('usagif.com')\n       );\n       \n+      console.log(`Displaying ${mediaType} media: ${mediaUrl}`);\n+      \n       // Create a properly typed custom event with the correct detail structure\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n         bubbles: true,\n         composed: true,\n         detail: {\n           mediaUrl,\n-          mediaType: prompt.type || 'image',\n+          mediaType,\n           mediaTitle: prompt.text || 'Exercise Media',\n           sourceId: prompt.id || 'unknown',\n           isExternalDomain,\n           isPermanent: true,\n@@ -86,14 +98,58 @@\n       // Dispatch on both document and window to ensure it's captured\n       document.dispatchEvent(mediaEvent);\n       window.dispatchEvent(mediaEvent);\n       \n+      // Additional event with expanded details for debugging\n+      window.dispatchEvent(new CustomEvent('debug:mediaDisplay', {\n+        detail: {\n+          source: 'ExercisePromptView',\n+          prompt,\n+          mediaUrl,\n+          mediaType,\n+          timestamp\n+        }\n+      }));\n+      \n       console.log(\"Media display event dispatched:\", mediaUrl);\n     } catch (err) {\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n+  // Force media display when the component mounts\n+  useEffect(() => {\n+    // Small delay to ensure the DOM is ready\n+    const timer = setTimeout(() => {\n+      if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n+        console.log(\"Displaying media on mount for exercise prompt:\", prompt.id || 'unknown');\n+        displayMedia();\n+      }\n+    }, 300);\n+    \n+    return () => clearTimeout(timer);\n+  }, [prompt.id]);\n+  \n+  // Handle click event explicitly to ensure media display works\n+  const handleClick = (e: React.MouseEvent) => {\n+    e.stopPropagation(); // Prevent event bubbling\n+    console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n+    displayMedia();\n+    \n+    // Create a more direct event that includes raw data\n+    const directEvent = new CustomEvent('directMediaDisplay', {\n+      bubbles: true,\n+      composed: true,\n+      detail: {\n+        id: prompt.id,\n+        media: prompt.media,\n+        text: prompt.text,\n+        type: prompt.type || 'image'\n+      }\n+    });\n+    document.dispatchEvent(directEvent);\n+  };\n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n@@ -105,14 +161,9 @@\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n-      onClick={() => {\n-        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n-          console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n-          displayMedia();\n-        }\n-      }}\n+      onClick={handleClick}\n     >\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n         <CardHeader className=\"relative overflow-hidden\">\n           {/* Floating badge with shine effect */}\n"
                },
                {
                    "date": 1741886284226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play, Pencil, Mic } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n import SafeImage from '@/components/ui/safe-image';\n@@ -164,11 +164,11 @@\n       }}\n       onClick={handleClick}\n     >\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden\">\n-          {/* Floating badge with shine effect */}\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n+        <CardHeader className=\"relative p-4\">\n+          {/* Floating badges with shine effect */}\n+          <div className=\"absolute top-3 right-3 z-10 flex gap-2\">\n             <Badge \n               variant=\"outline\" \n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n             >\n@@ -188,153 +188,121 @@\n               </Badge>\n             )}\n           </div>\n \n-          {/* Media Section */}\n-          {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n-            <div \n-              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n-              onClick={(e) => {\n-                e.stopPropagation(); // Prevent double triggering with parent onClick\n-                \n-                // First, display the media immediately\n-                displayMedia();\n-                \n-                // Then, schedule another update after a short delay to ensure it sticks\n-                // This helps overcome any race conditions that might reset the image\n-                setTimeout(() => {\n-                  console.log(\"Resending media display event after delay to ensure it sticks\");\n+          {/* Exercise Content */}\n+          <div className=\"flex items-start gap-3\">\n+            {/* Media Indicator and Play Button */}\n+            {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n+              <div \n+                className=\"flex-shrink-0 w-12 h-12 rounded-md bg-primary/10 flex items-center justify-center cursor-pointer hover:bg-primary/20 transition-colors\"\n+                onClick={(e) => {\n+                  e.stopPropagation();\n                   displayMedia();\n-                }, 200);\n-              }}\n-            >\n-              {(prompt.type === 'image' || !prompt.type) && (\n-                <div className=\"relative h-[200px] overflow-hidden\">\n-                  <SafeImage\n-                    src={prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl || ''}\n-                    alt={prompt.text || 'Exercise image'}\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n-                    fill\n-                    unoptimized={true}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n+                }}\n+              >\n+                {prompt.type === 'video' ? (\n+                  <Video className=\"h-6 w-6 text-primary\" />\n+                ) : (\n+                  <ImageIcon className=\"h-6 w-6 text-primary\" />\n+                )}\n+              </div>\n+            )}\n+            \n+            {/* Title and Description */}\n+            <div className=\"space-y-2 flex-1\">\n+              <CardTitle className=\"text-base font-semibold leading-tight\">\n+                {prompt.text}\n+              </CardTitle>\n+              {prompt.content?.instructions && (\n+                <CardDescription className=\"text-sm text-primary/80\">\n+                  <div className=\"flex items-start gap-1 mt-1\">\n+                    <Lightbulb className=\"h-4 w-4 mt-0.5 flex-shrink-0\" />\n+                    <span>{prompt.content.instructions}</span>\n                   </div>\n-                </div>\n+                </CardDescription>\n               )}\n-              {prompt.type === 'video' && (\n-                <div className=\"relative h-[200px]\">\n-                  <video\n-                    src={prompt.media || ''}\n-                    className=\"w-full h-full object-cover\"\n-                    preload=\"metadata\"\n-                    onClick={(e: React.MouseEvent) => {\n-                      e.stopPropagation();\n-                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                      if (videoEl) {\n-                        videoEl.controls = true;\n-                        videoEl.play();\n-                      }\n-                    }}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n-                  </div>\n-                  {/* Adding controls button separately for better UI */}\n-                  <div className=\"absolute bottom-2 right-2\">\n-                    <Button \n-                      variant=\"ghost\" \n-                      size=\"sm\" \n-                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n-                      onClick={(e: React.MouseEvent) => {\n-                        e.stopPropagation();\n-                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                        if (videoEl) {\n-                          videoEl.controls = true;\n-                          videoEl.play();\n-                        }\n-                      }}\n-                    >\n-                      <Play className=\"h-4 w-4 mr-1\" />\n-                      Play\n-                    </Button>\n-                  </div>\n-                </div>\n-              )}\n             </div>\n-          )}\n-\n-          {/* Title and Description */}\n-          <div className={cn(\"space-y-4\", (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && \"mt-40\")}>\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\n-              {prompt.text}\n-            </CardTitle>\n-            {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4\" />\n-                {prompt.content.instructions}\n-              </CardDescription>\n-            )}\n           </div>\n         </CardHeader>\n \n-        <CardContent className=\"space-y-4\">\n-          {/* Narration Section */}\n-          {prompt.narration && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Narration:</h4>\n+        <CardContent className=\"p-4 pt-0\">\n+          {/* Compact Content Sections */}\n+          <div className=\"space-y-3\">\n+            {/* Narration Section - Compact */}\n+            {prompt.narration && (\n+              <div className=\"flex items-start gap-2 text-sm\">\n+                <Volume2 className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n+                <div>\n+                  <div className=\"font-medium text-primary mb-1\">Narration</div>\n+                  <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+                </div>\n               </div>\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n-            </div>\n-          )}\n+            )}\n \n-          {/* Say Text Section */}\n-          {prompt.saytext && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <MessageCircle className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Say Text</h4>\n+            {/* Say Text Section - Compact */}\n+            {prompt.saytext && (\n+              <div className=\"flex items-start gap-2 text-sm\">\n+                <MessageCircle className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n+                <div>\n+                  <div className=\"font-medium text-primary mb-1\">Say Text</div>\n+                  <div className=\"text-muted-foreground\">{prompt.saytext}</div>\n+                </div>\n               </div>\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n-            </div>\n-          )}\n+            )}\n \n-          {/* Writing/Speaking Prompts */}\n-          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n-            <div className=\"grid gap-4\">\n-              {prompt.content.writingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n+            {/* Writing/Speaking Prompts - Compact */}\n+            {prompt.content?.writingPrompt && (\n+              <div className=\"flex items-start gap-2 text-sm\">\n+                <Pencil className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n+                <div>\n+                  <div className=\"font-medium text-primary mb-1\">Writing Prompt</div>\n+                  <div className=\"text-muted-foreground\">{prompt.content.writingPrompt}</div>\n                 </div>\n-              )}\n-              {prompt.content.speakingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n+              </div>\n+            )}\n+            \n+            {prompt.content?.speakingPrompt && (\n+              <div className=\"flex items-start gap-2 text-sm\">\n+                <Mic className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n+                <div>\n+                  <div className=\"font-medium text-primary mb-1\">Speaking Prompt</div>\n+                  <div className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</div>\n                 </div>\n-              )}\n+              </div>\n+            )}\n+          </div>\n+\n+          {/* Footer with Play Media Button */}\n+          {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n+            <div className=\"mt-4 flex justify-between items-center\">\n+              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n+                <Clock className=\"h-4 w-4\" />\n+                <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n+              </div>\n+              <Button \n+                variant=\"secondary\" \n+                size=\"sm\" \n+                className=\"gap-1\"\n+                onClick={(e) => {\n+                  e.stopPropagation();\n+                  displayMedia();\n+                }}\n+              >\n+                {prompt.type === 'video' ? (\n+                  <>\n+                    <Play className=\"h-3.5 w-3.5\" />\n+                    Play Video\n+                  </>\n+                ) : (\n+                  <>\n+                    <Maximize2 className=\"h-3.5 w-3.5\" />\n+                    View Image\n+                  </>\n+                )}\n+              </Button>\n             </div>\n           )}\n-\n-          {/* Metadata Footer */}\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n-            <div className=\"flex items-center gap-2\">\n-              <Clock className=\"h-4 w-4\" />\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n-            </div>\n-            <Badge variant=\"outline\" className=\"capitalize\">\n-              {prompt.type || 'Content'}\n-            </Badge>\n-          </div>\n         </CardContent>\n       </Card>\n     </motion.div>\n   );\n"
                },
                {
                    "date": 1741887911783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,172 +3,119 @@\n import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play, Pencil, Mic } from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n-import SafeImage from '@/components/ui/safe-image';\n \n-interface ExercisePrompt {\n-  id: string;\n-  text: string;\n-  type?: string;\n-  media?: string | null;\n-  narration?: string | null;\n-  saytext?: string | null;\n-  content?: {\n-    instructions?: string;\n-    writingPrompt?: string;\n-    speakingPrompt?: string;\n+interface ExercisePromptViewProps {\n+  prompt: {\n+    id: string;\n+    text: string;\n+    type: 'image' | 'video' | 'gif';\n+    media: string | null;\n+    narration: string | null;\n+    saytext: string | null;\n+    content?: {\n+      instructions?: string;\n+      writingPrompt?: string;\n+      speakingPrompt?: string;\n+    };\n+    metadata?: {\n+      difficulty?: 'beginner' | 'intermediate' | 'advanced';\n+      estimatedTime?: number;\n+    };\n   };\n-  metadata?: {\n-    difficulty?: 'beginner' | 'intermediate' | 'advanced';\n-    estimatedTime?: number;\n-    imageUrl?: string;\n-  };\n-  data?: any;\n-}\n-\n-interface ExercisePromptViewProps {\n-  prompt: ExercisePrompt;\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n   // Function to dispatch media display event\n   const displayMedia = () => {\n-    if (!prompt || (!prompt.media && !prompt.data?.image_url && !prompt.metadata?.imageUrl)) {\n+    if (!prompt || !prompt.media) {\n       console.log(\"No media available for this prompt\");\n       return;\n     }\n     \n     try {\n-      // Get media URL from various possible locations\n-      let mediaUrl = prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl;\n-      if (!mediaUrl) {\n-        console.log(\"No media URL found in prompt\");\n-        return;\n-      }\n-      \n       // Generate a unique identifier to ensure media updates\n       const timestamp = new Date().getTime();\n       \n+      // Check if URL is from external domains that need special handling\n+      const isExternalDomain = \n+        typeof prompt.media === 'string' && \n+        (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n+      \n       // Add a timestamp parameter to force media refresh\n+      let mediaUrl = prompt.media;\n       if (mediaUrl.includes('?')) {\n         mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n       } else {\n         mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n       }\n       \n-      // Determine media type from URL or prompt type\n-      let mediaType = prompt.type || 'image';\n-      if (typeof mediaUrl === 'string') {\n-        if (mediaUrl.match(/\\.(mp4|webm|ogg|mov)($|\\?)/i)) {\n-          mediaType = 'video';\n-        } else if (mediaUrl.match(/\\.(gif)($|\\?)/i)) {\n-          mediaType = 'gif';\n-        }\n-      }\n+      // Create a persistent media object\n+      const persistentMedia = {\n+        mediaUrl,\n+        mediaType: prompt.type || 'image',\n+        mediaTitle: prompt.text || 'Exercise Media',\n+        sourceId: prompt.id || 'unknown',\n+        isExternalDomain,\n+        isPermanent: true,\n+        timestamp\n+      };\n       \n-      // Check if URL is from external domains that need special handling\n-      const isExternalDomain = typeof mediaUrl === 'string' && (\n-        mediaUrl.includes('gifsec.com') || \n-        mediaUrl.includes('gifdb.com') ||\n-        mediaUrl.includes('usagif.com')\n-      );\n+      // Log the event details\n+      console.log(\"Dispatching displayMediaInRightPanel event:\", persistentMedia);\n       \n-      console.log(`Displaying ${mediaType} media: ${mediaUrl}`);\n-      \n+      // Store the selected media in localStorage to ensure it persists\n+      try {\n+        localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n+      } catch (e) {\n+        console.warn(\"Failed to store media in localStorage:\", e);\n+      }\n+\n       // Create a properly typed custom event with the correct detail structure\n       const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n         bubbles: true,\n         composed: true,\n-        detail: {\n-          mediaUrl,\n-          mediaType,\n-          mediaTitle: prompt.text || 'Exercise Media',\n-          sourceId: prompt.id || 'unknown',\n-          isExternalDomain,\n-          isPermanent: true,\n-          timestamp\n-        }\n+        detail: persistentMedia\n       });\n       \n       // Dispatch on both document and window to ensure it's captured\n       document.dispatchEvent(mediaEvent);\n       window.dispatchEvent(mediaEvent);\n-      \n-      // Additional event with expanded details for debugging\n-      window.dispatchEvent(new CustomEvent('debug:mediaDisplay', {\n-        detail: {\n-          source: 'ExercisePromptView',\n-          prompt,\n-          mediaUrl,\n-          mediaType,\n-          timestamp\n-        }\n-      }));\n-      \n-      console.log(\"Media display event dispatched:\", mediaUrl);\n     } catch (err) {\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n-  // Force media display when the component mounts\n-  useEffect(() => {\n-    // Small delay to ensure the DOM is ready\n-    const timer = setTimeout(() => {\n-      if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n-        console.log(\"Displaying media on mount for exercise prompt:\", prompt.id || 'unknown');\n-        displayMedia();\n-      }\n-    }, 300);\n-    \n-    return () => clearTimeout(timer);\n-  }, [prompt.id]);\n-  \n-  // Handle click event explicitly to ensure media display works\n-  const handleClick = (e: React.MouseEvent) => {\n-    e.stopPropagation(); // Prevent event bubbling\n-    console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n-    displayMedia();\n-    \n-    // Create a more direct event that includes raw data\n-    const directEvent = new CustomEvent('directMediaDisplay', {\n-      bubbles: true,\n-      composed: true,\n-      detail: {\n-        id: prompt.id,\n-        media: prompt.media,\n-        text: prompt.text,\n-        type: prompt.type || 'image'\n-      }\n-    });\n-    document.dispatchEvent(directEvent);\n-  };\n-\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n       onMouseEnter={() => {\n-        if (prompt && (prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl)) {\n+        if (prompt && prompt.media) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n-      onClick={handleClick}\n+      onClick={() => {\n+        if (prompt && prompt.media) {\n+          console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n+          displayMedia();\n+        }\n+      }}\n     >\n       <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative p-4\">\n-          {/* Floating badges with shine effect */}\n-          <div className=\"absolute top-3 right-3 z-10 flex gap-2\">\n+        <CardHeader className=\"relative overflow-hidden\">\n+          {/* Floating badge with shine effect */}\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n             <Badge \n               variant=\"outline\" \n               className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n             >\n@@ -188,121 +135,152 @@\n               </Badge>\n             )}\n           </div>\n \n-          {/* Exercise Content */}\n-          <div className=\"flex items-start gap-3\">\n-            {/* Media Indicator and Play Button */}\n-            {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n-              <div \n-                className=\"flex-shrink-0 w-12 h-12 rounded-md bg-primary/10 flex items-center justify-center cursor-pointer hover:bg-primary/20 transition-colors\"\n-                onClick={(e) => {\n-                  e.stopPropagation();\n+          {/* Media Section */}\n+          {prompt.media && (\n+            <div \n+              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n+              onClick={(e) => {\n+                e.stopPropagation(); // Prevent double triggering with parent onClick\n+                \n+                // First, display the media immediately\n+                displayMedia();\n+                \n+                // Then, schedule another update after a short delay to ensure it sticks\n+                // This helps overcome any race conditions that might reset the image\n+                setTimeout(() => {\n+                  console.log(\"Resending media display event after delay to ensure it sticks\");\n                   displayMedia();\n-                }}\n-              >\n-                {prompt.type === 'video' ? (\n-                  <Video className=\"h-6 w-6 text-primary\" />\n-                ) : (\n-                  <ImageIcon className=\"h-6 w-6 text-primary\" />\n-                )}\n-              </div>\n-            )}\n-            \n-            {/* Title and Description */}\n-            <div className=\"space-y-2 flex-1\">\n-              <CardTitle className=\"text-base font-semibold leading-tight\">\n-                {prompt.text}\n-              </CardTitle>\n-              {prompt.content?.instructions && (\n-                <CardDescription className=\"text-sm text-primary/80\">\n-                  <div className=\"flex items-start gap-1 mt-1\">\n-                    <Lightbulb className=\"h-4 w-4 mt-0.5 flex-shrink-0\" />\n-                    <span>{prompt.content.instructions}</span>\n+                }, 200);\n+              }}\n+            >\n+              {prompt.type === 'image' && (\n+                <div className=\"relative h-[200px] overflow-hidden\">\n+                  <ImagePreview\n+                    imageUrl={prompt.media}\n+                    alt={prompt.text}\n+                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n+                    priority={false}\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n                   </div>\n-                </CardDescription>\n+                </div>\n               )}\n+              {prompt.type === 'video' && (\n+                <div className=\"relative h-[200px]\">\n+                  <video\n+                    src={prompt.media}\n+                    className=\"w-full h-full object-cover\"\n+                    preload=\"metadata\"\n+                    onClick={(e: React.MouseEvent) => {\n+                      e.stopPropagation();\n+                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                      if (videoEl) {\n+                        videoEl.controls = true;\n+                        videoEl.play();\n+                      }\n+                    }}\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n+                  {/* Adding controls button separately for better UI */}\n+                  <div className=\"absolute bottom-2 right-2\">\n+                    <Button \n+                      variant=\"ghost\" \n+                      size=\"sm\" \n+                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      onClick={(e: React.MouseEvent) => {\n+                        e.stopPropagation();\n+                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                        if (videoEl) {\n+                          videoEl.controls = true;\n+                          videoEl.play();\n+                        }\n+                      }}\n+                    >\n+                      <Play className=\"h-4 w-4 mr-1\" />\n+                      Play\n+                    </Button>\n+                  </div>\n+                </div>\n+              )}\n             </div>\n+          )}\n+\n+          {/* Title and Description */}\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n+            <CardTitle className=\"text-lg font-semibold leading-tight\">\n+              {prompt.text}\n+            </CardTitle>\n+            {prompt.content?.instructions && (\n+              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4\" />\n+                {prompt.content.instructions}\n+              </CardDescription>\n+            )}\n           </div>\n         </CardHeader>\n \n-        <CardContent className=\"p-4 pt-0\">\n-          {/* Compact Content Sections */}\n-          <div className=\"space-y-3\">\n-            {/* Narration Section - Compact */}\n-            {prompt.narration && (\n-              <div className=\"flex items-start gap-2 text-sm\">\n-                <Volume2 className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n-                <div>\n-                  <div className=\"font-medium text-primary mb-1\">Narration</div>\n-                  <div className=\"text-muted-foreground\">{prompt.narration}</div>\n-                </div>\n+        <CardContent className=\"space-y-4\">\n+          {/* Narration Section */}\n+          {prompt.narration && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Narration:</h4>\n               </div>\n-            )}\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+            </div>\n+          )}\n \n-            {/* Say Text Section - Compact */}\n-            {prompt.saytext && (\n-              <div className=\"flex items-start gap-2 text-sm\">\n-                <MessageCircle className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n-                <div>\n-                  <div className=\"font-medium text-primary mb-1\">Say Text</div>\n-                  <div className=\"text-muted-foreground\">{prompt.saytext}</div>\n-                </div>\n+          {/* Say Text Section */}\n+          {prompt.saytext && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <MessageCircle className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Say Text</h4>\n               </div>\n-            )}\n+              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n+            </div>\n+          )}\n \n-            {/* Writing/Speaking Prompts - Compact */}\n-            {prompt.content?.writingPrompt && (\n-              <div className=\"flex items-start gap-2 text-sm\">\n-                <Pencil className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n-                <div>\n-                  <div className=\"font-medium text-primary mb-1\">Writing Prompt</div>\n-                  <div className=\"text-muted-foreground\">{prompt.content.writingPrompt}</div>\n+          {/* Writing/Speaking Prompts */}\n+          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n+            <div className=\"grid gap-4\">\n+              {prompt.content.writingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n                 </div>\n-              </div>\n-            )}\n-            \n-            {prompt.content?.speakingPrompt && (\n-              <div className=\"flex items-start gap-2 text-sm\">\n-                <Mic className=\"h-4 w-4 mt-1 flex-shrink-0 text-primary\" />\n-                <div>\n-                  <div className=\"font-medium text-primary mb-1\">Speaking Prompt</div>\n-                  <div className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</div>\n+              )}\n+              {prompt.content.speakingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n                 </div>\n-              </div>\n-            )}\n-          </div>\n+              )}\n+            </div>\n+          )}\n \n-          {/* Footer with Play Media Button */}\n-          {(prompt.media || prompt.data?.image_url || prompt.metadata?.imageUrl) && (\n-            <div className=\"mt-4 flex justify-between items-center\">\n-              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n-                <Clock className=\"h-4 w-4\" />\n-                <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n-              </div>\n-              <Button \n-                variant=\"secondary\" \n-                size=\"sm\" \n-                className=\"gap-1\"\n-                onClick={(e) => {\n-                  e.stopPropagation();\n-                  displayMedia();\n-                }}\n-              >\n-                {prompt.type === 'video' ? (\n-                  <>\n-                    <Play className=\"h-3.5 w-3.5\" />\n-                    Play Video\n-                  </>\n-                ) : (\n-                  <>\n-                    <Maximize2 className=\"h-3.5 w-3.5\" />\n-                    View Image\n-                  </>\n-                )}\n-              </Button>\n+          {/* Metadata Footer */}\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n+            <div className=\"flex items-center gap-2\">\n+              <Clock className=\"h-4 w-4\" />\n+              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n             </div>\n-          )}\n+            <Badge variant=\"outline\" className=\"capitalize\">\n+              {prompt.type}\n+            </Badge>\n+          </div>\n         </CardContent>\n       </Card>\n     </motion.div>\n   );\n"
                },
                {
                    "date": 1741889591864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,19 @@\n \"use client\";\n \n-import React, { useEffect } from \"react\";\n-import { motion } from \"framer-motion\";\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n+import React, { useEffect, useState } from \"react\";\n+import { motion, AnimatePresence } from \"framer-motion\";\n+import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n+import { \n+  Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, \n+  Maximize2, Play, BookOpen, ChevronDown, ChevronUp, ExternalLink,\n+  CheckCircle, PenLine, Mic \n+} from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n+import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\n \n interface ExercisePromptViewProps {\n   prompt: {\n     id: string;\n@@ -30,68 +35,91 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n+  const [expanded, setExpanded] = useState(false);\n+  const [mediaHovered, setMediaHovered] = useState(false);\n+  \n   // Function to dispatch media display event\n   const displayMedia = () => {\n-    if (!prompt || !prompt.media) {\n-      console.log(\"No media available for this prompt\");\n-      return;\n-    }\n+    if (!prompt.media) return;\n     \n-    try {\n-      // Generate a unique identifier to ensure media updates\n-      const timestamp = new Date().getTime();\n-      \n-      // Check if URL is from external domains that need special handling\n-      const isExternalDomain = \n-        typeof prompt.media === 'string' && \n-        (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n-      \n-      // Add a timestamp parameter to force media refresh\n-      let mediaUrl = prompt.media;\n-      if (mediaUrl.includes('?')) {\n-        mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n-      } else {\n-        mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n-      }\n-      \n-      // Create a persistent media object\n-      const persistentMedia = {\n-        mediaUrl,\n-        mediaType: prompt.type || 'image',\n-        mediaTitle: prompt.text || 'Exercise Media',\n-        sourceId: prompt.id || 'unknown',\n-        isExternalDomain,\n-        isPermanent: true,\n-        timestamp\n-      };\n-      \n-      // Log the event details\n-      console.log(\"Dispatching displayMediaInRightPanel event:\", persistentMedia);\n-      \n-      // Store the selected media in localStorage to ensure it persists\n-      try {\n-        localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n-      } catch (e) {\n-        console.warn(\"Failed to store media in localStorage:\", e);\n-      }\n+    const detail = {\n+      sourceId: prompt.id,\n+      type: prompt.type,\n+      url: prompt.media,\n+      title: prompt.text,\n+      isPermanent: true\n+    };\n+    \n+    const customEvent = new CustomEvent(\"media-display\", { \n+      detail,\n+      bubbles: true,\n+      cancelable: true\n+    });\n+    \n+    document.dispatchEvent(customEvent);\n+    console.log(\"Media display event dispatched:\", detail);\n+  };\n+  \n+  // Function to dispatch audio play event for narration\n+  const playNarration = (e: React.MouseEvent) => {\n+    e.stopPropagation();\n+    if (!prompt.narration) return;\n+    \n+    const customEvent = new CustomEvent(\"text-to-speech\", { \n+      detail: {\n+        text: prompt.narration,\n+        lang: 'en-US',\n+        rate: 1.0,\n+        pitch: 1.0,\n+        volume: 1.0,\n+        sourceId: prompt.id\n+      },\n+      bubbles: true,\n+      cancelable: true\n+    });\n+    \n+    document.dispatchEvent(customEvent);\n+  };\n \n-      // Create a properly typed custom event with the correct detail structure\n-      const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n-        bubbles: true,\n-        composed: true,\n-        detail: persistentMedia\n-      });\n-      \n-      // Dispatch on both document and window to ensure it's captured\n-      document.dispatchEvent(mediaEvent);\n-      window.dispatchEvent(mediaEvent);\n-    } catch (err) {\n-      console.error(\"Error dispatching media event:\", err);\n+  const mediaAvailable = prompt.media && prompt.type;\n+  const hasNarration = !!prompt.narration;\n+  const hasSayText = !!prompt.saytext;\n+  const hasWritingPrompt = !!prompt.content?.writingPrompt;\n+  const hasSpeakingPrompt = !!prompt.content?.speakingPrompt;\n+  const estimatedTime = prompt.metadata?.estimatedTime || 5;\n+  const difficulty = prompt.metadata?.difficulty || 'beginner';\n+\n+  // Get icon based on exercise type/content\n+  const getIcon = () => {\n+    if (hasWritingPrompt) return <PenLine className=\"h-5 w-5\" />;\n+    if (hasSpeakingPrompt) return <Mic className=\"h-5 w-5\" />;\n+    if (mediaAvailable) return prompt.type === 'video' ? <Video className=\"h-5 w-5\" /> : <ImageIcon className=\"h-5 w-5\" />;\n+    if (hasNarration) return <Volume2 className=\"h-5 w-5\" />;\n+    return <BookOpen className=\"h-5 w-5\" />;\n+  };\n+\n+  // Get background color based on difficulty\n+  const getDifficultyColor = () => {\n+    switch(difficulty) {\n+      case 'beginner': return 'from-green-500/10 to-green-500/5 border-green-500/20';\n+      case 'intermediate': return 'from-blue-500/10 to-blue-500/5 border-blue-500/20';\n+      case 'advanced': return 'from-red-500/10 to-red-500/5 border-red-500/20';\n+      default: return 'from-primary/10 to-primary/5 border-primary/20';\n     }\n   };\n \n+  // Get difficulty badge color\n+  const getDifficultyBadgeStyle = () => {\n+    switch(difficulty) {\n+      case 'beginner': return 'bg-green-500/10 text-green-600 hover:bg-green-500/20';\n+      case 'intermediate': return 'bg-blue-500/10 text-blue-600 hover:bg-blue-500/20';\n+      case 'advanced': return 'bg-red-500/10 text-red-600 hover:bg-red-500/20';\n+      default: return 'bg-primary/10 text-primary hover:bg-primary/20';\n+    }\n+  };\n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n@@ -103,185 +131,240 @@\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n-      onClick={() => {\n-        if (prompt && prompt.media) {\n-          console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n-          displayMedia();\n-        }\n-      }}\n     >\n-      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden\">\n-          {/* Floating badge with shine effect */}\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n-            <Badge \n-              variant=\"outline\" \n-              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n-            >\n-              Exercise {index + 1}\n-            </Badge>\n-            {prompt.metadata?.difficulty && (\n-              <Badge \n+      <Card className={cn(\n+        \"overflow-hidden backdrop-blur-sm transition-all duration-300\",\n+        \"border bg-gradient-to-b from-background to-background/70\",\n+        expanded ? \"shadow-lg\" : \"hover:shadow-md hover:-translate-y-1\",\n+        getDifficultyColor()\n+      )}>\n+        <CardHeader className=\"relative p-5 pb-3 space-y-1\">\n+          {/* Exercise details header row */}\n+          <div className=\"flex justify-between items-center\">\n+            <div className=\"flex items-center gap-2\">\n+              <div className={cn(\n+                \"flex items-center justify-center w-8 h-8 rounded-full\",\n+                \"bg-primary/10 text-primary\"\n+              )}>\n+                {getIcon()}\n+              </div>\n+              <CardTitle className=\"text-lg font-semibold line-clamp-1\">\n+                {prompt.text || `Exercise ${index + 1}`}\n+              </CardTitle>\n+            </div>\n+            \n+            <div className=\"flex items-center gap-2\">\n+              <TooltipProvider>\n+                <Tooltip>\n+                  <TooltipTrigger asChild>\n+                    <Badge variant=\"outline\" className={cn(\"capitalize\", getDifficultyBadgeStyle())}>\n+                      {difficulty}\n+                    </Badge>\n+                  </TooltipTrigger>\n+                  <TooltipContent>\n+                    <p>{difficulty} level exercise</p>\n+                  </TooltipContent>\n+                </Tooltip>\n+              </TooltipProvider>\n+              \n+              <TooltipProvider>\n+                <Tooltip>\n+                  <TooltipTrigger asChild>\n+                    <Button\n+                      variant=\"ghost\"\n+                      size=\"icon\"\n+                      onClick={() => setExpanded(!expanded)}\n+                      className=\"rounded-full h-8 w-8 text-primary\"\n+                    >\n+                      {expanded ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\n+                    </Button>\n+                  </TooltipTrigger>\n+                  <TooltipContent>\n+                    <p>{expanded ? \"Collapse\" : \"Expand\"} exercise details</p>\n+                  </TooltipContent>\n+                </Tooltip>\n+              </TooltipProvider>\n+            </div>\n+          </div>\n+          \n+          {/* Subtle description row */}\n+          <CardDescription className=\"line-clamp-2 ml-10\">\n+            {prompt.narration ? \n+              prompt.narration.substring(0, 120) + (prompt.narration.length > 120 ? '...' : '') \n+              : 'Complete this exercise to progress in your lesson'}\n+          </CardDescription>\n+        </CardHeader>\n+\n+        {/* Media preview (if available) */}\n+        {mediaAvailable && (\n+          <div \n+            className=\"relative cursor-pointer overflow-hidden\" \n+            style={{ height: expanded ? '240px' : '160px' }}\n+            onClick={displayMedia}\n+            onMouseEnter={() => setMediaHovered(true)}\n+            onMouseLeave={() => setMediaHovered(false)}\n+          >\n+            {prompt.type === 'image' && (\n+              <div className=\"h-full w-full\">\n+                <img \n+                  src={prompt.media || ''} \n+                  alt={prompt.text} \n+                  className=\"w-full h-full object-cover transition-transform duration-700\"\n+                  style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n+                />\n+              </div>\n+            )}\n+            \n+            {prompt.type === 'video' && (\n+              <div className=\"h-full w-full\">\n+                <video\n+                  src={prompt.media || ''}\n+                  className=\"w-full h-full object-cover\"\n+                  preload=\"metadata\"\n+                />\n+              </div>\n+            )}\n+            \n+            {/* Media overlay with play/expand button */}\n+            <div className={cn(\n+              \"absolute inset-0 bg-gradient-to-t from-black/60 via-black/30 to-transparent\",\n+              \"flex items-center justify-center\",\n+              \"transition-opacity duration-300\",\n+              mediaHovered ? \"opacity-100\" : \"opacity-0\"\n+            )}>\n+              <Button \n                 variant=\"outline\" \n-                className={cn(\n-                  \"capitalize bg-background/80 backdrop-blur-sm\",\n-                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n-                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n-                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n-                )}\n+                size=\"icon\" \n+                className=\"bg-white/20 hover:bg-white/40 backdrop-blur-sm border-white/30 text-white rounded-full h-12 w-12 transform transition-transform duration-300\"\n+                style={{ transform: mediaHovered ? 'scale(1.1)' : 'scale(1)' }}\n               >\n-                {prompt.metadata.difficulty}\n-              </Badge>\n-            )}\n+                <Maximize2 className=\"h-5 w-5\" />\n+              </Button>\n+            </div>\n           </div>\n+        )}\n \n-          {/* Media Section */}\n-          {prompt.media && (\n-            <div \n-              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n-              onClick={(e) => {\n-                e.stopPropagation(); // Prevent double triggering with parent onClick\n-                \n-                // First, display the media immediately\n-                displayMedia();\n-                \n-                // Then, schedule another update after a short delay to ensure it sticks\n-                // This helps overcome any race conditions that might reset the image\n-                setTimeout(() => {\n-                  console.log(\"Resending media display event after delay to ensure it sticks\");\n-                  displayMedia();\n-                }, 200);\n-              }}\n+        {/* Expandable content */}\n+        <AnimatePresence>\n+          {expanded && (\n+            <motion.div\n+              initial={{ opacity: 0, height: 0 }}\n+              animate={{ opacity: 1, height: 'auto' }}\n+              exit={{ opacity: 0, height: 0 }}\n+              transition={{ duration: 0.3 }}\n             >\n-              {prompt.type === 'image' && (\n-                <div className=\"relative h-[200px] overflow-hidden\">\n-                  <ImagePreview\n-                    imageUrl={prompt.media}\n-                    alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n-                    priority={false}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+              <CardContent className=\"p-5 pt-3 space-y-4\">\n+                {/* Narration Section */}\n+                {hasNarration && (\n+                  <div className=\"relative p-4 rounded-lg border border-primary/10 bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\n+                    <div className=\"flex items-center justify-between mb-2\">\n+                      <div className=\"flex items-center gap-2 text-primary\">\n+                        <Volume2 className=\"h-4 w-4\" />\n+                        <h4 className=\"font-medium\">Narration</h4>\n+                      </div>\n+                      <Button \n+                        variant=\"ghost\" \n+                        size=\"sm\" \n+                        onClick={playNarration}\n+                        className=\"text-primary hover:text-primary/80 hover:bg-primary/10 rounded-full h-7\"\n+                      >\n+                        <Play className=\"h-3 w-3 mr-1\" />\n+                        <span className=\"text-xs\">Play</span>\n+                      </Button>\n                     </div>\n+                    <div className=\"text-muted-foreground\">{prompt.narration}</div>\n                   </div>\n-                </div>\n-              )}\n-              {prompt.type === 'video' && (\n-                <div className=\"relative h-[200px]\">\n-                  <video\n-                    src={prompt.media}\n-                    className=\"w-full h-full object-cover\"\n-                    preload=\"metadata\"\n-                    onClick={(e: React.MouseEvent) => {\n-                      e.stopPropagation();\n-                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                      if (videoEl) {\n-                        videoEl.controls = true;\n-                        videoEl.play();\n-                      }\n-                    }}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                )}\n+\n+                {/* Say Text Section */}\n+                {hasSayText && (\n+                  <div className=\"relative p-4 rounded-lg border border-blue-500/10 bg-blue-500/5 hover:bg-blue-500/10 transition-colors duration-300\">\n+                    <div className=\"flex items-center gap-2 mb-2 text-blue-600\">\n+                      <MessageCircle className=\"h-4 w-4\" />\n+                      <h4 className=\"font-medium\">Say This</h4>\n                     </div>\n+                    <p className=\"text-foreground font-medium text-lg\">{prompt.saytext}</p>\n                   </div>\n-                  {/* Adding controls button separately for better UI */}\n-                  <div className=\"absolute bottom-2 right-2\">\n-                    <Button \n-                      variant=\"ghost\" \n-                      size=\"sm\" \n-                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n-                      onClick={(e: React.MouseEvent) => {\n-                        e.stopPropagation();\n-                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                        if (videoEl) {\n-                          videoEl.controls = true;\n-                          videoEl.play();\n-                        }\n-                      }}\n-                    >\n-                      <Play className=\"h-4 w-4 mr-1\" />\n-                      Play\n-                    </Button>\n+                )}\n+\n+                {/* Prompts Grid */}\n+                {(hasWritingPrompt || hasSpeakingPrompt) && (\n+                  <div className=\"grid gap-4 md:grid-cols-2\">\n+                    {hasWritingPrompt && (\n+                      <div className=\"p-4 rounded-lg border border-green-500/20 bg-green-500/5 hover:bg-green-500/10 transition-colors duration-300\">\n+                        <div className=\"flex items-center gap-2 mb-2 text-green-600\">\n+                          <PenLine className=\"h-4 w-4\" />\n+                          <h4 className=\"font-medium\">Writing Prompt</h4>\n+                        </div>\n+                        <p className=\"text-muted-foreground\">{prompt.content?.writingPrompt}</p>\n+                      </div>\n+                    )}\n+                    \n+                    {hasSpeakingPrompt && (\n+                      <div className=\"p-4 rounded-lg border border-amber-500/20 bg-amber-500/5 hover:bg-amber-500/10 transition-colors duration-300\">\n+                        <div className=\"flex items-center gap-2 mb-2 text-amber-600\">\n+                          <Mic className=\"h-4 w-4\" />\n+                          <h4 className=\"font-medium\">Speaking Prompt</h4>\n+                        </div>\n+                        <p className=\"text-muted-foreground\">{prompt.content?.speakingPrompt}</p>\n+                      </div>\n+                    )}\n                   </div>\n-                </div>\n-              )}\n-            </div>\n+                )}\n+              </CardContent>\n+            </motion.div>\n           )}\n+        </AnimatePresence>\n \n-          {/* Title and Description */}\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\n-              {prompt.text}\n-            </CardTitle>\n-            {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4\" />\n-                {prompt.content.instructions}\n-              </CardDescription>\n-            )}\n-          </div>\n-        </CardHeader>\n-\n-        <CardContent className=\"space-y-4\">\n-          {/* Narration Section */}\n-          {prompt.narration && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Narration:</h4>\n-              </div>\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n-            </div>\n-          )}\n-\n-          {/* Say Text Section */}\n-          {prompt.saytext && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <MessageCircle className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Say Text</h4>\n-              </div>\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n-            </div>\n-          )}\n-\n-          {/* Writing/Speaking Prompts */}\n-          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n-            <div className=\"grid gap-4\">\n-              {prompt.content.writingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n-                </div>\n-              )}\n-              {prompt.content.speakingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n-                </div>\n-              )}\n-            </div>\n-          )}\n-\n-          {/* Metadata Footer */}\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n-            <div className=\"flex items-center gap-2\">\n-              <Clock className=\"h-4 w-4\" />\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n-            </div>\n-            <Badge variant=\"outline\" className=\"capitalize\">\n+        {/* Action footer */}\n+        <CardFooter className={cn(\n+          \"flex justify-between items-center px-5 py-3\",\n+          \"border-t border-border/50 bg-muted/30\"\n+        )}>\n+          <div className=\"flex items-center gap-3\">\n+            <TooltipProvider>\n+              <Tooltip>\n+                <TooltipTrigger asChild>\n+                  <div className=\"flex items-center gap-1 text-muted-foreground\">\n+                    <Clock className=\"h-4 w-4\" />\n+                    <span className=\"text-xs\">{estimatedTime} min</span>\n+                  </div>\n+                </TooltipTrigger>\n+                <TooltipContent side=\"bottom\">\n+                  <p>Estimated time: {estimatedTime} minutes</p>\n+                </TooltipContent>\n+              </Tooltip>\n+            </TooltipProvider>\n+            \n+            <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n               {prompt.type}\n             </Badge>\n           </div>\n-        </CardContent>\n+          \n+          {/* Action buttons */}\n+          <div className=\"flex items-center gap-2\">\n+            {hasNarration && (\n+              <Button variant=\"ghost\" size=\"sm\" onClick={playNarration} className=\"h-8 rounded-full bg-muted/50 hover:bg-primary/10\">\n+                <Volume2 className=\"h-3 w-3 mr-1\" />\n+                <span className=\"text-xs\">Listen</span>\n+              </Button>\n+            )}\n+            \n+            {mediaAvailable && (\n+              <Button variant=\"outline\" size=\"sm\" onClick={displayMedia} className=\"h-8 rounded-full bg-primary/10 text-primary hover:bg-primary/20 border-primary/30\">\n+                <Maximize2 className=\"h-3 w-3 mr-1\" />\n+                <span className=\"text-xs\">Fullscreen</span>\n+              </Button>\n+            )}\n+            \n+            <Button className=\"h-8 rounded-full\" size=\"sm\">\n+              <CheckCircle className=\"h-3 w-3 mr-1\" />\n+              <span className=\"text-xs\">Complete</span>\n+            </Button>\n+          </div>\n+        </CardFooter>\n       </Card>\n     </motion.div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741890345746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,16 @@\n \"use client\";\n \n import React, { useEffect, useState } from \"react\";\n-import { motion, AnimatePresence } from \"framer-motion\";\n+import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n import { \n-  Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, \n-  Maximize2, Play, BookOpen, ChevronDown, ChevronUp, ExternalLink,\n-  CheckCircle, PenLine, Mic \n+  Volume2, MessageCircle, Clock, Video, ImageIcon, \n+  Maximize2, Play, CheckCircle, PenLine, Mic \n } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n-import { ImagePreview } from \"@/components/common/ImagePreview\";\n import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\n \n interface ExercisePromptViewProps {\n   prompt: {\n@@ -35,10 +33,10 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n-  const [expanded, setExpanded] = useState(false);\n   const [mediaHovered, setMediaHovered] = useState(false);\n+  const [isCompleted, setIsCompleted] = useState(false);\n   \n   // Function to dispatch media display event\n   const displayMedia = () => {\n     if (!prompt.media) return;\n@@ -81,45 +79,44 @@\n     \n     document.dispatchEvent(customEvent);\n   };\n \n+  // Function to handle exercise completion\n+  const handleComplete = () => {\n+    setIsCompleted(true);\n+    \n+    // Dispatch event to update lesson progress\n+    const progressEvent = new CustomEvent(\"update-lesson-progress\", {\n+      detail: {\n+        exerciseId: prompt.id,\n+        completed: true\n+      },\n+      bubbles: true,\n+      cancelable: true\n+    });\n+    \n+    document.dispatchEvent(progressEvent);\n+    console.log(\"Exercise marked as completed:\", prompt.id);\n+  };\n+\n   const mediaAvailable = prompt.media && prompt.type;\n   const hasNarration = !!prompt.narration;\n   const hasSayText = !!prompt.saytext;\n   const hasWritingPrompt = !!prompt.content?.writingPrompt;\n   const hasSpeakingPrompt = !!prompt.content?.speakingPrompt;\n   const estimatedTime = prompt.metadata?.estimatedTime || 5;\n   const difficulty = prompt.metadata?.difficulty || 'beginner';\n \n-  // Get icon based on exercise type/content\n-  const getIcon = () => {\n-    if (hasWritingPrompt) return <PenLine className=\"h-5 w-5\" />;\n-    if (hasSpeakingPrompt) return <Mic className=\"h-5 w-5\" />;\n-    if (mediaAvailable) return prompt.type === 'video' ? <Video className=\"h-5 w-5\" /> : <ImageIcon className=\"h-5 w-5\" />;\n-    if (hasNarration) return <Volume2 className=\"h-5 w-5\" />;\n-    return <BookOpen className=\"h-5 w-5\" />;\n-  };\n-\n-  // Get background color based on difficulty\n+  // Get difficulty color for border\n   const getDifficultyColor = () => {\n     switch(difficulty) {\n-      case 'beginner': return 'from-green-500/10 to-green-500/5 border-green-500/20';\n-      case 'intermediate': return 'from-blue-500/10 to-blue-500/5 border-blue-500/20';\n-      case 'advanced': return 'from-red-500/10 to-red-500/5 border-red-500/20';\n-      default: return 'from-primary/10 to-primary/5 border-primary/20';\n+      case 'beginner': return 'border-green-500/20';\n+      case 'intermediate': return 'border-blue-500/20';\n+      case 'advanced': return 'border-red-500/20';\n+      default: return 'border-primary/20';\n     }\n   };\n \n-  // Get difficulty badge color\n-  const getDifficultyBadgeStyle = () => {\n-    switch(difficulty) {\n-      case 'beginner': return 'bg-green-500/10 text-green-600 hover:bg-green-500/20';\n-      case 'intermediate': return 'bg-blue-500/10 text-blue-600 hover:bg-blue-500/20';\n-      case 'advanced': return 'bg-red-500/10 text-red-600 hover:bg-red-500/20';\n-      default: return 'bg-primary/10 text-primary hover:bg-primary/20';\n-    }\n-  };\n-\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n@@ -127,81 +124,27 @@\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n       onMouseEnter={() => {\n         if (prompt && prompt.media) {\n-          console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n     >\n       <Card className={cn(\n-        \"overflow-hidden backdrop-blur-sm transition-all duration-300\",\n-        \"border bg-gradient-to-b from-background to-background/70\",\n-        expanded ? \"shadow-lg\" : \"hover:shadow-md hover:-translate-y-1\",\n-        getDifficultyColor()\n+        \"overflow-hidden backdrop-blur-sm transition-all duration-300 hover:shadow-md hover:-translate-y-1\",\n+        \"border-l-4 bg-card/90\",\n+        isCompleted ? \"border-l-green-500\" : getDifficultyColor()\n       )}>\n-        <CardHeader className=\"relative p-5 pb-3 space-y-1\">\n-          {/* Exercise details header row */}\n-          <div className=\"flex justify-between items-center\">\n-            <div className=\"flex items-center gap-2\">\n-              <div className={cn(\n-                \"flex items-center justify-center w-8 h-8 rounded-full\",\n-                \"bg-primary/10 text-primary\"\n-              )}>\n-                {getIcon()}\n-              </div>\n-              <CardTitle className=\"text-lg font-semibold line-clamp-1\">\n-                {prompt.text || `Exercise ${index + 1}`}\n-              </CardTitle>\n-            </div>\n-            \n-            <div className=\"flex items-center gap-2\">\n-              <TooltipProvider>\n-                <Tooltip>\n-                  <TooltipTrigger asChild>\n-                    <Badge variant=\"outline\" className={cn(\"capitalize\", getDifficultyBadgeStyle())}>\n-                      {difficulty}\n-                    </Badge>\n-                  </TooltipTrigger>\n-                  <TooltipContent>\n-                    <p>{difficulty} level exercise</p>\n-                  </TooltipContent>\n-                </Tooltip>\n-              </TooltipProvider>\n-              \n-              <TooltipProvider>\n-                <Tooltip>\n-                  <TooltipTrigger asChild>\n-                    <Button\n-                      variant=\"ghost\"\n-                      size=\"icon\"\n-                      onClick={() => setExpanded(!expanded)}\n-                      className=\"rounded-full h-8 w-8 text-primary\"\n-                    >\n-                      {expanded ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\n-                    </Button>\n-                  </TooltipTrigger>\n-                  <TooltipContent>\n-                    <p>{expanded ? \"Collapse\" : \"Expand\"} exercise details</p>\n-                  </TooltipContent>\n-                </Tooltip>\n-              </TooltipProvider>\n-            </div>\n-          </div>\n-          \n-          {/* Subtle description row */}\n-          <CardDescription className=\"line-clamp-2 ml-10\">\n-            {prompt.narration ? \n-              prompt.narration.substring(0, 120) + (prompt.narration.length > 120 ? '...' : '') \n-              : 'Complete this exercise to progress in your lesson'}\n-          </CardDescription>\n+        <CardHeader className=\"p-4 pb-3\">\n+          <CardTitle className=\"text-base font-medium line-clamp-1\">\n+            {prompt.text || `Exercise ${index + 1}`}\n+          </CardTitle>\n         </CardHeader>\n \n         {/* Media preview (if available) */}\n         {mediaAvailable && (\n           <div \n-            className=\"relative cursor-pointer overflow-hidden\" \n-            style={{ height: expanded ? '240px' : '160px' }}\n+            className=\"relative cursor-pointer overflow-hidden h-[180px]\" \n             onClick={displayMedia}\n             onMouseEnter={() => setMediaHovered(true)}\n             onMouseLeave={() => setMediaHovered(false)}\n           >\n@@ -209,9 +152,9 @@\n               <div className=\"h-full w-full\">\n                 <img \n                   src={prompt.media || ''} \n                   alt={prompt.text} \n-                  className=\"w-full h-full object-cover transition-transform duration-700\"\n+                  className=\"w-full h-full object-cover transition-transform duration-500\"\n                   style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n                 />\n               </div>\n             )}\n@@ -235,8 +178,12 @@\n             )}>\n               <Button \n                 variant=\"outline\" \n                 size=\"icon\" \n+                onClick={(e) => {\n+                  e.stopPropagation();\n+                  displayMedia();\n+                }}\n                 className=\"bg-white/20 hover:bg-white/40 backdrop-blur-sm border-white/30 text-white rounded-full h-12 w-12 transform transition-transform duration-300\"\n                 style={{ transform: mediaHovered ? 'scale(1.1)' : 'scale(1)' }}\n               >\n                 <Maximize2 className=\"h-5 w-5\" />\n@@ -244,85 +191,60 @@\n             </div>\n           </div>\n         )}\n \n-        {/* Expandable content */}\n-        <AnimatePresence>\n-          {expanded && (\n-            <motion.div\n-              initial={{ opacity: 0, height: 0 }}\n-              animate={{ opacity: 1, height: 'auto' }}\n-              exit={{ opacity: 0, height: 0 }}\n-              transition={{ duration: 0.3 }}\n-            >\n-              <CardContent className=\"p-5 pt-3 space-y-4\">\n-                {/* Narration Section */}\n-                {hasNarration && (\n-                  <div className=\"relative p-4 rounded-lg border border-primary/10 bg-primary/5 hover:bg-primary/10 transition-colors duration-300\">\n-                    <div className=\"flex items-center justify-between mb-2\">\n-                      <div className=\"flex items-center gap-2 text-primary\">\n-                        <Volume2 className=\"h-4 w-4\" />\n-                        <h4 className=\"font-medium\">Narration</h4>\n-                      </div>\n-                      <Button \n-                        variant=\"ghost\" \n-                        size=\"sm\" \n-                        onClick={playNarration}\n-                        className=\"text-primary hover:text-primary/80 hover:bg-primary/10 rounded-full h-7\"\n-                      >\n-                        <Play className=\"h-3 w-3 mr-1\" />\n-                        <span className=\"text-xs\">Play</span>\n-                      </Button>\n-                    </div>\n-                    <div className=\"text-muted-foreground\">{prompt.narration}</div>\n-                  </div>\n-                )}\n+        <CardContent className=\"p-4\">\n+          {/* Narration and Say Text - Compact version */}\n+          <div className=\"space-y-3\">\n+            {/* Narration with Play button */}\n+            {hasNarration && (\n+              <div className=\"flex items-start gap-3\">\n+                <Button \n+                  variant=\"outline\" \n+                  size=\"icon\"\n+                  onClick={playNarration}\n+                  className=\"rounded-full h-8 w-8 mt-0.5 flex-shrink-0 bg-primary/5 border-primary/20 text-primary hover:bg-primary/10\"\n+                >\n+                  <Volume2 className=\"h-4 w-4\" />\n+                </Button>\n+                <div className=\"text-sm text-muted-foreground line-clamp-2\">\n+                  {prompt.narration}\n+                </div>\n+              </div>\n+            )}\n+            \n+            {/* Say Text */}\n+            {hasSayText && (\n+              <div className=\"flex items-start gap-3\">\n+                <div className=\"rounded-full h-8 w-8 mt-0.5 flex-shrink-0 bg-blue-500/5 border border-blue-500/20 flex items-center justify-center\">\n+                  <MessageCircle className=\"h-4 w-4 text-blue-600\" />\n+                </div>\n+                <div className=\"text-sm font-medium\">\n+                  {prompt.saytext}\n+                </div>\n+              </div>\n+            )}\n+            \n+            {/* Writing or Speaking Prompt - Compact */}\n+            {(hasWritingPrompt || hasSpeakingPrompt) && (\n+              <div className=\"flex items-start gap-3\">\n+                <div className=\"rounded-full h-8 w-8 mt-0.5 flex-shrink-0 bg-amber-500/5 border border-amber-500/20 flex items-center justify-center\">\n+                  {hasWritingPrompt ? \n+                    <PenLine className=\"h-4 w-4 text-amber-600\" /> : \n+                    <Mic className=\"h-4 w-4 text-amber-600\" />\n+                  }\n+                </div>\n+                <div className=\"text-sm\">\n+                  {hasWritingPrompt ? prompt.content?.writingPrompt : prompt.content?.speakingPrompt}\n+                </div>\n+              </div>\n+            )}\n+          </div>\n+        </CardContent>\n \n-                {/* Say Text Section */}\n-                {hasSayText && (\n-                  <div className=\"relative p-4 rounded-lg border border-blue-500/10 bg-blue-500/5 hover:bg-blue-500/10 transition-colors duration-300\">\n-                    <div className=\"flex items-center gap-2 mb-2 text-blue-600\">\n-                      <MessageCircle className=\"h-4 w-4\" />\n-                      <h4 className=\"font-medium\">Say This</h4>\n-                    </div>\n-                    <p className=\"text-foreground font-medium text-lg\">{prompt.saytext}</p>\n-                  </div>\n-                )}\n-\n-                {/* Prompts Grid */}\n-                {(hasWritingPrompt || hasSpeakingPrompt) && (\n-                  <div className=\"grid gap-4 md:grid-cols-2\">\n-                    {hasWritingPrompt && (\n-                      <div className=\"p-4 rounded-lg border border-green-500/20 bg-green-500/5 hover:bg-green-500/10 transition-colors duration-300\">\n-                        <div className=\"flex items-center gap-2 mb-2 text-green-600\">\n-                          <PenLine className=\"h-4 w-4\" />\n-                          <h4 className=\"font-medium\">Writing Prompt</h4>\n-                        </div>\n-                        <p className=\"text-muted-foreground\">{prompt.content?.writingPrompt}</p>\n-                      </div>\n-                    )}\n-                    \n-                    {hasSpeakingPrompt && (\n-                      <div className=\"p-4 rounded-lg border border-amber-500/20 bg-amber-500/5 hover:bg-amber-500/10 transition-colors duration-300\">\n-                        <div className=\"flex items-center gap-2 mb-2 text-amber-600\">\n-                          <Mic className=\"h-4 w-4\" />\n-                          <h4 className=\"font-medium\">Speaking Prompt</h4>\n-                        </div>\n-                        <p className=\"text-muted-foreground\">{prompt.content?.speakingPrompt}</p>\n-                      </div>\n-                    )}\n-                  </div>\n-                )}\n-              </CardContent>\n-            </motion.div>\n-          )}\n-        </AnimatePresence>\n-\n         {/* Action footer */}\n-        <CardFooter className={cn(\n-          \"flex justify-between items-center px-5 py-3\",\n-          \"border-t border-border/50 bg-muted/30\"\n-        )}>\n+        <CardFooter className=\"flex justify-between items-center px-4 py-3 border-t border-border/30 bg-muted/20\">\n+          {/* Metadata */}\n           <div className=\"flex items-center gap-3\">\n             <TooltipProvider>\n               <Tooltip>\n                 <TooltipTrigger asChild>\n@@ -336,32 +258,53 @@\n                 </TooltipContent>\n               </Tooltip>\n             </TooltipProvider>\n             \n-            <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n+            <Badge variant=\"outline\" className=\"capitalize text-xs bg-background/50\">\n               {prompt.type}\n             </Badge>\n           </div>\n           \n           {/* Action buttons */}\n           <div className=\"flex items-center gap-2\">\n+            {/* Listen button (if narration available) */}\n             {hasNarration && (\n-              <Button variant=\"ghost\" size=\"sm\" onClick={playNarration} className=\"h-8 rounded-full bg-muted/50 hover:bg-primary/10\">\n-                <Volume2 className=\"h-3 w-3 mr-1\" />\n+              <Button \n+                variant=\"ghost\" \n+                size=\"sm\" \n+                onClick={playNarration} \n+                className=\"h-8 rounded-full\"\n+              >\n+                <Play className=\"h-3 w-3 mr-1\" />\n                 <span className=\"text-xs\">Listen</span>\n               </Button>\n             )}\n             \n+            {/* View button (if media available) */}\n             {mediaAvailable && (\n-              <Button variant=\"outline\" size=\"sm\" onClick={displayMedia} className=\"h-8 rounded-full bg-primary/10 text-primary hover:bg-primary/20 border-primary/30\">\n+              <Button \n+                variant=\"outline\" \n+                size=\"sm\" \n+                onClick={displayMedia} \n+                className=\"h-8 rounded-full\"\n+              >\n                 <Maximize2 className=\"h-3 w-3 mr-1\" />\n-                <span className=\"text-xs\">Fullscreen</span>\n+                <span className=\"text-xs\">View</span>\n               </Button>\n             )}\n             \n-            <Button className=\"h-8 rounded-full\" size=\"sm\">\n+            {/* Complete button */}\n+            <Button \n+              className={cn(\n+                \"h-8 rounded-full\", \n+                isCompleted ? \"bg-green-500 hover:bg-green-600\" : \"\"\n+              )} \n+              size=\"sm\"\n+              onClick={handleComplete}\n+              disabled={isCompleted}\n+            >\n               <CheckCircle className=\"h-3 w-3 mr-1\" />\n-              <span className=\"text-xs\">Complete</span>\n+              <span className=\"text-xs\">{isCompleted ? \"Completed\" : \"Complete\"}</span>\n             </Button>\n           </div>\n         </CardFooter>\n       </Card>\n"
                },
                {
                    "date": 1741890468538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,14 @@\n \"use client\";\n \n-import React, { useEffect, useState } from \"react\";\n+import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\n+import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { \n-  Volume2, MessageCircle, Clock, Video, ImageIcon, \n-  Maximize2, Play, CheckCircle, PenLine, Mic \n-} from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n-import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\n+import { ImagePreview } from \"@/components/common/ImagePreview\";\n \n interface ExercisePromptViewProps {\n   prompt: {\n     id: string;\n@@ -33,87 +30,65 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n-  const [mediaHovered, setMediaHovered] = useState(false);\n-  const [isCompleted, setIsCompleted] = useState(false);\n-  \n   // Function to dispatch media display event\n   const displayMedia = () => {\n-    if (!prompt.media) return;\n+    if (!prompt || !prompt.media) {\n+      console.log(\"No media available for this prompt\");\n+      return;\n+    }\n     \n-    const detail = {\n-      sourceId: prompt.id,\n-      type: prompt.type,\n-      url: prompt.media,\n-      title: prompt.text,\n-      isPermanent: true\n-    };\n-    \n-    const customEvent = new CustomEvent(\"media-display\", { \n-      detail,\n-      bubbles: true,\n-      cancelable: true\n-    });\n-    \n-    document.dispatchEvent(customEvent);\n-    console.log(\"Media display event dispatched:\", detail);\n-  };\n-  \n-  // Function to dispatch audio play event for narration\n-  const playNarration = (e: React.MouseEvent) => {\n-    e.stopPropagation();\n-    if (!prompt.narration) return;\n-    \n-    const customEvent = new CustomEvent(\"text-to-speech\", { \n-      detail: {\n-        text: prompt.narration,\n-        lang: 'en-US',\n-        rate: 1.0,\n-        pitch: 1.0,\n-        volume: 1.0,\n-        sourceId: prompt.id\n-      },\n-      bubbles: true,\n-      cancelable: true\n-    });\n-    \n-    document.dispatchEvent(customEvent);\n-  };\n+    try {\n+      // Generate a unique identifier to ensure media updates\n+      const timestamp = new Date().getTime();\n+      \n+      // Check if URL is from external domains that need special handling\n+      const isExternalDomain = \n+        typeof prompt.media === 'string' && \n+        (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n+      \n+      // Add a timestamp parameter to force media refresh\n+      let mediaUrl = prompt.media;\n+      if (mediaUrl.includes('?')) {\n+        mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n+      } else {\n+        mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n+      }\n+      \n+      // Create a persistent media object\n+      const persistentMedia = {\n+        mediaUrl,\n+        mediaType: prompt.type || 'image',\n+        mediaTitle: prompt.text || 'Exercise Media',\n+        sourceId: prompt.id || 'unknown',\n+        isExternalDomain,\n+        isPermanent: true,\n+        timestamp\n+      };\n+      \n+      // Log the event details\n+      console.log(\"Dispatching displayMediaInRightPanel event:\", persistentMedia);\n+      \n+      // Store the selected media in localStorage to ensure it persists\n+      try {\n+        localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n+      } catch (e) {\n+        console.warn(\"Failed to store media in localStorage:\", e);\n+      }\n \n-  // Function to handle exercise completion\n-  const handleComplete = () => {\n-    setIsCompleted(true);\n-    \n-    // Dispatch event to update lesson progress\n-    const progressEvent = new CustomEvent(\"update-lesson-progress\", {\n-      detail: {\n-        exerciseId: prompt.id,\n-        completed: true\n-      },\n-      bubbles: true,\n-      cancelable: true\n-    });\n-    \n-    document.dispatchEvent(progressEvent);\n-    console.log(\"Exercise marked as completed:\", prompt.id);\n-  };\n-\n-  const mediaAvailable = prompt.media && prompt.type;\n-  const hasNarration = !!prompt.narration;\n-  const hasSayText = !!prompt.saytext;\n-  const hasWritingPrompt = !!prompt.content?.writingPrompt;\n-  const hasSpeakingPrompt = !!prompt.content?.speakingPrompt;\n-  const estimatedTime = prompt.metadata?.estimatedTime || 5;\n-  const difficulty = prompt.metadata?.difficulty || 'beginner';\n-\n-  // Get difficulty color for border\n-  const getDifficultyColor = () => {\n-    switch(difficulty) {\n-      case 'beginner': return 'border-green-500/20';\n-      case 'intermediate': return 'border-blue-500/20';\n-      case 'advanced': return 'border-red-500/20';\n-      default: return 'border-primary/20';\n+      // Create a properly typed custom event with the correct detail structure\n+      const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n+        bubbles: true,\n+        composed: true,\n+        detail: persistentMedia\n+      });\n+      \n+      // Dispatch on both document and window to ensure it's captured\n+      document.dispatchEvent(mediaEvent);\n+      window.dispatchEvent(mediaEvent);\n+    } catch (err) {\n+      console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n   return (\n@@ -124,190 +99,189 @@\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n       onMouseEnter={() => {\n         if (prompt && prompt.media) {\n+          console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n+      onClick={() => {\n+        if (prompt && prompt.media) {\n+          console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n+          displayMedia();\n+        }\n+      }}\n     >\n-      <Card className={cn(\n-        \"overflow-hidden backdrop-blur-sm transition-all duration-300 hover:shadow-md hover:-translate-y-1\",\n-        \"border-l-4 bg-card/90\",\n-        isCompleted ? \"border-l-green-500\" : getDifficultyColor()\n-      )}>\n-        <CardHeader className=\"p-4 pb-3\">\n-          <CardTitle className=\"text-base font-medium line-clamp-1\">\n-            {prompt.text || `Exercise ${index + 1}`}\n-          </CardTitle>\n-        </CardHeader>\n-\n-        {/* Media preview (if available) */}\n-        {mediaAvailable && (\n-          <div \n-            className=\"relative cursor-pointer overflow-hidden h-[180px]\" \n-            onClick={displayMedia}\n-            onMouseEnter={() => setMediaHovered(true)}\n-            onMouseLeave={() => setMediaHovered(false)}\n-          >\n-            {prompt.type === 'image' && (\n-              <div className=\"h-full w-full\">\n-                <img \n-                  src={prompt.media || ''} \n-                  alt={prompt.text} \n-                  className=\"w-full h-full object-cover transition-transform duration-500\"\n-                  style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n-                />\n-              </div>\n-            )}\n-            \n-            {prompt.type === 'video' && (\n-              <div className=\"h-full w-full\">\n-                <video\n-                  src={prompt.media || ''}\n-                  className=\"w-full h-full object-cover\"\n-                  preload=\"metadata\"\n-                />\n-              </div>\n-            )}\n-            \n-            {/* Media overlay with play/expand button */}\n-            <div className={cn(\n-              \"absolute inset-0 bg-gradient-to-t from-black/60 via-black/30 to-transparent\",\n-              \"flex items-center justify-center\",\n-              \"transition-opacity duration-300\",\n-              mediaHovered ? \"opacity-100\" : \"opacity-0\"\n-            )}>\n-              <Button \n+      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n+        <CardHeader className=\"relative overflow-hidden\">\n+          {/* Floating badge with shine effect */}\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n+            <Badge \n+              variant=\"outline\" \n+              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n+            >\n+              Exercise {index + 1}\n+            </Badge>\n+            {prompt.metadata?.difficulty && (\n+              <Badge \n                 variant=\"outline\" \n-                size=\"icon\" \n-                onClick={(e) => {\n-                  e.stopPropagation();\n-                  displayMedia();\n-                }}\n-                className=\"bg-white/20 hover:bg-white/40 backdrop-blur-sm border-white/30 text-white rounded-full h-12 w-12 transform transition-transform duration-300\"\n-                style={{ transform: mediaHovered ? 'scale(1.1)' : 'scale(1)' }}\n+                className={cn(\n+                  \"capitalize bg-background/80 backdrop-blur-sm\",\n+                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n+                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n+                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n+                )}\n               >\n-                <Maximize2 className=\"h-5 w-5\" />\n-              </Button>\n-            </div>\n+                {prompt.metadata.difficulty}\n+              </Badge>\n+            )}\n           </div>\n-        )}\n \n-        <CardContent className=\"p-4\">\n-          {/* Narration and Say Text - Compact version */}\n-          <div className=\"space-y-3\">\n-            {/* Narration with Play button */}\n-            {hasNarration && (\n-              <div className=\"flex items-start gap-3\">\n-                <Button \n-                  variant=\"outline\" \n-                  size=\"icon\"\n-                  onClick={playNarration}\n-                  className=\"rounded-full h-8 w-8 mt-0.5 flex-shrink-0 bg-primary/5 border-primary/20 text-primary hover:bg-primary/10\"\n-                >\n-                  <Volume2 className=\"h-4 w-4\" />\n-                </Button>\n-                <div className=\"text-sm text-muted-foreground line-clamp-2\">\n-                  {prompt.narration}\n+          {/* Media Section */}\n+          {prompt.media && (\n+            <div \n+              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n+              onClick={(e) => {\n+                e.stopPropagation(); // Prevent double triggering with parent onClick\n+                \n+                // First, display the media immediately\n+                displayMedia();\n+                \n+                // Then, schedule another update after a short delay to ensure it sticks\n+                // This helps overcome any race conditions that might reset the image\n+                setTimeout(() => {\n+                  console.log(\"Resending media display event after delay to ensure it sticks\");\n+                  displayMedia();\n+                }, 200);\n+              }}\n+            >\n+              {prompt.type === 'image' && (\n+                <div className=\"relative h-[200px] overflow-hidden\">\n+                  <ImagePreview\n+                    imageUrl={prompt.media}\n+                    alt={prompt.text}\n+                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n+                    priority={false}\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n                 </div>\n-              </div>\n+              )}\n+              {prompt.type === 'video' && (\n+                <div className=\"relative h-[200px]\">\n+                  <video\n+                    src={prompt.media}\n+                    className=\"w-full h-full object-cover\"\n+                    preload=\"metadata\"\n+                    onClick={(e: React.MouseEvent) => {\n+                      e.stopPropagation();\n+                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                      if (videoEl) {\n+                        videoEl.controls = true;\n+                        videoEl.play();\n+                      }\n+                    }}\n+                  />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                      <Maximize2 className=\"h-6 w-6 text-white\" />\n+                    </div>\n+                  </div>\n+                  {/* Adding controls button separately for better UI */}\n+                  <div className=\"absolute bottom-2 right-2\">\n+                    <Button \n+                      variant=\"ghost\" \n+                      size=\"sm\" \n+                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      onClick={(e: React.MouseEvent) => {\n+                        e.stopPropagation();\n+                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                        if (videoEl) {\n+                          videoEl.controls = true;\n+                          videoEl.play();\n+                        }\n+                      }}\n+                    >\n+                      <Play className=\"h-4 w-4 mr-1\" />\n+                      Play\n+                    </Button>\n+                  </div>\n+                </div>\n+              )}\n+            </div>\n+          )}\n+\n+          {/* Title and Description */}\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n+            <CardTitle className=\"text-lg font-semibold leading-tight\">\n+              {prompt.text}\n+            </CardTitle>\n+            {prompt.content?.instructions && (\n+              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4\" />\n+                {prompt.content.instructions}\n+              </CardDescription>\n             )}\n-            \n-            {/* Say Text */}\n-            {hasSayText && (\n-              <div className=\"flex items-start gap-3\">\n-                <div className=\"rounded-full h-8 w-8 mt-0.5 flex-shrink-0 bg-blue-500/5 border border-blue-500/20 flex items-center justify-center\">\n-                  <MessageCircle className=\"h-4 w-4 text-blue-600\" />\n-                </div>\n-                <div className=\"text-sm font-medium\">\n-                  {prompt.saytext}\n-                </div>\n+          </div>\n+        </CardHeader>\n+\n+        <CardContent className=\"space-y-4\">\n+          {/* Narration Section */}\n+          {prompt.narration && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Narration:</h4>\n               </div>\n-            )}\n-            \n-            {/* Writing or Speaking Prompt - Compact */}\n-            {(hasWritingPrompt || hasSpeakingPrompt) && (\n-              <div className=\"flex items-start gap-3\">\n-                <div className=\"rounded-full h-8 w-8 mt-0.5 flex-shrink-0 bg-amber-500/5 border border-amber-500/20 flex items-center justify-center\">\n-                  {hasWritingPrompt ? \n-                    <PenLine className=\"h-4 w-4 text-amber-600\" /> : \n-                    <Mic className=\"h-4 w-4 text-amber-600\" />\n-                  }\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+            </div>\n+          )}\n+\n+          {/* Say Text Section */}\n+          {prompt.saytext && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <MessageCircle className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Say Text</h4>\n+              </div>\n+              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n+            </div>\n+          )}\n+\n+          {/* Writing/Speaking Prompts */}\n+          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n+            <div className=\"grid gap-4\">\n+              {prompt.content.writingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n                 </div>\n-                <div className=\"text-sm\">\n-                  {hasWritingPrompt ? prompt.content?.writingPrompt : prompt.content?.speakingPrompt}\n+              )}\n+              {prompt.content.speakingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n                 </div>\n-              </div>\n-            )}\n-          </div>\n-        </CardContent>\n+              )}\n+            </div>\n+          )}\n \n-        {/* Action footer */}\n-        <CardFooter className=\"flex justify-between items-center px-4 py-3 border-t border-border/30 bg-muted/20\">\n-          {/* Metadata */}\n-          <div className=\"flex items-center gap-3\">\n-            <TooltipProvider>\n-              <Tooltip>\n-                <TooltipTrigger asChild>\n-                  <div className=\"flex items-center gap-1 text-muted-foreground\">\n-                    <Clock className=\"h-4 w-4\" />\n-                    <span className=\"text-xs\">{estimatedTime} min</span>\n-                  </div>\n-                </TooltipTrigger>\n-                <TooltipContent side=\"bottom\">\n-                  <p>Estimated time: {estimatedTime} minutes</p>\n-                </TooltipContent>\n-              </Tooltip>\n-            </TooltipProvider>\n-            \n-            <Badge variant=\"outline\" className=\"capitalize text-xs bg-background/50\">\n+          {/* Metadata Footer */}\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n+            <div className=\"flex items-center gap-2\">\n+              <Clock className=\"h-4 w-4\" />\n+              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n+            </div>\n+            <Badge variant=\"outline\" className=\"capitalize\">\n               {prompt.type}\n             </Badge>\n           </div>\n-          \n-          {/* Action buttons */}\n-          <div className=\"flex items-center gap-2\">\n-            {/* Listen button (if narration available) */}\n-            {hasNarration && (\n-              <Button \n-                variant=\"ghost\" \n-                size=\"sm\" \n-                onClick={playNarration} \n-                className=\"h-8 rounded-full\"\n-              >\n-                <Play className=\"h-3 w-3 mr-1\" />\n-                <span className=\"text-xs\">Listen</span>\n-              </Button>\n-            )}\n-            \n-            {/* View button (if media available) */}\n-            {mediaAvailable && (\n-              <Button \n-                variant=\"outline\" \n-                size=\"sm\" \n-                onClick={displayMedia} \n-                className=\"h-8 rounded-full\"\n-              >\n-                <Maximize2 className=\"h-3 w-3 mr-1\" />\n-                <span className=\"text-xs\">View</span>\n-              </Button>\n-            )}\n-            \n-            {/* Complete button */}\n-            <Button \n-              className={cn(\n-                \"h-8 rounded-full\", \n-                isCompleted ? \"bg-green-500 hover:bg-green-600\" : \"\"\n-              )} \n-              size=\"sm\"\n-              onClick={handleComplete}\n-              disabled={isCompleted}\n-            >\n-              <CheckCircle className=\"h-3 w-3 mr-1\" />\n-              <span className=\"text-xs\">{isCompleted ? \"Completed\" : \"Complete\"}</span>\n-            </Button>\n-          </div>\n-        </CardFooter>\n+        </CardContent>\n       </Card>\n     </motion.div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741891266931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,8 +90,22 @@\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n+  // Get difficulty color classes\n+  const getDifficultyClasses = (difficulty?: string) => {\n+    switch(difficulty) {\n+      case 'beginner':\n+        return \"text-emerald-500 border-emerald-500/30 bg-emerald-500/10\";\n+      case 'intermediate':\n+        return \"text-amber-500 border-amber-500/30 bg-amber-500/10\";\n+      case 'advanced':\n+        return \"text-rose-500 border-rose-500/30 bg-rose-500/10\";\n+      default:\n+        return \"text-primary border-primary/30\";\n+    }\n+  };\n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n@@ -110,69 +124,58 @@\n           displayMedia();\n         }\n       }}\n     >\n-      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden\">\n-          {/* Floating badge with shine effect */}\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n-            <Badge \n-              variant=\"outline\" \n-              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n-            >\n-              Exercise {index + 1}\n-            </Badge>\n-            {prompt.metadata?.difficulty && (\n-              <Badge \n-                variant=\"outline\" \n-                className={cn(\n-                  \"capitalize bg-background/80 backdrop-blur-sm\",\n-                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n-                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n-                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n-                )}\n-              >\n-                {prompt.metadata.difficulty}\n-              </Badge>\n-            )}\n-          </div>\n-\n-          {/* Media Section */}\n+      <Card className=\"overflow-hidden border border-primary/10 bg-card/50 backdrop-blur-sm shadow-sm hover:shadow-lg transition-all duration-300 hover:-translate-y-1 group-hover:border-primary/25\">\n+        {/* Header Section with Media and Badges */}\n+        <CardHeader className=\"relative p-0 overflow-hidden\">\n+          {/* Media Section with improved overlay and interaction */}\n           {prompt.media && (\n             <div \n-              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n+              className=\"relative overflow-hidden group/media cursor-pointer\"\n               onClick={(e) => {\n                 e.stopPropagation(); // Prevent double triggering with parent onClick\n                 \n                 // First, display the media immediately\n                 displayMedia();\n                 \n                 // Then, schedule another update after a short delay to ensure it sticks\n-                // This helps overcome any race conditions that might reset the image\n                 setTimeout(() => {\n                   console.log(\"Resending media display event after delay to ensure it sticks\");\n                   displayMedia();\n                 }, 200);\n               }}\n             >\n               {prompt.type === 'image' && (\n-                <div className=\"relative h-[200px] overflow-hidden\">\n+                <div className=\"relative h-[220px] overflow-hidden\">\n                   <ImagePreview\n                     imageUrl={prompt.media}\n                     alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n+                    className=\"w-full h-full object-cover transition-transform duration-700 scale-105 group-hover/media:scale-110\"\n                     priority={false}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                  {/* Enhanced overlay with gradient */}\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-70 group-hover/media:opacity-80 transition-opacity duration-500\" />\n+                  \n+                  {/* Fullscreen button */}\n+                  <motion.div \n+                    className=\"absolute inset-0 flex items-center justify-center\"\n+                    initial={{ opacity: 0 }}\n+                    whileHover={{ opacity: 1 }}\n+                    transition={{ duration: 0.3 }}\n+                  >\n+                    <motion.div \n+                      className=\"rounded-full bg-primary/30 backdrop-blur-md p-3 hover:bg-primary/50 transition-colors duration-300\"\n+                      whileHover={{ scale: 1.1 }}\n+                      whileTap={{ scale: 0.95 }}\n+                    >\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n-                  </div>\n+                    </motion.div>\n+                  </motion.div>\n                 </div>\n               )}\n               {prompt.type === 'video' && (\n-                <div className=\"relative h-[200px]\">\n+                <div className=\"relative h-[220px]\">\n                   <video\n                     src={prompt.media}\n                     className=\"w-full h-full object-cover\"\n                     preload=\"metadata\"\n@@ -184,20 +187,32 @@\n                         videoEl.play();\n                       }\n                     }}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-70 group-hover/media:opacity-80 transition-opacity duration-500\" />\n+                  \n+                  {/* Fullscreen button */}\n+                  <motion.div \n+                    className=\"absolute inset-0 flex items-center justify-center\"\n+                    initial={{ opacity: 0 }}\n+                    whileHover={{ opacity: 1 }}\n+                    transition={{ duration: 0.3 }}\n+                  >\n+                    <motion.div \n+                      className=\"rounded-full bg-primary/30 backdrop-blur-md p-3 hover:bg-primary/50 transition-colors duration-300\"\n+                      whileHover={{ scale: 1.1 }}\n+                      whileTap={{ scale: 0.95 }}\n+                    >\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n-                  </div>\n-                  {/* Adding controls button separately for better UI */}\n-                  <div className=\"absolute bottom-2 right-2\">\n+                    </motion.div>\n+                  </motion.div>\n+                  \n+                  {/* Play button with improved styling */}\n+                  <div className=\"absolute bottom-4 right-4\">\n                     <Button \n-                      variant=\"ghost\" \n+                      variant=\"secondary\" \n                       size=\"sm\" \n-                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      className=\"bg-black/40 backdrop-blur-md hover:bg-black/60 text-white shadow-md\"\n                       onClick={(e: React.MouseEvent) => {\n                         e.stopPropagation();\n                         const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n                         if (videoEl) {\n@@ -205,82 +220,146 @@\n                           videoEl.play();\n                         }\n                       }}\n                     >\n-                      <Play className=\"h-4 w-4 mr-1\" />\n-                      Play\n+                      <Play className=\"h-3.5 w-3.5 mr-1.5\" />\n+                      Play Video\n                     </Button>\n                   </div>\n                 </div>\n               )}\n+              \n+              {/* Floating badges with improved positioning and styling */}\n+              <div className=\"absolute top-4 left-4 z-10 flex flex-wrap gap-2 max-w-[calc(100%-2rem)]\">\n+                <Badge \n+                  variant=\"outline\" \n+                  className=\"bg-black/50 backdrop-blur-sm border-white/20 text-white shadow-sm\"\n+                >\n+                  Exercise {index + 1}\n+                </Badge>\n+                {prompt.metadata?.difficulty && (\n+                  <Badge \n+                    variant=\"outline\" \n+                    className={cn(\n+                      \"capitalize backdrop-blur-sm shadow-sm\",\n+                      getDifficultyClasses(prompt.metadata.difficulty)\n+                    )}\n+                  >\n+                    {prompt.metadata.difficulty}\n+                  </Badge>\n+                )}\n+                {prompt.metadata?.estimatedTime && (\n+                  <Badge \n+                    variant=\"outline\" \n+                    className=\"bg-black/50 backdrop-blur-sm border-white/20 text-white shadow-sm\"\n+                  >\n+                    <Clock className=\"h-3 w-3 mr-1\" />\n+                    {prompt.metadata.estimatedTime} mins\n+                  </Badge>\n+                )}\n+              </div>\n             </div>\n           )}\n \n-          {/* Title and Description */}\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\n+          {/* Title and Description - moved to separate section for better organization */}\n+          <div className={cn(\n+            \"px-6 py-5 space-y-3\",\n+            prompt.media ? \"mt-0 relative\" : \"\"\n+          )}>\n+            <CardTitle className={cn(\n+              \"text-xl font-semibold leading-tight\",\n+              prompt.media ? \"text-white absolute bottom-12 left-0 right-0 px-6\" : \"\"\n+            )}>\n               {prompt.text}\n             </CardTitle>\n-            {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4\" />\n-                {prompt.content.instructions}\n+            {prompt.content?.instructions && !prompt.media && (\n+              <CardDescription className=\"flex items-start gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4 mt-1 flex-shrink-0\" />\n+                <span>{prompt.content.instructions}</span>\n               </CardDescription>\n             )}\n           </div>\n         </CardHeader>\n \n-        <CardContent className=\"space-y-4\">\n-          {/* Narration Section */}\n-          {prompt.narration && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Narration:</h4>\n-              </div>\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+        {/* Content Section with improved layout */}\n+        <CardContent className=\"space-y-5 px-6 pb-6\">\n+          {/* Instructions - when media exists */}\n+          {prompt.content?.instructions && prompt.media && (\n+            <div className=\"flex items-start gap-2 text-primary/80 -mt-2 mb-3\">\n+              <Lightbulb className=\"h-4 w-4 mt-1 flex-shrink-0\" />\n+              <span className=\"text-sm\">{prompt.content.instructions}</span>\n             </div>\n           )}\n \n-          {/* Say Text Section */}\n-          {prompt.saytext && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <MessageCircle className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Say Text</h4>\n+          {/* Activity Sections with consistent styling */}\n+          <div className=\"space-y-4\">\n+            {/* Narration Section */}\n+            {prompt.narration && (\n+              <motion.div \n+                className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n+                whileHover={{ y: -2 }}\n+              >\n+                <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                  <Volume2 className=\"h-4 w-4\" />\n+                  <h4 className=\"font-medium\">Narration</h4>\n+                </div>\n+                <div className=\"text-muted-foreground leading-relaxed\">{prompt.narration}</div>\n+              </motion.div>\n+            )}\n+\n+            {/* Say Text Section */}\n+            {prompt.saytext && (\n+              <motion.div \n+                className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n+                whileHover={{ y: -2 }}\n+              >\n+                <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                  <MessageCircle className=\"h-4 w-4\" />\n+                  <h4 className=\"font-medium\">Say This</h4>\n+                </div>\n+                <p className=\"text-muted-foreground leading-relaxed\">{prompt.saytext}</p>\n+              </motion.div>\n+            )}\n+\n+            {/* Improved Writing/Speaking Prompts with consistent styling */}\n+            {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n+              <div className=\"grid gap-4\">\n+                {prompt.content.writingPrompt && (\n+                  <motion.div \n+                    className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n+                    whileHover={{ y: -2 }}\n+                  >\n+                    <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                      <ImageIcon className=\"h-4 w-4\" />\n+                      <h4 className=\"font-medium\">Writing Prompt</h4>\n+                    </div>\n+                    <p className=\"text-muted-foreground leading-relaxed\">{prompt.content.writingPrompt}</p>\n+                  </motion.div>\n+                )}\n+                {prompt.content.speakingPrompt && (\n+                  <motion.div \n+                    className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n+                    whileHover={{ y: -2 }}\n+                  >\n+                    <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                      <Volume2 className=\"h-4 w-4\" />\n+                      <h4 className=\"font-medium\">Speaking Prompt</h4>\n+                    </div>\n+                    <p className=\"text-muted-foreground leading-relaxed\">{prompt.content.speakingPrompt}</p>\n+                  </motion.div>\n+                )}\n               </div>\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n-            </div>\n-          )}\n+            )}\n+          </div>\n \n-          {/* Writing/Speaking Prompts */}\n-          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n-            <div className=\"grid gap-4\">\n-              {prompt.content.writingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n-                </div>\n-              )}\n-              {prompt.content.speakingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n-                </div>\n-              )}\n+          {/* Metadata Footer with improved styling */}\n+          {!prompt.metadata?.estimatedTime && (\n+            <div className=\"flex items-center justify-end text-sm text-muted-foreground pt-2\">\n+              <Badge variant=\"outline\" className=\"capitalize\">\n+                {prompt.type || 'exercise'}\n+              </Badge>\n             </div>\n           )}\n-\n-          {/* Metadata Footer */}\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n-            <div className=\"flex items-center gap-2\">\n-              <Clock className=\"h-4 w-4\" />\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n-            </div>\n-            <Badge variant=\"outline\" className=\"capitalize\">\n-              {prompt.type}\n-            </Badge>\n-          </div>\n         </CardContent>\n       </Card>\n     </motion.div>\n   );\n"
                },
                {
                    "date": 1741891550862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,22 +90,8 @@\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n-  // Get difficulty color classes\n-  const getDifficultyClasses = (difficulty?: string) => {\n-    switch(difficulty) {\n-      case 'beginner':\n-        return \"text-emerald-500 border-emerald-500/30 bg-emerald-500/10\";\n-      case 'intermediate':\n-        return \"text-amber-500 border-amber-500/30 bg-amber-500/10\";\n-      case 'advanced':\n-        return \"text-rose-500 border-rose-500/30 bg-rose-500/10\";\n-      default:\n-        return \"text-primary border-primary/30\";\n-    }\n-  };\n-\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n@@ -124,58 +110,69 @@\n           displayMedia();\n         }\n       }}\n     >\n-      <Card className=\"overflow-hidden border border-primary/10 bg-card/50 backdrop-blur-sm shadow-sm hover:shadow-lg transition-all duration-300 hover:-translate-y-1 group-hover:border-primary/25\">\n-        {/* Header Section with Media and Badges */}\n-        <CardHeader className=\"relative p-0 overflow-hidden\">\n-          {/* Media Section with improved overlay and interaction */}\n+      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n+        <CardHeader className=\"relative overflow-hidden\">\n+          {/* Floating badge with shine effect */}\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n+            <Badge \n+              variant=\"outline\" \n+              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n+            >\n+              Exercise {index + 1}\n+            </Badge>\n+            {prompt.metadata?.difficulty && (\n+              <Badge \n+                variant=\"outline\" \n+                className={cn(\n+                  \"capitalize bg-background/80 backdrop-blur-sm\",\n+                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n+                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n+                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n+                )}\n+              >\n+                {prompt.metadata.difficulty}\n+              </Badge>\n+            )}\n+          </div>\n+\n+          {/* Media Section */}\n           {prompt.media && (\n             <div \n-              className=\"relative overflow-hidden group/media cursor-pointer\"\n+              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n               onClick={(e) => {\n                 e.stopPropagation(); // Prevent double triggering with parent onClick\n                 \n                 // First, display the media immediately\n                 displayMedia();\n                 \n                 // Then, schedule another update after a short delay to ensure it sticks\n+                // This helps overcome any race conditions that might reset the image\n                 setTimeout(() => {\n                   console.log(\"Resending media display event after delay to ensure it sticks\");\n                   displayMedia();\n                 }, 200);\n               }}\n             >\n               {prompt.type === 'image' && (\n-                <div className=\"relative h-[220px] overflow-hidden\">\n+                <div className=\"relative h-[200px] overflow-hidden\">\n                   <ImagePreview\n                     imageUrl={prompt.media}\n                     alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-700 scale-105 group-hover/media:scale-110\"\n+                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n                     priority={false}\n                   />\n-                  {/* Enhanced overlay with gradient */}\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-70 group-hover/media:opacity-80 transition-opacity duration-500\" />\n-                  \n-                  {/* Fullscreen button */}\n-                  <motion.div \n-                    className=\"absolute inset-0 flex items-center justify-center\"\n-                    initial={{ opacity: 0 }}\n-                    whileHover={{ opacity: 1 }}\n-                    transition={{ duration: 0.3 }}\n-                  >\n-                    <motion.div \n-                      className=\"rounded-full bg-primary/30 backdrop-blur-md p-3 hover:bg-primary/50 transition-colors duration-300\"\n-                      whileHover={{ scale: 1.1 }}\n-                      whileTap={{ scale: 0.95 }}\n-                    >\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </motion.div>\n-                  </motion.div>\n+                    </div>\n+                  </div>\n                 </div>\n               )}\n               {prompt.type === 'video' && (\n-                <div className=\"relative h-[220px]\">\n+                <div className=\"relative h-[200px]\">\n                   <video\n                     src={prompt.media}\n                     className=\"w-full h-full object-cover\"\n                     preload=\"metadata\"\n@@ -187,32 +184,20 @@\n                         videoEl.play();\n                       }\n                     }}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-70 group-hover/media:opacity-80 transition-opacity duration-500\" />\n-                  \n-                  {/* Fullscreen button */}\n-                  <motion.div \n-                    className=\"absolute inset-0 flex items-center justify-center\"\n-                    initial={{ opacity: 0 }}\n-                    whileHover={{ opacity: 1 }}\n-                    transition={{ duration: 0.3 }}\n-                  >\n-                    <motion.div \n-                      className=\"rounded-full bg-primary/30 backdrop-blur-md p-3 hover:bg-primary/50 transition-colors duration-300\"\n-                      whileHover={{ scale: 1.1 }}\n-                      whileTap={{ scale: 0.95 }}\n-                    >\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </motion.div>\n-                  </motion.div>\n-                  \n-                  {/* Play button with improved styling */}\n-                  <div className=\"absolute bottom-4 right-4\">\n+                    </div>\n+                  </div>\n+                  {/* Adding controls button separately for better UI */}\n+                  <div className=\"absolute bottom-2 right-2\">\n                     <Button \n-                      variant=\"secondary\" \n+                      variant=\"ghost\" \n                       size=\"sm\" \n-                      className=\"bg-black/40 backdrop-blur-md hover:bg-black/60 text-white shadow-md\"\n+                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n                       onClick={(e: React.MouseEvent) => {\n                         e.stopPropagation();\n                         const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n                         if (videoEl) {\n@@ -220,146 +205,82 @@\n                           videoEl.play();\n                         }\n                       }}\n                     >\n-                      <Play className=\"h-3.5 w-3.5 mr-1.5\" />\n-                      Play Video\n+                      <Play className=\"h-4 w-4 mr-1\" />\n+                      Play\n                     </Button>\n                   </div>\n                 </div>\n               )}\n-              \n-              {/* Floating badges with improved positioning and styling */}\n-              <div className=\"absolute top-4 left-4 z-10 flex flex-wrap gap-2 max-w-[calc(100%-2rem)]\">\n-                <Badge \n-                  variant=\"outline\" \n-                  className=\"bg-black/50 backdrop-blur-sm border-white/20 text-white shadow-sm\"\n-                >\n-                  Exercise {index + 1}\n-                </Badge>\n-                {prompt.metadata?.difficulty && (\n-                  <Badge \n-                    variant=\"outline\" \n-                    className={cn(\n-                      \"capitalize backdrop-blur-sm shadow-sm\",\n-                      getDifficultyClasses(prompt.metadata.difficulty)\n-                    )}\n-                  >\n-                    {prompt.metadata.difficulty}\n-                  </Badge>\n-                )}\n-                {prompt.metadata?.estimatedTime && (\n-                  <Badge \n-                    variant=\"outline\" \n-                    className=\"bg-black/50 backdrop-blur-sm border-white/20 text-white shadow-sm\"\n-                  >\n-                    <Clock className=\"h-3 w-3 mr-1\" />\n-                    {prompt.metadata.estimatedTime} mins\n-                  </Badge>\n-                )}\n-              </div>\n             </div>\n           )}\n \n-          {/* Title and Description - moved to separate section for better organization */}\n-          <div className={cn(\n-            \"px-6 py-5 space-y-3\",\n-            prompt.media ? \"mt-0 relative\" : \"\"\n-          )}>\n-            <CardTitle className={cn(\n-              \"text-xl font-semibold leading-tight\",\n-              prompt.media ? \"text-white absolute bottom-12 left-0 right-0 px-6\" : \"\"\n-            )}>\n+          {/* Title and Description */}\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n+            <CardTitle className=\"text-lg font-semibold leading-tight\">\n               {prompt.text}\n             </CardTitle>\n-            {prompt.content?.instructions && !prompt.media && (\n-              <CardDescription className=\"flex items-start gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4 mt-1 flex-shrink-0\" />\n-                <span>{prompt.content.instructions}</span>\n+            {prompt.content?.instructions && (\n+              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4\" />\n+                {prompt.content.instructions}\n               </CardDescription>\n             )}\n           </div>\n         </CardHeader>\n \n-        {/* Content Section with improved layout */}\n-        <CardContent className=\"space-y-5 px-6 pb-6\">\n-          {/* Instructions - when media exists */}\n-          {prompt.content?.instructions && prompt.media && (\n-            <div className=\"flex items-start gap-2 text-primary/80 -mt-2 mb-3\">\n-              <Lightbulb className=\"h-4 w-4 mt-1 flex-shrink-0\" />\n-              <span className=\"text-sm\">{prompt.content.instructions}</span>\n+        <CardContent className=\"space-y-4\">\n+          {/* Narration Section */}\n+          {prompt.narration && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Narration:</h4>\n+              </div>\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n             </div>\n           )}\n \n-          {/* Activity Sections with consistent styling */}\n-          <div className=\"space-y-4\">\n-            {/* Narration Section */}\n-            {prompt.narration && (\n-              <motion.div \n-                className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n-                whileHover={{ y: -2 }}\n-              >\n-                <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                  <Volume2 className=\"h-4 w-4\" />\n-                  <h4 className=\"font-medium\">Narration</h4>\n-                </div>\n-                <div className=\"text-muted-foreground leading-relaxed\">{prompt.narration}</div>\n-              </motion.div>\n-            )}\n+          {/* Say Text Section */}\n+          {prompt.saytext && (\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <MessageCircle className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Say Text</h4>\n+              </div>\n+              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n+            </div>\n+          )}\n \n-            {/* Say Text Section */}\n-            {prompt.saytext && (\n-              <motion.div \n-                className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n-                whileHover={{ y: -2 }}\n-              >\n-                <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                  <MessageCircle className=\"h-4 w-4\" />\n-                  <h4 className=\"font-medium\">Say This</h4>\n+          {/* Writing/Speaking Prompts */}\n+          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n+            <div className=\"grid gap-4\">\n+              {prompt.content.writingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n                 </div>\n-                <p className=\"text-muted-foreground leading-relaxed\">{prompt.saytext}</p>\n-              </motion.div>\n-            )}\n+              )}\n+              {prompt.content.speakingPrompt && (\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n+                </div>\n+              )}\n+            </div>\n+          )}\n \n-            {/* Improved Writing/Speaking Prompts with consistent styling */}\n-            {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n-              <div className=\"grid gap-4\">\n-                {prompt.content.writingPrompt && (\n-                  <motion.div \n-                    className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n-                    whileHover={{ y: -2 }}\n-                  >\n-                    <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                      <ImageIcon className=\"h-4 w-4\" />\n-                      <h4 className=\"font-medium\">Writing Prompt</h4>\n-                    </div>\n-                    <p className=\"text-muted-foreground leading-relaxed\">{prompt.content.writingPrompt}</p>\n-                  </motion.div>\n-                )}\n-                {prompt.content.speakingPrompt && (\n-                  <motion.div \n-                    className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/25 transition-all duration-300 hover:shadow-sm\"\n-                    whileHover={{ y: -2 }}\n-                  >\n-                    <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                      <Volume2 className=\"h-4 w-4\" />\n-                      <h4 className=\"font-medium\">Speaking Prompt</h4>\n-                    </div>\n-                    <p className=\"text-muted-foreground leading-relaxed\">{prompt.content.speakingPrompt}</p>\n-                  </motion.div>\n-                )}\n-              </div>\n-            )}\n+          {/* Metadata Footer */}\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n+            <div className=\"flex items-center gap-2\">\n+              <Clock className=\"h-4 w-4\" />\n+              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n+            </div>\n+            <Badge variant=\"outline\" className=\"capitalize\">\n+              {prompt.type}\n+            </Badge>\n           </div>\n-\n-          {/* Metadata Footer with improved styling */}\n-          {!prompt.metadata?.estimatedTime && (\n-            <div className=\"flex items-center justify-end text-sm text-muted-foreground pt-2\">\n-              <Badge variant=\"outline\" className=\"capitalize\">\n-                {prompt.type || 'exercise'}\n-              </Badge>\n-            </div>\n-          )}\n         </CardContent>\n       </Card>\n     </motion.div>\n   );\n"
                },
                {
                    "date": 1741891617865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play, BookOpen, Mic, Tag } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n \n@@ -90,14 +90,28 @@\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n+  // Helper function to get difficulty color class\n+  const getDifficultyStyles = (difficulty?: string) => {\n+    switch(difficulty) {\n+      case 'beginner':\n+        return \"bg-emerald-50 text-emerald-700 border-emerald-200\";\n+      case 'intermediate':\n+        return \"bg-amber-50 text-amber-700 border-amber-200\";\n+      case 'advanced':\n+        return \"bg-rose-50 text-rose-700 border-rose-200\";\n+      default:\n+        return \"bg-slate-50 text-slate-700 border-slate-200\";\n+    }\n+  };\n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n-      transition={{ duration: 0.3, delay: index * 0.1 }}\n+      transition={{ duration: 0.4, delay: index * 0.1, ease: \"easeOut\" }}\n       className=\"group\"\n       onMouseEnter={() => {\n         if (prompt && prompt.media) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n@@ -110,69 +124,70 @@\n           displayMedia();\n         }\n       }}\n     >\n-      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden\">\n-          {/* Floating badge with shine effect */}\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n+      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1 relative\">\n+        {/* Exercise number badge - positioned at top left with new design */}\n+        <div className=\"absolute top-4 left-4 z-10\">\n+          <Badge \n+            variant=\"outline\" \n+            className=\"bg-primary/10 text-primary font-semibold backdrop-blur-sm border-primary/20 px-3 py-1\"\n+          >\n+            Exercise {index + 1}\n+          </Badge>\n+        </div>\n+\n+        {/* Difficulty badge - positioned at top right with improved design */}\n+        {prompt.metadata?.difficulty && (\n+          <div className=\"absolute top-4 right-4 z-10\">\n             <Badge \n               variant=\"outline\" \n-              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n+              className={cn(\n+                \"capitalize px-3 py-1 font-medium backdrop-blur-sm\",\n+                getDifficultyStyles(prompt.metadata.difficulty)\n+              )}\n             >\n-              Exercise {index + 1}\n+              {prompt.metadata.difficulty}\n             </Badge>\n-            {prompt.metadata?.difficulty && (\n-              <Badge \n-                variant=\"outline\" \n-                className={cn(\n-                  \"capitalize bg-background/80 backdrop-blur-sm\",\n-                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n-                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n-                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n-                )}\n-              >\n-                {prompt.metadata.difficulty}\n-              </Badge>\n-            )}\n           </div>\n+        )}\n \n-          {/* Media Section */}\n-          {prompt.media && (\n+        {/* Media Section - Improved design with better hover effects */}\n+        {prompt.media && (\n+          <div className=\"w-full\">\n             <div \n-              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n+              className=\"relative group/media cursor-pointer overflow-hidden\"\n               onClick={(e) => {\n-                e.stopPropagation(); // Prevent double triggering with parent onClick\n-                \n-                // First, display the media immediately\n+                e.stopPropagation();\n                 displayMedia();\n-                \n-                // Then, schedule another update after a short delay to ensure it sticks\n-                // This helps overcome any race conditions that might reset the image\n                 setTimeout(() => {\n                   console.log(\"Resending media display event after delay to ensure it sticks\");\n                   displayMedia();\n                 }, 200);\n               }}\n             >\n               {prompt.type === 'image' && (\n-                <div className=\"relative h-[200px] overflow-hidden\">\n+                <div className=\"relative h-[240px] overflow-hidden\">\n                   <ImagePreview\n                     imageUrl={prompt.media}\n                     alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n+                    className=\"w-full h-full object-cover transition-transform duration-700 group-hover/media:scale-105\"\n                     priority={false}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n                   <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                    <motion.div \n+                      whileHover={{ scale: 1.1 }}\n+                      whileTap={{ scale: 0.95 }}\n+                      className=\"rounded-full bg-white/20 backdrop-blur-md p-3 shadow-lg\"\n+                    >\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n+                    </motion.div>\n                   </div>\n                 </div>\n               )}\n               {prompt.type === 'video' && (\n-                <div className=\"relative h-[200px]\">\n+                <div className=\"relative h-[240px]\">\n                   <video\n                     src={prompt.media}\n                     className=\"w-full h-full object-cover\"\n                     preload=\"metadata\"\n@@ -184,20 +199,24 @@\n                         videoEl.play();\n                       }\n                     }}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n                   <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n+                    <motion.div \n+                      whileHover={{ scale: 1.1 }}\n+                      whileTap={{ scale: 0.95 }}\n+                      className=\"rounded-full bg-white/20 backdrop-blur-md p-3 shadow-lg\"\n+                    >\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n+                    </motion.div>\n                   </div>\n-                  {/* Adding controls button separately for better UI */}\n-                  <div className=\"absolute bottom-2 right-2\">\n+                  {/* Improved play button */}\n+                  <div className=\"absolute bottom-4 right-4\">\n                     <Button \n-                      variant=\"ghost\" \n+                      variant=\"default\" \n                       size=\"sm\" \n-                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                      className=\"bg-primary/90 hover:bg-primary shadow-md text-white gap-1 rounded-full px-4\"\n                       onClick={(e: React.MouseEvent) => {\n                         e.stopPropagation();\n                         const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n                         if (videoEl) {\n@@ -205,79 +224,110 @@\n                           videoEl.play();\n                         }\n                       }}\n                     >\n-                      <Play className=\"h-4 w-4 mr-1\" />\n+                      <Play className=\"h-4 w-4\" />\n                       Play\n                     </Button>\n                   </div>\n                 </div>\n               )}\n             </div>\n-          )}\n+          </div>\n+        )}\n \n-          {/* Title and Description */}\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\n+        <CardHeader className={cn(\n+          \"relative pt-4\",\n+          prompt.media ? \"mt-2\" : \"mt-12\" // Add spacing only if there is no media\n+        )}>\n+          {/* Title and Description - Improved spacing and typography */}\n+          <div className=\"space-y-3\">\n+            <CardTitle className=\"text-xl font-bold leading-tight text-primary\">\n               {prompt.text}\n             </CardTitle>\n             {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4\" />\n-                {prompt.content.instructions}\n+              <CardDescription className=\"flex items-start gap-2 text-foreground/80 text-base\">\n+                <Lightbulb className=\"h-5 w-5 text-primary/80 mt-0.5 flex-shrink-0\" />\n+                <span>{prompt.content.instructions}</span>\n               </CardDescription>\n             )}\n           </div>\n         </CardHeader>\n \n-        <CardContent className=\"space-y-4\">\n-          {/* Narration Section */}\n+        <CardContent className=\"space-y-5 pb-6\">\n+          {/* Narration Section - Improved styling */}\n           {prompt.narration && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Narration:</h4>\n+            <motion.div \n+              initial={{ opacity: 0.8 }}\n+              whileHover={{ opacity: 1, scale: 1.01 }}\n+              className=\"relative p-4 rounded-xl border border-primary/15 bg-primary/5 hover:bg-primary/10 transition-all duration-300\"\n+            >\n+              <div className=\"flex items-center gap-2 mb-3 text-primary\">\n+                <Volume2 className=\"h-5 w-5\" />\n+                <h4 className=\"font-semibold\">Narration</h4>\n               </div>\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n-            </div>\n+              <div className=\"text-foreground/80 leading-relaxed\">{prompt.narration}</div>\n+            </motion.div>\n           )}\n \n-          {/* Say Text Section */}\n+          {/* Say Text Section - Improved styling */}\n           {prompt.saytext && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <MessageCircle className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Say Text</h4>\n+            <motion.div \n+              initial={{ opacity: 0.8 }}\n+              whileHover={{ opacity: 1, scale: 1.01 }}\n+              className=\"relative p-4 rounded-xl border border-indigo-200/30 bg-indigo-50/30 hover:bg-indigo-50/50 transition-all duration-300\"\n+            >\n+              <div className=\"flex items-center gap-2 mb-3 text-indigo-700\">\n+                <MessageCircle className=\"h-5 w-5\" />\n+                <h4 className=\"font-semibold\">Say Text</h4>\n               </div>\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n-            </div>\n+              <p className=\"text-foreground/80 leading-relaxed\">{prompt.saytext}</p>\n+            </motion.div>\n           )}\n \n-          {/* Writing/Speaking Prompts */}\n+          {/* Writing/Speaking Prompts - Improved styling with icons */}\n           {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n             <div className=\"grid gap-4\">\n               {prompt.content.writingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n-                </div>\n+                <motion.div \n+                  initial={{ opacity: 0.8 }}\n+                  whileHover={{ opacity: 1, scale: 1.01 }}\n+                  className=\"p-4 rounded-xl border border-emerald-200/30 bg-emerald-50/30 hover:bg-emerald-50/50 transition-all duration-300\"\n+                >\n+                  <div className=\"flex items-center gap-2 mb-3 text-emerald-700\">\n+                    <BookOpen className=\"h-5 w-5\" />\n+                    <h4 className=\"font-semibold\">Writing Prompt</h4>\n+                  </div>\n+                  <p className=\"text-foreground/80 leading-relaxed\">{prompt.content.writingPrompt}</p>\n+                </motion.div>\n               )}\n               {prompt.content.speakingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n-                </div>\n+                <motion.div \n+                  initial={{ opacity: 0.8 }}\n+                  whileHover={{ opacity: 1, scale: 1.01 }}\n+                  className=\"p-4 rounded-xl border border-amber-200/30 bg-amber-50/30 hover:bg-amber-50/50 transition-all duration-300\"\n+                >\n+                  <div className=\"flex items-center gap-2 mb-3 text-amber-700\">\n+                    <Mic className=\"h-5 w-5\" />\n+                    <h4 className=\"font-semibold\">Speaking Prompt</h4>\n+                  </div>\n+                  <p className=\"text-foreground/80 leading-relaxed\">{prompt.content.speakingPrompt}</p>\n+                </motion.div>\n               )}\n             </div>\n           )}\n \n-          {/* Metadata Footer */}\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n-            <div className=\"flex items-center gap-2\">\n-              <Clock className=\"h-4 w-4\" />\n+          {/* Metadata Footer - Improved design with shadows and better layout */}\n+          <div className=\"flex items-center justify-between text-sm pt-3 mt-2 border-t border-border/40\">\n+            <div className=\"flex items-center gap-2 text-muted-foreground\">\n+              <Clock className=\"h-4 w-4 text-primary/70\" />\n               <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n             </div>\n-            <Badge variant=\"outline\" className=\"capitalize\">\n+            <Badge \n+              variant=\"outline\" \n+              className=\"capitalize bg-background flex items-center gap-1.5\"\n+            >\n+              {prompt.type === 'image' ? <ImageIcon className=\"h-3 w-3\" /> : <Video className=\"h-3 w-3\" />}\n               {prompt.type}\n             </Badge>\n           </div>\n         </CardContent>\n"
                },
                {
                    "date": 1741893418280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import React, { useEffect } from \"react\";\n import { motion } from \"framer-motion\";\n import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play, BookOpen, Mic, Tag } from \"lucide-react\";\n+import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n \n@@ -90,28 +90,14 @@\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n-  // Helper function to get difficulty color class\n-  const getDifficultyStyles = (difficulty?: string) => {\n-    switch(difficulty) {\n-      case 'beginner':\n-        return \"bg-emerald-50 text-emerald-700 border-emerald-200\";\n-      case 'intermediate':\n-        return \"bg-amber-50 text-amber-700 border-amber-200\";\n-      case 'advanced':\n-        return \"bg-rose-50 text-rose-700 border-rose-200\";\n-      default:\n-        return \"bg-slate-50 text-slate-700 border-slate-200\";\n-    }\n-  };\n-\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n-      transition={{ duration: 0.4, delay: index * 0.1, ease: \"easeOut\" }}\n+      transition={{ duration: 0.3, delay: index * 0.1 }}\n       className=\"group\"\n       onMouseEnter={() => {\n         if (prompt && prompt.media) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n@@ -124,70 +110,69 @@\n           displayMedia();\n         }\n       }}\n     >\n-      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1 relative\">\n-        {/* Exercise number badge - positioned at top left with new design */}\n-        <div className=\"absolute top-4 left-4 z-10\">\n-          <Badge \n-            variant=\"outline\" \n-            className=\"bg-primary/10 text-primary font-semibold backdrop-blur-sm border-primary/20 px-3 py-1\"\n-          >\n-            Exercise {index + 1}\n-          </Badge>\n-        </div>\n-\n-        {/* Difficulty badge - positioned at top right with improved design */}\n-        {prompt.metadata?.difficulty && (\n-          <div className=\"absolute top-4 right-4 z-10\">\n+      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n+        <CardHeader className=\"relative overflow-hidden\">\n+          {/* Floating badge with shine effect */}\n+          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n             <Badge \n               variant=\"outline\" \n-              className={cn(\n-                \"capitalize px-3 py-1 font-medium backdrop-blur-sm\",\n-                getDifficultyStyles(prompt.metadata.difficulty)\n-              )}\n+              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n             >\n-              {prompt.metadata.difficulty}\n+              Exercise {index + 1}\n             </Badge>\n+            {prompt.metadata?.difficulty && (\n+              <Badge \n+                variant=\"outline\" \n+                className={cn(\n+                  \"capitalize bg-background/80 backdrop-blur-sm\",\n+                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n+                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n+                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n+                )}\n+              >\n+                {prompt.metadata.difficulty}\n+              </Badge>\n+            )}\n           </div>\n-        )}\n \n-        {/* Media Section - Improved design with better hover effects */}\n-        {prompt.media && (\n-          <div className=\"w-full\">\n+          {/* Media Section */}\n+          {prompt.media && (\n             <div \n-              className=\"relative group/media cursor-pointer overflow-hidden\"\n+              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n               onClick={(e) => {\n-                e.stopPropagation();\n+                e.stopPropagation(); // Prevent double triggering with parent onClick\n+                \n+                // First, display the media immediately\n                 displayMedia();\n+                \n+                // Then, schedule another update after a short delay to ensure it sticks\n+                // This helps overcome any race conditions that might reset the image\n                 setTimeout(() => {\n                   console.log(\"Resending media display event after delay to ensure it sticks\");\n                   displayMedia();\n                 }, 200);\n               }}\n             >\n               {prompt.type === 'image' && (\n-                <div className=\"relative h-[240px] overflow-hidden\">\n+                <div className=\"relative h-[200px] overflow-hidden\">\n                   <ImagePreview\n                     imageUrl={prompt.media}\n                     alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-700 group-hover/media:scale-105\"\n+                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n                     priority={false}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n                   <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <motion.div \n-                      whileHover={{ scale: 1.1 }}\n-                      whileTap={{ scale: 0.95 }}\n-                      className=\"rounded-full bg-white/20 backdrop-blur-md p-3 shadow-lg\"\n-                    >\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </motion.div>\n+                    </div>\n                   </div>\n                 </div>\n               )}\n               {prompt.type === 'video' && (\n-                <div className=\"relative h-[240px]\">\n+                <div className=\"relative h-[200px]\">\n                   <video\n                     src={prompt.media}\n                     className=\"w-full h-full object-cover\"\n                     preload=\"metadata\"\n@@ -199,24 +184,20 @@\n                         videoEl.play();\n                       }\n                     }}\n                   />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n+                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                   <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <motion.div \n-                      whileHover={{ scale: 1.1 }}\n-                      whileTap={{ scale: 0.95 }}\n-                      className=\"rounded-full bg-white/20 backdrop-blur-md p-3 shadow-lg\"\n-                    >\n+                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n                       <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </motion.div>\n+                    </div>\n                   </div>\n-                  {/* Improved play button */}\n-                  <div className=\"absolute bottom-4 right-4\">\n+                  {/* Adding controls button separately for better UI */}\n+                  <div className=\"absolute bottom-2 right-2\">\n                     <Button \n-                      variant=\"default\" \n+                      variant=\"ghost\" \n                       size=\"sm\" \n-                      className=\"bg-primary/90 hover:bg-primary shadow-md text-white gap-1 rounded-full px-4\"\n+                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n                       onClick={(e: React.MouseEvent) => {\n                         e.stopPropagation();\n                         const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n                         if (videoEl) {\n@@ -224,110 +205,79 @@\n                           videoEl.play();\n                         }\n                       }}\n                     >\n-                      <Play className=\"h-4 w-4\" />\n+                      <Play className=\"h-4 w-4 mr-1\" />\n                       Play\n                     </Button>\n                   </div>\n                 </div>\n               )}\n             </div>\n-          </div>\n-        )}\n+          )}\n \n-        <CardHeader className={cn(\n-          \"relative pt-4\",\n-          prompt.media ? \"mt-2\" : \"mt-12\" // Add spacing only if there is no media\n-        )}>\n-          {/* Title and Description - Improved spacing and typography */}\n-          <div className=\"space-y-3\">\n-            <CardTitle className=\"text-xl font-bold leading-tight text-primary\">\n+          {/* Title and Description */}\n+          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n+            <CardTitle className=\"text-lg font-semibold leading-tight\">\n               {prompt.text}\n             </CardTitle>\n             {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-start gap-2 text-foreground/80 text-base\">\n-                <Lightbulb className=\"h-5 w-5 text-primary/80 mt-0.5 flex-shrink-0\" />\n-                <span>{prompt.content.instructions}</span>\n+              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n+                <Lightbulb className=\"h-4 w-4\" />\n+                {prompt.content.instructions}\n               </CardDescription>\n             )}\n           </div>\n         </CardHeader>\n \n-        <CardContent className=\"space-y-5 pb-6\">\n-          {/* Narration Section - Improved styling */}\n+        <CardContent className=\"space-y-4\">\n+          {/* Narration Section */}\n           {prompt.narration && (\n-            <motion.div \n-              initial={{ opacity: 0.8 }}\n-              whileHover={{ opacity: 1, scale: 1.01 }}\n-              className=\"relative p-4 rounded-xl border border-primary/15 bg-primary/5 hover:bg-primary/10 transition-all duration-300\"\n-            >\n-              <div className=\"flex items-center gap-2 mb-3 text-primary\">\n-                <Volume2 className=\"h-5 w-5\" />\n-                <h4 className=\"font-semibold\">Narration</h4>\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <Volume2 className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Narration:</h4>\n               </div>\n-              <div className=\"text-foreground/80 leading-relaxed\">{prompt.narration}</div>\n-            </motion.div>\n+              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n+            </div>\n           )}\n \n-          {/* Say Text Section - Improved styling */}\n+          {/* Say Text Section */}\n           {prompt.saytext && (\n-            <motion.div \n-              initial={{ opacity: 0.8 }}\n-              whileHover={{ opacity: 1, scale: 1.01 }}\n-              className=\"relative p-4 rounded-xl border border-indigo-200/30 bg-indigo-50/30 hover:bg-indigo-50/50 transition-all duration-300\"\n-            >\n-              <div className=\"flex items-center gap-2 mb-3 text-indigo-700\">\n-                <MessageCircle className=\"h-5 w-5\" />\n-                <h4 className=\"font-semibold\">Say Text</h4>\n+            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n+              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n+                <MessageCircle className=\"h-4 w-4\" />\n+                <h4 className=\"font-medium\">Say Text</h4>\n               </div>\n-              <p className=\"text-foreground/80 leading-relaxed\">{prompt.saytext}</p>\n-            </motion.div>\n+              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n+            </div>\n           )}\n \n-          {/* Writing/Speaking Prompts - Improved styling with icons */}\n+          {/* Writing/Speaking Prompts */}\n           {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n             <div className=\"grid gap-4\">\n               {prompt.content.writingPrompt && (\n-                <motion.div \n-                  initial={{ opacity: 0.8 }}\n-                  whileHover={{ opacity: 1, scale: 1.01 }}\n-                  className=\"p-4 rounded-xl border border-emerald-200/30 bg-emerald-50/30 hover:bg-emerald-50/50 transition-all duration-300\"\n-                >\n-                  <div className=\"flex items-center gap-2 mb-3 text-emerald-700\">\n-                    <BookOpen className=\"h-5 w-5\" />\n-                    <h4 className=\"font-semibold\">Writing Prompt</h4>\n-                  </div>\n-                  <p className=\"text-foreground/80 leading-relaxed\">{prompt.content.writingPrompt}</p>\n-                </motion.div>\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n+                </div>\n               )}\n               {prompt.content.speakingPrompt && (\n-                <motion.div \n-                  initial={{ opacity: 0.8 }}\n-                  whileHover={{ opacity: 1, scale: 1.01 }}\n-                  className=\"p-4 rounded-xl border border-amber-200/30 bg-amber-50/30 hover:bg-amber-50/50 transition-all duration-300\"\n-                >\n-                  <div className=\"flex items-center gap-2 mb-3 text-amber-700\">\n-                    <Mic className=\"h-5 w-5\" />\n-                    <h4 className=\"font-semibold\">Speaking Prompt</h4>\n-                  </div>\n-                  <p className=\"text-foreground/80 leading-relaxed\">{prompt.content.speakingPrompt}</p>\n-                </motion.div>\n+                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n+                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n+                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n+                </div>\n               )}\n             </div>\n           )}\n \n-          {/* Metadata Footer - Improved design with shadows and better layout */}\n-          <div className=\"flex items-center justify-between text-sm pt-3 mt-2 border-t border-border/40\">\n-            <div className=\"flex items-center gap-2 text-muted-foreground\">\n-              <Clock className=\"h-4 w-4 text-primary/70\" />\n+          {/* Metadata Footer */}\n+          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n+            <div className=\"flex items-center gap-2\">\n+              <Clock className=\"h-4 w-4\" />\n               <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n             </div>\n-            <Badge \n-              variant=\"outline\" \n-              className=\"capitalize bg-background flex items-center gap-1.5\"\n-            >\n-              {prompt.type === 'image' ? <ImageIcon className=\"h-3 w-3\" /> : <Video className=\"h-3 w-3\" />}\n+            <Badge variant=\"outline\" className=\"capitalize\">\n               {prompt.type}\n             </Badge>\n           </div>\n         </CardContent>\n"
                },
                {
                    "date": 1741893497269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,17 @@\n \"use client\";\n \n-import React, { useEffect } from \"react\";\n+import React, { useState } from \"react\";\n import { motion } from \"framer-motion\";\n-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\n+import { Card, CardContent, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\n import { Badge } from \"@/components/ui/badge\";\n-import { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb, Maximize2, Play } from \"lucide-react\";\n+import { \n+  Volume2, MessageCircle, Clock, Video, ImageIcon, \n+  Maximize2, Play, CheckCircle, PenLine, Mic, Lightbulb\n+} from \"lucide-react\";\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n+import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from \"@/components/ui/tooltip\";\n import { ImagePreview } from \"@/components/common/ImagePreview\";\n \n interface ExercisePromptViewProps {\n   prompt: {\n@@ -30,8 +34,11 @@\n   index: number;\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n+  const [mediaHovered, setMediaHovered] = useState(false);\n+  const [isCompleted, setIsCompleted] = useState(false);\n+\n   // Function to dispatch media display event\n   const displayMedia = () => {\n     if (!prompt || !prompt.media) {\n       console.log(\"No media available for this prompt\");\n@@ -90,198 +97,356 @@\n       console.error(\"Error dispatching media event:\", err);\n     }\n   };\n \n+  // Function to play narration audio when available\n+  const playNarration = (e: React.MouseEvent) => {\n+    e.stopPropagation();\n+    if (!prompt.narration) return;\n+    \n+    // Create text-to-speech event\n+    const customEvent = new CustomEvent(\"text-to-speech\", { \n+      detail: {\n+        text: prompt.narration,\n+        lang: 'en-US',\n+        rate: 1.0,\n+        pitch: 1.0,\n+        volume: 1.0,\n+        sourceId: prompt.id\n+      },\n+      bubbles: true,\n+      cancelable: true\n+    });\n+    \n+    document.dispatchEvent(customEvent);\n+    console.log(\"Playing narration audio\");\n+  };\n+\n+  // Function to handle completion\n+  const handleComplete = () => {\n+    setIsCompleted(!isCompleted);\n+    \n+    // Dispatch an event to notify completion\n+    const customEvent = new CustomEvent(\"exercise-completed\", {\n+      detail: {\n+        exerciseId: prompt.id,\n+        completed: !isCompleted\n+      },\n+      bubbles: true\n+    });\n+    \n+    document.dispatchEvent(customEvent);\n+    console.log(`Exercise ${prompt.id} marked as ${!isCompleted ? \"completed\" : \"incomplete\"}`);\n+  };\n+  \n+  // Helper for checking content availability\n+  const mediaAvailable = prompt.media && prompt.type;\n+  const hasNarration = !!prompt.narration;\n+  const hasSayText = !!prompt.saytext;\n+  const estimatedTime = prompt.metadata?.estimatedTime || 5;\n+  const difficulty = prompt.metadata?.difficulty || 'beginner';\n+\n+  // Get difficulty styles\n+  const getDifficultyColor = () => {\n+    switch(difficulty) {\n+      case 'beginner': return 'from-green-500/10 to-green-500/5 border-green-500/20';\n+      case 'intermediate': return 'from-blue-500/10 to-blue-500/5 border-blue-500/20';\n+      case 'advanced': return 'from-red-500/10 to-red-500/5 border-red-500/20';\n+      default: return 'from-primary/10 to-primary/5 border-primary/20';\n+    }\n+  };\n+\n+  // Get difficulty badge style\n+  const getDifficultyBadgeStyle = () => {\n+    switch(difficulty) {\n+      case 'beginner': return 'bg-green-500/10 text-green-600 hover:bg-green-500/20';\n+      case 'intermediate': return 'bg-blue-500/10 text-blue-600 hover:bg-blue-500/20';\n+      case 'advanced': return 'bg-red-500/10 text-red-600 hover:bg-red-500/20';\n+      default: return 'bg-primary/10 text-primary hover:bg-primary/20';\n+    }\n+  };\n+\n   return (\n     <motion.div\n       id={`exercise-${prompt.id}`}\n       initial={{ opacity: 0, y: 20 }}\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n-      className=\"group\"\n+      className={cn(\"group\", isCompleted && \"opacity-75\")}\n       onMouseEnter={() => {\n         if (prompt && prompt.media) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n-      onClick={() => {\n-        if (prompt && prompt.media) {\n-          console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n-          displayMedia();\n-        }\n-      }}\n     >\n-      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n-        <CardHeader className=\"relative overflow-hidden\">\n-          {/* Floating badge with shine effect */}\n-          <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n-            <Badge \n-              variant=\"outline\" \n-              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n-            >\n-              Exercise {index + 1}\n-            </Badge>\n-            {prompt.metadata?.difficulty && (\n+      <Card className={cn(\n+        \"overflow-hidden backdrop-blur-sm transition-all duration-300\",\n+        \"border bg-gradient-to-b from-background to-background/70 hover:shadow-md hover:-translate-y-1\",\n+        isCompleted && \"bg-muted/50 border-success/20\",\n+        getDifficultyColor()\n+      )}>\n+        {/* Media preview (if available) */}\n+        {mediaAvailable && (\n+          <div \n+            className=\"relative cursor-pointer overflow-hidden\" \n+            style={{ height: '180px' }}\n+            onClick={() => {\n+              if (prompt && prompt.media) {\n+                console.log(\"Clicked on exercise prompt:\", prompt.id || 'unknown');\n+                displayMedia();\n+                \n+                // Re-dispatch after a short delay to ensure it sticks\n+                setTimeout(() => {\n+                  console.log(\"Resending media display event after delay\");\n+                  displayMedia();\n+                }, 200);\n+              }\n+            }}\n+            onMouseEnter={() => setMediaHovered(true)}\n+            onMouseLeave={() => setMediaHovered(false)}\n+          >\n+            {prompt.type === 'image' && (\n+              <div className=\"h-full w-full\">\n+                <ImagePreview\n+                  imageUrl={prompt.media}\n+                  alt={prompt.text}\n+                  className=\"w-full h-full object-cover transition-transform duration-700\"\n+                  priority={false}\n+                  style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n+                />\n+              </div>\n+            )}\n+            \n+            {prompt.type === 'video' && (\n+              <div className=\"h-full w-full\">\n+                <video\n+                  src={prompt.media}\n+                  className=\"w-full h-full object-cover\"\n+                  preload=\"metadata\"\n+                  onClick={(e: React.MouseEvent) => {\n+                    e.stopPropagation();\n+                    const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                    if (videoEl) {\n+                      videoEl.controls = true;\n+                      videoEl.play();\n+                    }\n+                  }}\n+                />\n+              </div>\n+            )}\n+            \n+            {/* Media overlay with play/expand button */}\n+            <div className={cn(\n+              \"absolute inset-0 bg-gradient-to-t from-black/60 via-black/30 to-transparent\",\n+              \"flex items-center justify-center\",\n+              \"transition-opacity duration-300\",\n+              mediaHovered ? \"opacity-100\" : \"opacity-0\"\n+            )}>\n+              <Button \n+                variant=\"outline\" \n+                size=\"icon\" \n+                onClick={displayMedia}\n+                className=\"bg-white/20 hover:bg-white/40 backdrop-blur-sm border-white/30 text-white rounded-full h-12 w-12 transform transition-transform duration-300\"\n+                style={{ transform: mediaHovered ? 'scale(1.1)' : 'scale(1)' }}\n+              >\n+                <Maximize2 className=\"h-5 w-5\" />\n+              </Button>\n+            </div>\n+            \n+            {/* Adding a badge with exercise number */}\n+            <div className=\"absolute top-3 right-3 z-10\">\n               <Badge \n                 variant=\"outline\" \n-                className={cn(\n-                  \"capitalize bg-background/80 backdrop-blur-sm\",\n-                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\n-                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\n-                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\n-                )}\n+                className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\n               >\n-                {prompt.metadata.difficulty}\n+                Exercise {index + 1}\n               </Badge>\n+            </div>\n+            \n+            {/* Video controls if needed */}\n+            {prompt.type === 'video' && (\n+              <div className=\"absolute bottom-2 right-2\">\n+                <Button \n+                  variant=\"ghost\" \n+                  size=\"sm\" \n+                  className=\"bg-black/50 hover:bg-black/70 text-white\"\n+                  onClick={(e: React.MouseEvent) => {\n+                    e.stopPropagation();\n+                    const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n+                    if (videoEl) {\n+                      videoEl.controls = true;\n+                      videoEl.play();\n+                    }\n+                  }}\n+                >\n+                  <Play className=\"h-4 w-4 mr-1\" />\n+                  Play\n+                </Button>\n+              </div>\n             )}\n           </div>\n+        )}\n \n-          {/* Media Section */}\n-          {prompt.media && (\n-            <div \n-              className=\"relative rounded-lg overflow-hidden group/media cursor-pointer\"\n-              onClick={(e) => {\n-                e.stopPropagation(); // Prevent double triggering with parent onClick\n-                \n-                // First, display the media immediately\n-                displayMedia();\n-                \n-                // Then, schedule another update after a short delay to ensure it sticks\n-                // This helps overcome any race conditions that might reset the image\n-                setTimeout(() => {\n-                  console.log(\"Resending media display event after delay to ensure it sticks\");\n-                  displayMedia();\n-                }, 200);\n-              }}\n-            >\n-              {prompt.type === 'image' && (\n-                <div className=\"relative h-[200px] overflow-hidden\">\n-                  <ImagePreview\n-                    imageUrl={prompt.media}\n-                    alt={prompt.text}\n-                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\n-                    priority={false}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n+        <CardContent className=\"p-4 space-y-4\">\n+          {/* Title */}\n+          <h3 className=\"text-lg font-medium leading-tight\">{prompt.text}</h3>\n+          \n+          {/* Instructions if available */}\n+          {prompt.content?.instructions && (\n+            <div className=\"flex gap-2 items-start text-sm text-muted-foreground\">\n+              <Lightbulb className=\"h-4 w-4 text-amber-500 flex-shrink-0 mt-1\" />\n+              <p>{prompt.content.instructions}</p>\n+            </div>\n+          )}\n+\n+          {/* Content row for narration and say text - combined in a single section */}\n+          {(hasNarration || hasSayText) && (\n+            <div className=\"flex flex-col gap-3\">\n+              {hasNarration && (\n+                <div className=\"flex gap-3 items-start\">\n+                  <div className=\"flex-shrink-0 mt-1\">\n+                    <Volume2 className=\"h-4 w-4 text-primary\" />\n                   </div>\n+                  <div className=\"flex-1\">\n+                    <p className=\"text-sm text-muted-foreground line-clamp-2\">\n+                      {prompt.narration}\n+                    </p>\n+                  </div>\n+                  <Button \n+                    variant=\"ghost\" \n+                    size=\"sm\" \n+                    onClick={playNarration}\n+                    className=\"flex-shrink-0 text-primary hover:bg-primary/5 h-7 px-2 rounded-full\"\n+                  >\n+                    <Play className=\"h-3 w-3 mr-1\" />\n+                    <span className=\"text-xs\">Play</span>\n+                  </Button>\n                 </div>\n               )}\n-              {prompt.type === 'video' && (\n-                <div className=\"relative h-[200px]\">\n-                  <video\n-                    src={prompt.media}\n-                    className=\"w-full h-full object-cover\"\n-                    preload=\"metadata\"\n-                    onClick={(e: React.MouseEvent) => {\n-                      e.stopPropagation();\n-                      const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                      if (videoEl) {\n-                        videoEl.controls = true;\n-                        videoEl.play();\n-                      }\n-                    }}\n-                  />\n-                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n-                  <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\">\n-                    <div className=\"rounded-full bg-primary/20 backdrop-blur-md p-3\">\n-                      <Maximize2 className=\"h-6 w-6 text-white\" />\n-                    </div>\n+              \n+              {hasSayText && (\n+                <div className=\"flex gap-3 items-start\">\n+                  <div className=\"flex-shrink-0 mt-1\">\n+                    <MessageCircle className=\"h-4 w-4 text-blue-600\" />\n                   </div>\n-                  {/* Adding controls button separately for better UI */}\n-                  <div className=\"absolute bottom-2 right-2\">\n-                    <Button \n-                      variant=\"ghost\" \n-                      size=\"sm\" \n-                      className=\"bg-black/50 hover:bg-black/70 text-white\"\n-                      onClick={(e: React.MouseEvent) => {\n-                        e.stopPropagation();\n-                        const videoEl = e.currentTarget.closest('.relative')?.querySelector('video') as HTMLVideoElement;\n-                        if (videoEl) {\n-                          videoEl.controls = true;\n-                          videoEl.play();\n-                        }\n-                      }}\n-                    >\n-                      <Play className=\"h-4 w-4 mr-1\" />\n-                      Play\n-                    </Button>\n+                  <div className=\"flex-1\">\n+                    <p className=\"text-sm font-medium\">\n+                      {prompt.saytext}\n+                    </p>\n                   </div>\n                 </div>\n               )}\n             </div>\n           )}\n-\n-          {/* Title and Description */}\n-          <div className={cn(\"space-y-4\", prompt.media && \"mt-40\")}>\n-            <CardTitle className=\"text-lg font-semibold leading-tight\">\n-              {prompt.text}\n-            </CardTitle>\n-            {prompt.content?.instructions && (\n-              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\n-                <Lightbulb className=\"h-4 w-4\" />\n-                {prompt.content.instructions}\n-              </CardDescription>\n-            )}\n-          </div>\n-        </CardHeader>\n-\n-        <CardContent className=\"space-y-4\">\n-          {/* Narration Section */}\n-          {prompt.narration && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <Volume2 className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Narration:</h4>\n-              </div>\n-              <div className=\"text-muted-foreground\">{prompt.narration}</div>\n-            </div>\n-          )}\n-\n-          {/* Say Text Section */}\n-          {prompt.saytext && (\n-            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\n-              <div className=\"flex items-center gap-2 mb-2 text-primary\">\n-                <MessageCircle className=\"h-4 w-4\" />\n-                <h4 className=\"font-medium\">Say Text</h4>\n-              </div>\n-              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\n-            </div>\n-          )}\n-\n-          {/* Writing/Speaking Prompts */}\n+          \n+          {/* Writing/Speaking prompts in a compact form */}\n           {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\n-            <div className=\"grid gap-4\">\n-              {prompt.content.writingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\n+            <div className=\"flex flex-col gap-3 mt-2\">\n+              {prompt.content?.writingPrompt && (\n+                <div className=\"flex gap-3 items-start\">\n+                  <div className=\"flex-shrink-0 mt-1\">\n+                    <PenLine className=\"h-4 w-4 text-green-600\" />\n+                  </div>\n+                  <div className=\"flex-1\">\n+                    <p className=\"text-sm text-muted-foreground\">\n+                      {prompt.content.writingPrompt}\n+                    </p>\n+                  </div>\n                 </div>\n               )}\n-              {prompt.content.speakingPrompt && (\n-                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\n-                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\n-                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\n+              \n+              {prompt.content?.speakingPrompt && (\n+                <div className=\"flex gap-3 items-start\">\n+                  <div className=\"flex-shrink-0 mt-1\">\n+                    <Mic className=\"h-4 w-4 text-amber-600\" />\n+                  </div>\n+                  <div className=\"flex-1\">\n+                    <p className=\"text-sm text-muted-foreground\">\n+                      {prompt.content.speakingPrompt}\n+                    </p>\n+                  </div>\n                 </div>\n               )}\n             </div>\n           )}\n+        </CardContent>\n \n-          {/* Metadata Footer */}\n-          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\n-            <div className=\"flex items-center gap-2\">\n-              <Clock className=\"h-4 w-4\" />\n-              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\n+        {/* Action footer */}\n+        <CardFooter className={cn(\n+          \"flex justify-between items-center px-4 py-3\",\n+          \"border-t border-border/50 bg-muted/30\"\n+        )}>\n+          <TooltipProvider>\n+            <div className=\"flex items-center gap-3\">\n+              <Tooltip>\n+                <TooltipTrigger asChild>\n+                  <div className=\"flex items-center gap-1 text-muted-foreground\">\n+                    <Clock className=\"h-4 w-4\" />\n+                    <span className=\"text-xs\">{estimatedTime} min</span>\n+                  </div>\n+                </TooltipTrigger>\n+                <TooltipContent side=\"bottom\">\n+                  <p>Estimated time: {estimatedTime} minutes</p>\n+                </TooltipContent>\n+              </Tooltip>\n+              \n+              <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n+                {prompt.type}\n+              </Badge>\n+              \n+              <Tooltip>\n+                <TooltipTrigger asChild>\n+                  <Badge variant=\"outline\" className={cn(\"capitalize\", getDifficultyBadgeStyle())}>\n+                    {difficulty}\n+                  </Badge>\n+                </TooltipTrigger>\n+                <TooltipContent>\n+                  <p>{difficulty} level exercise</p>\n+                </TooltipContent>\n+              </Tooltip>\n             </div>\n-            <Badge variant=\"outline\" className=\"capitalize\">\n-              {prompt.type}\n-            </Badge>\n+          </TooltipProvider>\n+          \n+          {/* Action buttons */}\n+          <div className=\"flex items-center gap-2\">\n+            {hasNarration && (\n+              <Button \n+                variant=\"ghost\" \n+                size=\"sm\" \n+                onClick={playNarration} \n+                className=\"h-8 rounded-full bg-muted/50 hover:bg-primary/10\"\n+              >\n+                <Volume2 className=\"h-3 w-3 mr-1\" />\n+                <span className=\"text-xs\">Listen</span>\n+              </Button>\n+            )}\n+            \n+            {mediaAvailable && (\n+              <Button \n+                variant=\"outline\" \n+                size=\"sm\" \n+                onClick={displayMedia} \n+                className=\"h-8 rounded-full bg-primary/10 text-primary hover:bg-primary/20 border-primary/30\"\n+              >\n+                <Maximize2 className=\"h-3 w-3 mr-1\" />\n+                <span className=\"text-xs\">Fullscreen</span>\n+              </Button>\n+            )}\n+            \n+            <Button \n+              className={cn(\n+                \"h-8 rounded-full\", \n+                isCompleted ? \"bg-green-500 hover:bg-green-600\" : \"\"\n+              )} \n+              size=\"sm\"\n+              onClick={handleComplete}\n+            >\n+              <CheckCircle className=\"h-3 w-3 mr-1\" />\n+              <span className=\"text-xs\">{isCompleted ? \"Completed\" : \"Complete\"}</span>\n+            </Button>\n           </div>\n-        </CardContent>\n+        </CardFooter>\n       </Card>\n     </motion.div>\n   );\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741893512145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n           >\n             {prompt.type === 'image' && (\n               <div className=\"h-full w-full\">\n                 <ImagePreview\n-                  imageUrl={prompt.media}\n+                  imageUrl={prompt.media || ''}\n                   alt={prompt.text}\n                   className=\"w-full h-full object-cover transition-transform duration-700\"\n                   priority={false}\n                   style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n@@ -219,9 +219,9 @@\n             \n             {prompt.type === 'video' && (\n               <div className=\"h-full w-full\">\n                 <video\n-                  src={prompt.media}\n+                  src={prompt.media || ''}\n                   className=\"w-full h-full object-cover\"\n                   preload=\"metadata\"\n                   onClick={(e: React.MouseEvent) => {\n                     e.stopPropagation();\n"
                },
                {
                    "date": 1741894914852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,15 +205,17 @@\n             onMouseEnter={() => setMediaHovered(true)}\n             onMouseLeave={() => setMediaHovered(false)}\n           >\n             {prompt.type === 'image' && (\n-              <div className=\"h-full w-full\">\n+              <div \n+                className=\"h-full w-full transition-transform duration-700\" \n+                style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n+              >\n                 <ImagePreview\n                   imageUrl={prompt.media || ''}\n                   alt={prompt.text}\n-                  className=\"w-full h-full object-cover transition-transform duration-700\"\n+                  className=\"w-full h-full object-cover\"\n                   priority={false}\n-                  style={{ transform: mediaHovered ? 'scale(1.05)' : 'scale(1)' }}\n                 />\n               </div>\n             )}\n             \n"
                },
                {
                    "date": 1741895084921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n   const [mediaHovered, setMediaHovered] = useState(false);\n+  const [cardHovered, setCardHovered] = useState(false);\n   const [isCompleted, setIsCompleted] = useState(false);\n \n   // Function to dispatch media display event\n   const displayMedia = () => {\n@@ -172,22 +173,38 @@\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className={cn(\"group\", isCompleted && \"opacity-75\")}\n       onMouseEnter={() => {\n+        setCardHovered(true);\n         if (prompt && prompt.media) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n+      onMouseLeave={() => {\n+        setCardHovered(false);\n+      }}\n     >\n       <Card className={cn(\n-        \"overflow-hidden backdrop-blur-sm transition-all duration-300\",\n+        \"overflow-hidden backdrop-blur-sm transition-all duration-300 relative\",\n         \"border bg-gradient-to-b from-background to-background/70 hover:shadow-md hover:-translate-y-1\",\n         isCompleted && \"bg-muted/50 border-success/20\",\n         getDifficultyColor()\n       )}>\n+        {/* Title Overlay - shown only on hover */}\n+        <div \n+          className={cn(\n+            \"absolute inset-0 bg-gradient-to-t from-black/80 to-transparent z-20 flex flex-col justify-end p-4\",\n+            \"transition-opacity duration-300\",\n+            cardHovered ? \"opacity-100\" : \"opacity-0\",\n+            !mediaAvailable && \"from-black/60 to-black/30\" // Different gradient for cards without media\n+          )}\n+        >\n+          <h3 className=\"text-lg font-semibold text-white drop-shadow-md\">{prompt.text}</h3>\n+        </div>\n+\n         {/* Media preview (if available) */}\n-        {mediaAvailable && (\n+        {mediaAvailable ? (\n           <div \n             className=\"relative cursor-pointer overflow-hidden\" \n             style={{ height: '180px' }}\n             onClick={() => {\n@@ -286,14 +303,21 @@\n                 </Button>\n               </div>\n             )}\n           </div>\n+        ) : (\n+          // Placeholder for cards without media - shows a gradient background\n+          <div \n+            className=\"relative overflow-hidden bg-gradient-to-br from-primary/5 to-primary/10\" \n+            style={{ height: '120px' }}\n+          >\n+            <div className=\"absolute inset-0 flex items-center justify-center\">\n+              <ImageIcon className=\"h-10 w-10 text-muted-foreground/40\" />\n+            </div>\n+          </div>\n         )}\n \n         <CardContent className=\"p-4 space-y-4\">\n-          {/* Title */}\n-          <h3 className=\"text-lg font-medium leading-tight\">{prompt.text}</h3>\n-          \n           {/* Instructions if available */}\n           {prompt.content?.instructions && (\n             <div className=\"flex gap-2 items-start text-sm text-muted-foreground\">\n               <Lightbulb className=\"h-4 w-4 text-amber-500 flex-shrink-0 mt-1\" />\n"
                },
                {
                    "date": 1741895530038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n         <div \n           className={cn(\n             \"absolute inset-0 bg-gradient-to-t from-black/80 to-transparent z-20 flex flex-col justify-end p-4\",\n             \"transition-opacity duration-300\",\n-            cardHovered ? \"opacity-100\" : \"opacity-0\",\n+            cardHovered ? \"opacity-100\" : \"opacity-90\",\n             !mediaAvailable && \"from-black/60 to-black/30\" // Different gradient for cards without media\n           )}\n         >\n           <h3 className=\"text-lg font-semibold text-white drop-shadow-md\">{prompt.text}</h3>\n"
                },
                {
                    "date": 1741895545268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n         <div \n           className={cn(\n             \"absolute inset-0 bg-gradient-to-t from-black/80 to-transparent z-20 flex flex-col justify-end p-4\",\n             \"transition-opacity duration-300\",\n-            cardHovered ? \"opacity-100\" : \"opacity-90\",\n+            cardHovered ? \"opacity-100\" : \"opacity-0\",\n             !mediaAvailable && \"from-black/60 to-black/30\" // Different gradient for cards without media\n           )}\n         >\n           <h3 className=\"text-lg font-semibold text-white drop-shadow-md\">{prompt.text}</h3>\n"
                },
                {
                    "date": 1741895649056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,8 @@\n }\n \n export function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\n   const [mediaHovered, setMediaHovered] = useState(false);\n-  const [cardHovered, setCardHovered] = useState(false);\n   const [isCompleted, setIsCompleted] = useState(false);\n \n   // Function to dispatch media display event\n   const displayMedia = () => {\n@@ -173,38 +172,22 @@\n       animate={{ opacity: 1, y: 0 }}\n       transition={{ duration: 0.3, delay: index * 0.1 }}\n       className={cn(\"group\", isCompleted && \"opacity-75\")}\n       onMouseEnter={() => {\n-        setCardHovered(true);\n         if (prompt && prompt.media) {\n           console.log(\"Mouse entered exercise prompt:\", prompt.id || 'unknown');\n           displayMedia();\n         }\n       }}\n-      onMouseLeave={() => {\n-        setCardHovered(false);\n-      }}\n     >\n       <Card className={cn(\n-        \"overflow-hidden backdrop-blur-sm transition-all duration-300 relative\",\n+        \"overflow-hidden backdrop-blur-sm transition-all duration-300\",\n         \"border bg-gradient-to-b from-background to-background/70 hover:shadow-md hover:-translate-y-1\",\n         isCompleted && \"bg-muted/50 border-success/20\",\n         getDifficultyColor()\n       )}>\n-        {/* Title Overlay - shown only on hover */}\n-        <div \n-          className={cn(\n-            \"absolute inset-0 bg-gradient-to-t from-black/80 to-transparent z-20 flex flex-col justify-end p-4\",\n-            \"transition-opacity duration-300\",\n-            cardHovered ? \"opacity-100\" : \"opacity-0\",\n-            !mediaAvailable && \"from-black/60 to-black/30\" // Different gradient for cards without media\n-          )}\n-        >\n-          <h3 className=\"text-lg font-semibold text-white drop-shadow-md\">{prompt.text}</h3>\n-        </div>\n-\n         {/* Media preview (if available) */}\n-        {mediaAvailable ? (\n+        {mediaAvailable && (\n           <div \n             className=\"relative cursor-pointer overflow-hidden\" \n             style={{ height: '180px' }}\n             onClick={() => {\n@@ -303,21 +286,14 @@\n                 </Button>\n               </div>\n             )}\n           </div>\n-        ) : (\n-          // Placeholder for cards without media - shows a gradient background\n-          <div \n-            className=\"relative overflow-hidden bg-gradient-to-br from-primary/5 to-primary/10\" \n-            style={{ height: '120px' }}\n-          >\n-            <div className=\"absolute inset-0 flex items-center justify-center\">\n-              <ImageIcon className=\"h-10 w-10 text-muted-foreground/40\" />\n-            </div>\n-          </div>\n         )}\n \n         <CardContent className=\"p-4 space-y-4\">\n+          {/* Title */}\n+          <h3 className=\"text-lg font-medium leading-tight\">{prompt.text}</h3>\n+          \n           {/* Instructions if available */}\n           {prompt.content?.instructions && (\n             <div className=\"flex gap-2 items-start text-sm text-muted-foreground\">\n               <Lightbulb className=\"h-4 w-4 text-amber-500 flex-shrink-0 mt-1\" />\n"
                },
                {
                    "date": 1741895727277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,8 +252,18 @@\n                 style={{ transform: mediaHovered ? 'scale(1.1)' : 'scale(1)' }}\n               >\n                 <Maximize2 className=\"h-5 w-5\" />\n               </Button>\n+              \n+              {/* Display title on hover */}\n+              <div className={cn(\n+                \"absolute bottom-12 left-0 right-0 text-center transition-opacity duration-300 px-4\",\n+                mediaHovered ? \"opacity-100\" : \"opacity-0\"\n+              )}>\n+                <p className=\"text-white font-medium text-sm bg-black/50 backdrop-blur-sm p-2 rounded-md inline-block\">\n+                  {prompt.text}\n+                </p>\n+              </div>\n             </div>\n             \n             {/* Adding a badge with exercise number */}\n             <div className=\"absolute top-3 right-3 z-10\">\n@@ -289,10 +299,9 @@\n           </div>\n         )}\n \n         <CardContent className=\"p-4 space-y-4\">\n-          {/* Title */}\n-          <h3 className=\"text-lg font-medium leading-tight\">{prompt.text}</h3>\n+          {/* Title removed to make component sleeker - now only shows on hover */}\n           \n           {/* Instructions if available */}\n           {prompt.content?.instructions && (\n             <div className=\"flex gap-2 items-start text-sm text-muted-foreground\">\n@@ -391,11 +400,18 @@\n                   <p>Estimated time: {estimatedTime} minutes</p>\n                 </TooltipContent>\n               </Tooltip>\n               \n-              <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n-                {prompt.type}\n-              </Badge>\n+              <Tooltip>\n+                <TooltipTrigger asChild>\n+                  <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n+                    {prompt.type}\n+                  </Badge>\n+                </TooltipTrigger>\n+                <TooltipContent side=\"top\">\n+                  <p>{prompt.text}</p>\n+                </TooltipContent>\n+              </Tooltip>\n               \n               <Tooltip>\n                 <TooltipTrigger asChild>\n                   <Badge variant=\"outline\" className={cn(\"capitalize\", getDifficultyBadgeStyle())}>\n"
                },
                {
                    "date": 1741895795914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,9 @@\n         isCompleted && \"bg-muted/50 border-success/20\",\n         getDifficultyColor()\n       )}>\n         {/* Media preview (if available) */}\n-        {mediaAvailable ? (\n+        {mediaAvailable && (\n           <div \n             className=\"relative cursor-pointer overflow-hidden\" \n             style={{ height: '180px' }}\n             onClick={() => {\n@@ -252,18 +252,8 @@\n                 style={{ transform: mediaHovered ? 'scale(1.1)' : 'scale(1)' }}\n               >\n                 <Maximize2 className=\"h-5 w-5\" />\n               </Button>\n-              \n-              {/* Display title on hover */}\n-              <div className={cn(\n-                \"absolute bottom-12 left-0 right-0 text-center transition-opacity duration-300 px-4\",\n-                mediaHovered ? \"opacity-100\" : \"opacity-0\"\n-              )}>\n-                <p className=\"text-white font-medium text-sm bg-black/50 backdrop-blur-sm p-2 rounded-md inline-block\">\n-                  {prompt.text}\n-                </p>\n-              </div>\n             </div>\n             \n             {/* Adding a badge with exercise number */}\n             <div className=\"absolute top-3 right-3 z-10\">\n@@ -296,43 +286,13 @@\n                 </Button>\n               </div>\n             )}\n           </div>\n-        ) : (\n-          // No media fallback - show minimal title header\n-          <div className=\"p-4 border-b border-border/30\">\n-            <div className=\"flex justify-between items-center\">\n-              <Badge className=\"bg-primary/10 text-primary hover:bg-primary/20 border-primary/20\">\n-                Exercise {index + 1}\n-              </Badge>\n-              \n-              <TooltipProvider>\n-                <Tooltip>\n-                  <TooltipTrigger asChild>\n-                    <Button variant=\"ghost\" size=\"sm\" className=\"h-7 w-7 p-0 rounded-full\">\n-                      <Lightbulb className=\"h-4 w-4 text-amber-500\" />\n-                    </Button>\n-                  </TooltipTrigger>\n-                  <TooltipContent side=\"bottom\" className=\"max-w-[300px]\">\n-                    <p>{prompt.text}</p>\n-                  </TooltipContent>\n-                </Tooltip>\n-              </TooltipProvider>\n-            </div>\n-          </div>\n         )}\n \n-        <CardContent className={cn(\n-          \"p-4 space-y-4\",\n-          !mediaAvailable && \"pt-3\"  // Less padding on top when there's no media\n-        )}>\n-          {/* If no media and has instructions, show a hint that this is the title */}\n-          {!mediaAvailable && (\n-            <div className=\"mb-2 text-xs text-muted-foreground flex items-center gap-1.5\">\n-              <div className=\"w-1 h-1 rounded-full bg-primary/50\"></div>\n-              <span>{prompt.text.substring(0, 40)}{prompt.text.length > 40 ? '...' : ''}</span>\n-            </div>\n-          )}\n+        <CardContent className=\"p-4 space-y-4\">\n+          {/* Title */}\n+          <h3 className=\"text-lg font-medium leading-tight\">{prompt.text}</h3>\n           \n           {/* Instructions if available */}\n           {prompt.content?.instructions && (\n             <div className=\"flex gap-2 items-start text-sm text-muted-foreground\">\n@@ -431,18 +391,11 @@\n                   <p>Estimated time: {estimatedTime} minutes</p>\n                 </TooltipContent>\n               </Tooltip>\n               \n-              <Tooltip>\n-                <TooltipTrigger asChild>\n-                  <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n-                    {prompt.type}\n-                  </Badge>\n-                </TooltipTrigger>\n-                <TooltipContent side=\"top\">\n-                  <p>{prompt.text}</p>\n-                </TooltipContent>\n-              </Tooltip>\n+              <Badge variant=\"outline\" className=\"capitalize bg-background/50 text-xs\">\n+                {prompt.type}\n+              </Badge>\n               \n               <Tooltip>\n                 <TooltipTrigger asChild>\n                   <Badge variant=\"outline\" className={cn(\"capitalize\", getDifficultyBadgeStyle())}>\n"
                },
                {
                    "date": 1741898453154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,10 +116,10 @@\n   const isMountedRef = useRef(true);\n \n   // Enhanced function to dispatch media display event with debounce\n   const displayMedia = useCallback(() => {\n-    if (!prompt || !prompt.media || !isMountedRef.current) {\n-      console.log(\"No media available for this prompt or component unmounted\");\n+    if (!isMountedRef.current) {\n+      console.log(\"Component unmounted, canceling media display\");\n       return;\n     }\n     \n     // Prevent duplicate dispatch within 300ms\n@@ -134,53 +134,81 @@\n     try {\n       // Generate a unique identifier to ensure media updates\n       const timestamp = new Date().getTime();\n       \n-      // Check if URL is from external domains that need special handling\n-      const isExternalDomain = \n-        typeof prompt.media === 'string' && \n-        (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n+      // Check if we have media in the prompt\n+      const hasMedia = !!prompt?.media;\n       \n-      // Add a timestamp parameter to force media refresh\n-      let mediaUrl = prompt.media;\n-      if (mediaUrl.includes('?')) {\n-        mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n+      if (hasMedia) {\n+        // Check if URL is from external domains that need special handling\n+        const isExternalDomain = \n+          typeof prompt.media === 'string' && \n+          (prompt.media.includes('gifsec.com') || prompt.media.includes('gifdb.com'));\n+        \n+        // Add a timestamp parameter to force media refresh\n+        let mediaUrl = prompt.media;\n+        if (mediaUrl.includes('?')) {\n+          mediaUrl = `${mediaUrl}&_t=${timestamp}`;\n+        } else {\n+          mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n+        }\n+        \n+        // Create a persistent media object\n+        const persistentMedia = {\n+          mediaUrl,\n+          mediaType: prompt.type || 'image',\n+          mediaTitle: prompt.text || 'Exercise Media',\n+          sourceId: prompt.id || 'unknown',\n+          isExternalDomain,\n+          isPermanent: true,\n+          timestamp\n+        };\n+        \n+        // Store the selected media in localStorage to ensure it persists\n+        try {\n+          localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n+        } catch (e) {\n+          console.warn(\"Failed to store media in localStorage:\", e);\n+        }\n+\n+        // Create a properly typed custom event with the correct detail structure\n+        const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n+          bubbles: true,\n+          composed: true,\n+          detail: persistentMedia\n+        });\n+        \n+        // Dispatch only once - on document is sufficient\n+        document.dispatchEvent(mediaEvent);\n+        console.log(\"Media display event dispatched successfully\");\n       } else {\n-        mediaUrl = `${mediaUrl}?_t=${timestamp}`;\n+        // No media in this prompt - request fallback from LessonDialog\n+        console.log(\"No media available for this prompt, requesting fallback\");\n+        \n+        // Create a media request with fallback flag\n+        const fallbackRequest = {\n+          mediaUrl: null,  // This signals LessonDialog to use default lesson media\n+          sourceId: prompt?.id || `exercise-${index}`,\n+          requestFallback: true,  // Flag to indicate we're requesting a fallback\n+          fallbackType: \"lesson\",  // First try lesson default media\n+          fallbackText: \"No media available for this exercise\",\n+          timestamp\n+        };\n+        \n+        // Create and dispatch the fallback request event\n+        const fallbackEvent = new CustomEvent('displayMediaInRightPanel', {\n+          bubbles: true,\n+          composed: true,\n+          detail: fallbackRequest\n+        });\n+        \n+        document.dispatchEvent(fallbackEvent);\n+        console.log(\"Fallback media request dispatched\");\n       }\n-      \n-      // Create a persistent media object\n-      const persistentMedia = {\n-        mediaUrl,\n-        mediaType: prompt.type || 'image',\n-        mediaTitle: prompt.text || 'Exercise Media',\n-        sourceId: prompt.id || 'unknown',\n-        isExternalDomain,\n-        isPermanent: true,\n-        timestamp\n-      };\n-      \n-      // Store the selected media in localStorage to ensure it persists\n-      try {\n-        localStorage.setItem('lastSelectedMedia', JSON.stringify(persistentMedia));\n-      } catch (e) {\n-        console.warn(\"Failed to store media in localStorage:\", e);\n-      }\n-\n-      // Create a properly typed custom event with the correct detail structure\n-      const mediaEvent = new CustomEvent('displayMediaInRightPanel', {\n-        bubbles: true,\n-        composed: true,\n-        detail: persistentMedia\n-      });\n-      \n-      // Dispatch only once - on document is sufficient\n-      document.dispatchEvent(mediaEvent);\n-      console.log(\"Media display event dispatched successfully\");\n     } catch (err) {\n       console.error(\"Error dispatching media event:\", err);\n     }\n-  }, [prompt]);\n+  }, [prompt, index]);\n \n   // Enhanced function to forcefully stop all audio\n   const stopAudio = useCallback(() => {\n     if (!isMountedRef.current) return;\n"
                }
            ],
            "date": 1739911900314,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Volume2, MessageCircle, Clock, Video, ImageIcon, Lightbulb } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface ExercisePromptViewProps {\r\n  prompt: {\r\n    id: string;\r\n    text: string;\r\n    type: 'image' | 'video' | 'gif';\r\n    media: string | null;\r\n    narration: string | null;\r\n    saytext: string | null;\r\n    content?: {\r\n      instructions?: string;\r\n      writingPrompt?: string;\r\n      speakingPrompt?: string;\r\n    };\r\n    metadata?: {\r\n      difficulty?: 'beginner' | 'intermediate' | 'advanced';\r\n      estimatedTime?: number;\r\n    };\r\n  };\r\n  index: number;\r\n}\r\n\r\nexport function ExercisePromptView({ prompt, index }: ExercisePromptViewProps) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3, delay: index * 0.1 }}\r\n      className=\"group\"\r\n    >\r\n      <Card className=\"overflow-hidden border-primary/10 bg-card/50 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\r\n        <CardHeader className=\"relative overflow-hidden\">\r\n          {/* Floating badge with shine effect */}\r\n          <div className=\"absolute top-4 left-4 z-10 flex gap-2\">\r\n            <Badge \r\n              variant=\"outline\" \r\n              className=\"bg-background/80 backdrop-blur-sm border-primary/20\"\r\n            >\r\n              Exercise {index + 1}\r\n            </Badge>\r\n            {prompt.metadata?.difficulty && (\r\n              <Badge \r\n                variant=\"outline\" \r\n                className={cn(\r\n                  \"capitalize bg-background/80 backdrop-blur-sm\",\r\n                  prompt.metadata.difficulty === 'beginner' && \"text-green-500 border-green-500/20\",\r\n                  prompt.metadata.difficulty === 'intermediate' && \"text-yellow-500 border-yellow-500/20\",\r\n                  prompt.metadata.difficulty === 'advanced' && \"text-red-500 border-red-500/20\"\r\n                )}\r\n              >\r\n                {prompt.metadata.difficulty}\r\n              </Badge>\r\n            )}\r\n          </div>\r\n\r\n          {/* Media Section */}\r\n          {prompt.media && (\r\n            <div className=\"relative rounded-lg overflow-hidden group/media\">\r\n              {prompt.type === 'image' && (\r\n                <div className=\"relative h-[200px] overflow-hidden\">\r\n                  <img\r\n                    src={prompt.media}\r\n                    alt={prompt.text}\r\n                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover/media:scale-110\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover/media:opacity-100 transition-opacity duration-300\" />\r\n                </div>\r\n              )}\r\n              {prompt.type === 'video' && (\r\n                <div className=\"relative h-[200px]\">\r\n                  <video\r\n                    src={prompt.media}\r\n                    controls\r\n                    className=\"w-full h-full object-cover\"\r\n                    preload=\"metadata\"\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Title and Description */}\r\n          <div className={cn(\"space-y-2\", prompt.media && \"mt-4\")}>\r\n            <CardTitle className=\"text-lg font-semibold leading-tight\">\r\n              {prompt.text}\r\n            </CardTitle>\r\n            {prompt.content?.instructions && (\r\n              <CardDescription className=\"flex items-center gap-2 text-primary/80\">\r\n                <Lightbulb className=\"h-4 w-4\" />\r\n                {prompt.content.instructions}\r\n              </CardDescription>\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-4\">\r\n          {/* Narration Section */}\r\n          {prompt.narration && (\r\n            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\r\n              <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                <Volume2 className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Narration</h4>\r\n              </div>\r\n              <p className=\"text-muted-foreground\">{prompt.narration}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Say Text Section */}\r\n          {prompt.saytext && (\r\n            <div className=\"relative p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm group-hover:border-primary/20 transition-colors duration-300\">\r\n              <div className=\"flex items-center gap-2 mb-2 text-primary\">\r\n                <MessageCircle className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Say Text</h4>\r\n              </div>\r\n              <p className=\"text-muted-foreground\">{prompt.saytext}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Writing/Speaking Prompts */}\r\n          {(prompt.content?.writingPrompt || prompt.content?.speakingPrompt) && (\r\n            <div className=\"grid gap-4\">\r\n              {prompt.content.writingPrompt && (\r\n                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n                  <h4 className=\"font-medium mb-2 text-primary\">Writing Prompt</h4>\r\n                  <p className=\"text-muted-foreground\">{prompt.content.writingPrompt}</p>\r\n                </div>\r\n              )}\r\n              {prompt.content.speakingPrompt && (\r\n                <div className=\"p-4 rounded-lg border border-primary/10 bg-background/50 backdrop-blur-sm\">\r\n                  <h4 className=\"font-medium mb-2 text-primary\">Speaking Prompt</h4>\r\n                  <p className=\"text-muted-foreground\">{prompt.content.speakingPrompt}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Metadata Footer */}\r\n          <div className=\"flex items-center justify-between text-sm text-muted-foreground pt-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Clock className=\"h-4 w-4\" />\r\n              <span>{prompt.metadata?.estimatedTime || 5} mins</span>\r\n            </div>\r\n            <Badge variant=\"outline\" className=\"capitalize\">\r\n              {prompt.type}\r\n            </Badge>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n} "
        }
    ]
}