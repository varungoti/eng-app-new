{
    "sourceFile": "src/components/invoice/InvoiceGenerator.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1739352868311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739352934688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useState } from 'react';\r\n import { useSchools } from '../../hooks/useSchools';\r\n import { useToast } from '../../hooks/useToast';\r\n import { formatCurrency } from '../../lib/utils/format';\r\n+import { Plus, Trash2 } from 'lucide-react';\r\n \r\n interface InvoiceItem {\r\n   description: string;\r\n   quantity: number;\r\n@@ -57,8 +58,9 @@\n     });\r\n   };\r\n \r\n   const removeItem = (index: number) => {\r\n+    if (invoiceData.items.length === 1) return;\r\n     const newItems = invoiceData.items.filter((_, i) => i !== index);\r\n     setInvoiceData({ ...invoiceData, items: newItems });\r\n   };\r\n \r\n@@ -130,36 +132,37 @@\n               type=\"button\"\r\n               onClick={addItem}\r\n               className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n             >\r\n+              <Plus className=\"h-4 w-4 mr-2\" />\r\n               Add Item\r\n             </button>\r\n           </div>\r\n \r\n           <div className=\"overflow-x-auto\">\r\n             <table className=\"min-w-full divide-y divide-gray-200\">\r\n-              <thead>\r\n+              <thead className=\"bg-gray-50\">\r\n                 <tr>\r\n-                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Description</th>\r\n-                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n-                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\r\n-                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n-                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n+                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Description</th>\r\n+                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n+                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\r\n+                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n+                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                 </tr>\r\n               </thead>\r\n               <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                 {invoiceData.items.map((item, index) => (\r\n                   <tr key={index}>\r\n-                    <td className=\"px-6 py-4\">\r\n+                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       <input\r\n                         type=\"text\"\r\n                         value={item.description}\r\n                         onChange={(e) => handleItemChange(index, 'description', e.target.value)}\r\n                         className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                         required\r\n                       />\r\n                     </td>\r\n-                    <td className=\"px-6 py-4\">\r\n+                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       <input\r\n                         type=\"number\"\r\n                         min=\"1\"\r\n                         value={item.quantity}\r\n@@ -167,9 +170,9 @@\n                         className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                         required\r\n                       />\r\n                     </td>\r\n-                    <td className=\"px-6 py-4\">\r\n+                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       <input\r\n                         type=\"number\"\r\n                         min=\"0\"\r\n                         step=\"0.01\"\r\n@@ -178,28 +181,30 @@\n                         className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                         required\r\n                       />\r\n                     </td>\r\n-                    <td className=\"px-6 py-4\">\r\n+                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                       {formatCurrency(item.amount)}\r\n                     </td>\r\n-                    <td className=\"px-6 py-4\">\r\n+                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                       <button\r\n                         type=\"button\"\r\n                         onClick={() => removeItem(index)}\r\n-                        className=\"text-red-600 hover:text-red-900\"\r\n                         disabled={invoiceData.items.length === 1}\r\n+                        className={`text-red-600 hover:text-red-900 ${\r\n+                          invoiceData.items.length === 1 ? 'opacity-50 cursor-not-allowed' : ''\r\n+                        }`}\r\n                       >\r\n-                        Remove\r\n+                        <Trash2 className=\"h-4 w-4\" />\r\n                       </button>\r\n                     </td>\r\n                   </tr>\r\n                 ))}\r\n               </tbody>\r\n               <tfoot>\r\n                 <tr>\r\n-                  <td colSpan={3} className=\"px-6 py-4 text-right font-medium\">Total:</td>\r\n-                  <td className=\"px-6 py-4 font-medium\">{formatCurrency(getTotal())}</td>\r\n+                  <td colSpan={3} className=\"px-6 py-4 text-right font-medium text-gray-900\">Total:</td>\r\n+                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{formatCurrency(getTotal())}</td>\r\n                   <td></td>\r\n                 </tr>\r\n               </tfoot>\r\n             </table>\r\n"
                },
                {
                    "date": 1739352966404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,14 +83,15 @@\n       <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n         {/* Invoice Header */}\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n           <div>\r\n-            <label className=\"block text-sm font-medium text-gray-700\">School</label>\r\n+            <label className=\"block text-sm font-medium text-gray-700\" id=\"school-label\">School</label>\r\n             <select\r\n               value={invoiceData.schoolId}\r\n               onChange={(e) => setInvoiceData({ ...invoiceData, schoolId: e.target.value })}\r\n               className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n               required\r\n+              aria-labelledby=\"school-label\"\r\n             >\r\n               <option value=\"\">Select School</option>\r\n               {schools.map((school) => (\r\n                 <option key={school.id} value={school.id}>\r\n@@ -158,8 +159,10 @@\n                         value={item.description}\r\n                         onChange={(e) => handleItemChange(index, 'description', e.target.value)}\r\n                         className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                         required\r\n+                        aria-label={`Item ${index + 1} description`}\r\n+                        placeholder=\"Enter item description\"\r\n                       />\r\n                     </td>\r\n                     <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       <input\r\n@@ -168,8 +171,10 @@\n                         value={item.quantity}\r\n                         onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\r\n                         className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                         required\r\n+                        aria-label={`Item ${index + 1} quantity`}\r\n+                        placeholder=\"Enter quantity\"\r\n                       />\r\n                     </td>\r\n                     <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       <input\r\n@@ -179,8 +184,10 @@\n                         value={item.rate}\r\n                         onChange={(e) => handleItemChange(index, 'rate', e.target.value)}\r\n                         className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                         required\r\n+                        aria-label={`Item ${index + 1} rate`}\r\n+                        placeholder=\"Enter rate\"\r\n                       />\r\n                     </td>\r\n                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                       {formatCurrency(item.amount)}\r\n@@ -192,8 +199,9 @@\n                         disabled={invoiceData.items.length === 1}\r\n                         className={`text-red-600 hover:text-red-900 ${\r\n                           invoiceData.items.length === 1 ? 'opacity-50 cursor-not-allowed' : ''\r\n                         }`}\r\n+                        aria-label={`Remove item ${index + 1}`}\r\n                       >\r\n                         <Trash2 className=\"h-4 w-4\" />\r\n                       </button>\r\n                     </td>\r\n@@ -212,14 +220,16 @@\n         </div>\r\n \r\n         {/* Notes */}\r\n         <div>\r\n-          <label className=\"block text-sm font-medium text-gray-700\">Notes</label>\r\n+          <label className=\"block text-sm font-medium text-gray-700\" id=\"notes-label\">Notes</label>\r\n           <textarea\r\n             value={invoiceData.notes}\r\n             onChange={(e) => setInvoiceData({ ...invoiceData, notes: e.target.value })}\r\n             rows={3}\r\n             className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n+            aria-labelledby=\"notes-label\"\r\n+            placeholder=\"Enter any additional notes\"\r\n           />\r\n         </div>\r\n \r\n         {/* Submit Button */}\r\n"
                }
            ],
            "date": 1739352868311,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { useSchools } from '../../hooks/useSchools';\r\nimport { useToast } from '../../hooks/useToast';\r\nimport { formatCurrency } from '../../lib/utils/format';\r\n\r\ninterface InvoiceItem {\r\n  description: string;\r\n  quantity: number;\r\n  rate: number;\r\n  amount: number;\r\n}\r\n\r\ninterface InvoiceData {\r\n  invoiceNumber: string;\r\n  date: string;\r\n  dueDate: string;\r\n  schoolId: string;\r\n  items: InvoiceItem[];\r\n  notes?: string;\r\n}\r\n\r\nexport const InvoiceGenerator: React.FC = () => {\r\n  const { schools } = useSchools();\r\n  const { showToast } = useToast();\r\n  const [invoiceData, setInvoiceData] = useState<InvoiceData>({\r\n    invoiceNumber: `INV-${Date.now()}`,\r\n    date: new Date().toISOString().split('T')[0],\r\n    dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    schoolId: '',\r\n    items: [{ description: '', quantity: 1, rate: 0, amount: 0 }],\r\n    notes: ''\r\n  });\r\n\r\n  const calculateAmount = (quantity: number, rate: number) => {\r\n    return quantity * rate;\r\n  };\r\n\r\n  const handleItemChange = (index: number, field: keyof InvoiceItem, value: string | number) => {\r\n    const newItems = [...invoiceData.items];\r\n    newItems[index] = {\r\n      ...newItems[index],\r\n      [field]: value,\r\n      amount: field === 'quantity' || field === 'rate' \r\n        ? calculateAmount(\r\n            field === 'quantity' ? Number(value) : newItems[index].quantity,\r\n            field === 'rate' ? Number(value) : newItems[index].rate\r\n          )\r\n        : newItems[index].amount\r\n    };\r\n    setInvoiceData({ ...invoiceData, items: newItems });\r\n  };\r\n\r\n  const addItem = () => {\r\n    setInvoiceData({\r\n      ...invoiceData,\r\n      items: [...invoiceData.items, { description: '', quantity: 1, rate: 0, amount: 0 }]\r\n    });\r\n  };\r\n\r\n  const removeItem = (index: number) => {\r\n    const newItems = invoiceData.items.filter((_, i) => i !== index);\r\n    setInvoiceData({ ...invoiceData, items: newItems });\r\n  };\r\n\r\n  const getTotal = () => {\r\n    return invoiceData.items.reduce((sum, item) => sum + item.amount, 0);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      // TODO: Implement invoice submission\r\n      showToast('Invoice generated successfully', { type: 'success' });\r\n    } catch (err) {\r\n      showToast('Failed to generate invoice', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-lg rounded-lg p-6\">\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Invoice Header */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">School</label>\r\n            <select\r\n              value={invoiceData.schoolId}\r\n              onChange={(e) => setInvoiceData({ ...invoiceData, schoolId: e.target.value })}\r\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n              required\r\n            >\r\n              <option value=\"\">Select School</option>\r\n              {schools.map((school) => (\r\n                <option key={school.id} value={school.id}>\r\n                  {school.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Invoice Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={invoiceData.date}\r\n                onChange={(e) => setInvoiceData({ ...invoiceData, date: e.target.value })}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Due Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={invoiceData.dueDate}\r\n                onChange={(e) => setInvoiceData({ ...invoiceData, dueDate: e.target.value })}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Invoice Items */}\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Items</h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={addItem}\r\n              className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n            >\r\n              Add Item\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Description</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rate</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {invoiceData.items.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td className=\"px-6 py-4\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={item.description}\r\n                        onChange={(e) => handleItemChange(index, 'description', e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                        required\r\n                      />\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        value={item.quantity}\r\n                        onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                        required\r\n                      />\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        value={item.rate}\r\n                        onChange={(e) => handleItemChange(index, 'rate', e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                        required\r\n                      />\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {formatCurrency(item.amount)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeItem(index)}\r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                        disabled={invoiceData.items.length === 1}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colSpan={3} className=\"px-6 py-4 text-right font-medium\">Total:</td>\r\n                  <td className=\"px-6 py-4 font-medium\">{formatCurrency(getTotal())}</td>\r\n                  <td></td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Notes */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Notes</label>\r\n          <textarea\r\n            value={invoiceData.notes}\r\n            onChange={(e) => setInvoiceData({ ...invoiceData, notes: e.target.value })}\r\n            rows={3}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Generate Invoice\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};"
        }
    ]
}