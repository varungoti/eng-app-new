{
    "sourceFile": "src/components/events/EventManager.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1740772174586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740772196878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n       <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n         <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n         <p className=\"mt-2 text-sm text-red-600\">{error}</p>\r\n         <button\r\n+        \r\n           onClick={() => window.location.reload()}\r\n           className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n         >\r\n           Retry\r\n"
                },
                {
                    "date": 1740772204292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,10 @@\n       <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n         <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n         <p className=\"mt-2 text-sm text-red-600\">{error}</p>\r\n         <button\r\n-        \r\n+          title=\"Retry\"\r\n+          type=\"button\"\r\n           onClick={() => window.location.reload()}\r\n           className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n         >\r\n           Retry\r\n@@ -128,8 +129,10 @@\n     <>\r\n       <div className=\"mb-6 flex justify-between items-center\">\r\n         <div className=\"flex space-x-4\">\r\n           <button\r\n+            title=\"List View\"\r\n+            type=\"button\"\r\n             onClick={() => setView('list')}\r\n             className={`inline-flex items-center px-3 py-2 border rounded-md text-sm font-medium ${\r\n               view === 'list'\r\n                 ? 'border-indigo-500 text-indigo-600 bg-indigo-50'\r\n"
                },
                {
                    "date": 1740772269353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,13 @@\n       showToast('Failed to add event', { type: 'error' });\r\n     }\r\n   };\r\n \r\n-  const handleEditEvent = async (event: Event) => {\r\n+  const handleEditEvent = async (eventData: Omit<Event, 'id'>) => {\r\n+    if (!editingEvent) return;\r\n+    \r\n     try {\r\n-      await updateEvent(event.id, event);\r\n+      await updateEvent(editingEvent.id, { ...eventData, id: editingEvent.id });\r\n       showToast('Event updated successfully', { type: 'success' });\r\n       setEditingEvent(null);\r\n     } catch (err) {\r\n       showToast('Failed to update event', { type: 'error' });\r\n@@ -142,8 +144,10 @@\n             <List className=\"h-4 w-4 mr-2\" />\r\n             List View\r\n           </button>\r\n           <button\r\n+            title=\"Calendar View\"\r\n+            type=\"button\"\r\n             onClick={() => setView('calendar')}\r\n             className={`inline-flex items-center px-3 py-2 border rounded-md text-sm font-medium ${\r\n               view === 'calendar'\r\n                 ? 'border-indigo-500 text-indigo-600 bg-indigo-50'\r\n"
                }
            ],
            "date": 1740772174586,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport EventList from './EventList';\r\nimport EventCalendar from './EventCalendar';\r\nimport EventFilters, { EventFilters as EventFiltersType } from './EventFilters';\r\nimport EventFormModal from './EventFormModal';\r\nimport type { Event } from './EventCard';\r\nimport { usePermissions } from '../../hooks/usePermissions';\r\nimport { useEvents } from '../../hooks/useEvents';\r\nimport { useToast } from '../../hooks/useToast';\r\nimport { Loader2, Calendar, List } from 'lucide-react';\r\n\r\ninterface EventManagerProps {\r\n  canCreate: boolean;\r\n  canEdit: boolean;\r\n  canDelete: boolean;\r\n  userRole: string;\r\n}\r\n\r\nconst EventManager: React.FC<EventManagerProps> = ({\r\n  canCreate,\r\n  canEdit,\r\n  canDelete,\r\n  userRole\r\n}) => {\r\n  const { can } = usePermissions();\r\n  const { events, loading, error, addEvent, updateEvent, deleteEvent } = useEvents();\r\n  const { showToast } = useToast();\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [editingEvent, setEditingEvent] = useState<Event | null>(null);\r\n  const [view, setView] = useState<'list' | 'calendar'>('list');\r\n  const [filters, setFilters] = useState<EventFiltersType>({\r\n    search: '',\r\n    type: '',\r\n    status: '',\r\n    dateRange: 'all'\r\n  });\r\n\r\n  const canManageEvents = canCreate || canEdit || canDelete;\r\n\r\n  const filteredEvents = events.filter(event => {\r\n    if (filters.search && !event.title.toLowerCase().includes(filters.search.toLowerCase())) {\r\n      return false;\r\n    }\r\n    if (filters.type && event.type !== filters.type) {\r\n      return false;\r\n    }\r\n    if (filters.status && event.status !== filters.status) {\r\n      return false;\r\n    }\r\n    if (filters.dateRange !== 'all') {\r\n      const eventDate = new Date(event.startDate);\r\n      const now = new Date();\r\n      switch (filters.dateRange) {\r\n        case 'upcoming':\r\n          return eventDate > now;\r\n        case 'past':\r\n          return eventDate < now;\r\n        case 'today':\r\n          return eventDate.toDateString() === now.toDateString();\r\n        case 'week':\r\n          const weekStart = new Date(now.setDate(now.getDate() - now.getDay()));\r\n          const weekEnd = new Date(now.setDate(now.getDate() - now.getDay() + 6));\r\n          return eventDate >= weekStart && eventDate <= weekEnd;\r\n        case 'month':\r\n          return eventDate.getMonth() === now.getMonth() && \r\n                eventDate.getFullYear() === now.getFullYear();\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n  const handleAddEvent = async (eventData: Omit<Event, 'id'>) => {\r\n    try {\r\n      await addEvent(eventData);\r\n      showToast('Event added successfully', { type: 'success' });\r\n      setIsAddModalOpen(false);\r\n    } catch (err) {\r\n      showToast('Failed to add event', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleEditEvent = async (event: Event) => {\r\n    try {\r\n      await updateEvent(event.id, event);\r\n      showToast('Event updated successfully', { type: 'success' });\r\n      setEditingEvent(null);\r\n    } catch (err) {\r\n      showToast('Failed to update event', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (id: string) => {\r\n    try {\r\n      await deleteEvent(id);\r\n      showToast('Event deleted successfully', { type: 'success' });\r\n    } catch (err) {\r\n      showToast('Failed to delete event', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"text-center space-y-2\">\r\n          <Loader2 className=\"h-8 w-8 text-indigo-600 animate-spin mx-auto\" />\r\n          <p className=\"text-sm text-gray-500\">Loading events...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n        <h3 className=\"text-lg font-medium text-red-800\">Error</h3>\r\n        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"mt-4 inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-6 flex justify-between items-center\">\r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            onClick={() => setView('list')}\r\n            className={`inline-flex items-center px-3 py-2 border rounded-md text-sm font-medium ${\r\n              view === 'list'\r\n                ? 'border-indigo-500 text-indigo-600 bg-indigo-50'\r\n                : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\r\n            }`}\r\n          >\r\n            <List className=\"h-4 w-4 mr-2\" />\r\n            List View\r\n          </button>\r\n          <button\r\n            onClick={() => setView('calendar')}\r\n            className={`inline-flex items-center px-3 py-2 border rounded-md text-sm font-medium ${\r\n              view === 'calendar'\r\n                ? 'border-indigo-500 text-indigo-600 bg-indigo-50'\r\n                : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\r\n            }`}\r\n          >\r\n            <Calendar className=\"h-4 w-4 mr-2\" />\r\n            Calendar View\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <EventFilters\r\n        filters={filters}\r\n        onFilterChange={setFilters}\r\n      />\r\n\r\n      <div className=\"mt-6\">\r\n        {view === 'list' ? (\r\n          <EventList\r\n            events={filteredEvents}\r\n            onAddEvent={canCreate ? () => setIsAddModalOpen(true) : undefined}\r\n            onEditEvent={canEdit ? setEditingEvent : undefined}\r\n            onDeleteEvent={canDelete ? handleDeleteEvent : undefined}\r\n            canManageEvents={canManageEvents}\r\n            userRole={userRole}\r\n          />\r\n        ) : (\r\n          <EventCalendar\r\n            events={filteredEvents}\r\n            onEventClick={(event) => canEdit ? setEditingEvent(event) : undefined}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <EventList\r\n        events={events}\r\n        onAddEvent={canCreate ? () => setIsAddModalOpen(true) : undefined}\r\n        onEditEvent={canEdit ? setEditingEvent : undefined}\r\n        onDeleteEvent={canDelete ? handleDeleteEvent : undefined}\r\n        canManageEvents={canManageEvents}\r\n        userRole={userRole}\r\n      />\r\n      \r\n      {/* Add Event Modal */}\r\n      {isAddModalOpen && (\r\n        <EventFormModal\r\n          onClose={() => setIsAddModalOpen(false)}\r\n          onSubmit={handleAddEvent}\r\n        />\r\n      )}\r\n      \r\n      {/* Edit Event Modal */}\r\n      {editingEvent && (\r\n        <EventFormModal\r\n          event={editingEvent}\r\n          onClose={() => setEditingEvent(null)}\r\n          onSubmit={handleEditEvent}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventManager;"
        }
    ]
}