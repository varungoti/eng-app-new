{
    "sourceFile": "src/components/lesson/FullscreenMediaViewer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1741337347006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741803539268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,81 @@\n- \n\\ No newline at end of file\n+\"use client\";\r\n+\r\n+import React from 'react';\r\n+import Image from 'next/image';\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Minimize2, X } from 'lucide-react';\r\n+import { motion } from 'framer-motion';\r\n+\r\n+interface FullscreenMediaViewerProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  mediaUrl: string;\r\n+  mediaType: string;\r\n+  mediaTitle: string;\r\n+}\r\n+\r\n+export function FullscreenMediaViewer({\r\n+  isOpen,\r\n+  onClose,\r\n+  mediaUrl,\r\n+  mediaType,\r\n+  mediaTitle\r\n+}: FullscreenMediaViewerProps) {\r\n+  if (!isOpen) return null;\r\n+\r\n+  return (\r\n+    <motion.div\r\n+      initial={{ opacity: 0 }}\r\n+      animate={{ opacity: 1 }}\r\n+      exit={{ opacity: 0 }}\r\n+      className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/90\"\r\n+    >\r\n+      {/* Controls */}\r\n+      <div className=\"absolute top-4 right-4 flex gap-2\">\r\n+        <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\r\n+          <Minimize2 className=\"h-5 w-5 text-white\" />\r\n+        </Button>\r\n+        <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\r\n+          <X className=\"h-5 w-5 text-white\" />\r\n+        </Button>\r\n+      </div>\r\n+      \r\n+      {/* Media display */}\r\n+      <div className=\"w-[90%] h-[90%] max-w-6xl\">\r\n+        {mediaType === 'image' ? (\r\n+          <div className=\"relative w-full h-full\">\r\n+            <Image\r\n+              src={mediaUrl}\r\n+              alt={mediaTitle}\r\n+              fill\r\n+              sizes=\"(max-width: 768px) 100vw, 80vw\"\r\n+              className=\"object-contain\"\r\n+              priority\r\n+              unoptimized={mediaUrl.includes('gifsec.com') || mediaUrl.includes('gifdb.com')}\r\n+              onError={(e) => {\r\n+                console.error(\"Error loading fullscreen image\");\r\n+                (e.target as HTMLImageElement).style.display = 'none';\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        ) : mediaType === 'video' ? (\r\n+          <video\r\n+            src={mediaUrl}\r\n+            controls\r\n+            className=\"w-full h-full object-contain\"\r\n+            autoPlay\r\n+          />\r\n+        ) : (\r\n+          <div className=\"flex items-center justify-center h-full text-white\">\r\n+            <p>Unsupported media type</p>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+      \r\n+      {/* Title */}\r\n+      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-black/50 px-4 py-2 rounded-full text-white\">\r\n+        {mediaTitle}\r\n+      </div>\r\n+    </motion.div>\r\n+  );\r\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741872853168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n \"use client\";\r\n \r\n-import React from 'react';\r\n+import React, { useState, useRef } from 'react';\r\n import Image from 'next/image';\r\n import { Button } from \"@/components/ui/button\";\r\n-import { Minimize2, X } from 'lucide-react';\r\n+import { Minimize2, X, Play, Pause, Volume2, VolumeX, SkipForward, SkipBack } from 'lucide-react';\r\n import { motion } from 'framer-motion';\r\n+import SafeImage from '@/components/ui/safe-image';\r\n \r\n interface FullscreenMediaViewerProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n@@ -20,8 +21,33 @@\n   mediaUrl,\r\n   mediaType,\r\n   mediaTitle\r\n }: FullscreenMediaViewerProps) {\r\n+  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n+  const [isMuted, setIsMuted] = useState<boolean>(false);\r\n+  const videoRef = useRef<HTMLVideoElement>(null);\r\n+  \r\n+  // Function to toggle play/pause\r\n+  const togglePlay = () => {\r\n+    if (!videoRef.current) return;\r\n+    \r\n+    if (isPlaying) {\r\n+      videoRef.current.pause();\r\n+    } else {\r\n+      videoRef.current.play();\r\n+    }\r\n+    \r\n+    setIsPlaying(!isPlaying);\r\n+  };\r\n+  \r\n+  // Function to toggle mute\r\n+  const toggleMute = () => {\r\n+    if (!videoRef.current) return;\r\n+    \r\n+    videoRef.current.muted = !isMuted;\r\n+    setIsMuted(!isMuted);\r\n+  };\r\n+  \r\n   if (!isOpen) return null;\r\n \r\n   return (\r\n     <motion.div\r\n@@ -29,43 +55,63 @@\n       animate={{ opacity: 1 }}\r\n       exit={{ opacity: 0 }}\r\n       className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/90\"\r\n     >\r\n-      {/* Controls */}\r\n+      {/* Top Controls */}\r\n       <div className=\"absolute top-4 right-4 flex gap-2\">\r\n-        <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\r\n-          <Minimize2 className=\"h-5 w-5 text-white\" />\r\n+        <Button variant=\"ghost\" size=\"sm\" onClick={onClose} className=\"text-white hover:bg-white/20\">\r\n+          <Minimize2 className=\"h-5 w-5\" />\r\n         </Button>\r\n-        <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\r\n-          <X className=\"h-5 w-5 text-white\" />\r\n+        <Button variant=\"ghost\" size=\"sm\" onClick={onClose} className=\"text-white hover:bg-white/20\">\r\n+          <X className=\"h-5 w-5\" />\r\n         </Button>\r\n       </div>\r\n       \r\n       {/* Media display */}\r\n       <div className=\"w-[90%] h-[90%] max-w-6xl\">\r\n         {mediaType === 'image' ? (\r\n           <div className=\"relative w-full h-full\">\r\n-            <Image\r\n+            <SafeImage\r\n               src={mediaUrl}\r\n               alt={mediaTitle}\r\n               fill\r\n-              sizes=\"(max-width: 768px) 100vw, 80vw\"\r\n+              containerClassName=\"w-full h-full\"\r\n               className=\"object-contain\"\r\n-              priority\r\n-              unoptimized={mediaUrl.includes('gifsec.com') || mediaUrl.includes('gifdb.com')}\r\n-              onError={(e) => {\r\n-                console.error(\"Error loading fullscreen image\");\r\n-                (e.target as HTMLImageElement).style.display = 'none';\r\n-              }}\r\n+              fallbackSrc=\"https://placehold.co/600x400?text=Image+Not+Available\"\r\n             />\r\n           </div>\r\n-        ) : mediaType === 'video' ? (\r\n-          <video\r\n-            src={mediaUrl}\r\n-            controls\r\n-            className=\"w-full h-full object-contain\"\r\n-            autoPlay\r\n-          />\r\n+        ) : mediaType === 'video' || mediaType === 'gif' ? (\r\n+          <div className=\"relative w-full h-full flex flex-col items-center justify-center\">\r\n+            <video\r\n+              ref={videoRef}\r\n+              src={mediaUrl}\r\n+              className=\"w-full h-auto max-h-[80vh] object-contain\"\r\n+              autoPlay\r\n+              playsInline\r\n+              controls={false}\r\n+              muted={isMuted}\r\n+              onPlay={() => setIsPlaying(true)}\r\n+              onPause={() => setIsPlaying(false)}\r\n+              onEnded={() => setIsPlaying(false)}\r\n+              onClick={togglePlay}\r\n+            />\r\n+            \r\n+            {/* Video Controls */}\r\n+            <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 flex items-center gap-2 bg-black/50 px-4 py-2 rounded-full text-white\">\r\n+              <Button variant=\"ghost\" size=\"sm\" onClick={togglePlay} className=\"text-white hover:bg-white/20\">\r\n+                {isPlaying ? <Pause className=\"h-5 w-5\" /> : <Play className=\"h-5 w-5\" />}\r\n+              </Button>\r\n+              <Button variant=\"ghost\" size=\"sm\" onClick={toggleMute} className=\"text-white hover:bg-white/20\">\r\n+                {isMuted ? <VolumeX className=\"h-5 w-5\" /> : <Volume2 className=\"h-5 w-5\" />}\r\n+              </Button>\r\n+              <Button variant=\"ghost\" size=\"sm\" onClick={() => videoRef.current && (videoRef.current.currentTime -= 10)} className=\"text-white hover:bg-white/20\">\r\n+                <SkipBack className=\"h-5 w-5\" />\r\n+              </Button>\r\n+              <Button variant=\"ghost\" size=\"sm\" onClick={() => videoRef.current && (videoRef.current.currentTime += 10)} className=\"text-white hover:bg-white/20\">\r\n+                <SkipForward className=\"h-5 w-5\" />\r\n+              </Button>\r\n+            </div>\r\n+          </div>\r\n         ) : (\r\n           <div className=\"flex items-center justify-center h-full text-white\">\r\n             <p>Unsupported media type</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1741886399281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n \"use client\";\r\n \r\n-import React, { useState, useRef } from 'react';\r\n+import React from 'react';\r\n import Image from 'next/image';\r\n import { Button } from \"@/components/ui/button\";\r\n-import { Minimize2, X, Play, Pause, Volume2, VolumeX, SkipForward, SkipBack } from 'lucide-react';\r\n+import { Minimize2, X } from 'lucide-react';\r\n import { motion } from 'framer-motion';\r\n import SafeImage from '@/components/ui/safe-image';\r\n \r\n interface FullscreenMediaViewerProps {\r\n@@ -21,33 +21,8 @@\n   mediaUrl,\r\n   mediaType,\r\n   mediaTitle\r\n }: FullscreenMediaViewerProps) {\r\n-  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n-  const [isMuted, setIsMuted] = useState<boolean>(false);\r\n-  const videoRef = useRef<HTMLVideoElement>(null);\r\n-  \r\n-  // Function to toggle play/pause\r\n-  const togglePlay = () => {\r\n-    if (!videoRef.current) return;\r\n-    \r\n-    if (isPlaying) {\r\n-      videoRef.current.pause();\r\n-    } else {\r\n-      videoRef.current.play();\r\n-    }\r\n-    \r\n-    setIsPlaying(!isPlaying);\r\n-  };\r\n-  \r\n-  // Function to toggle mute\r\n-  const toggleMute = () => {\r\n-    if (!videoRef.current) return;\r\n-    \r\n-    videoRef.current.muted = !isMuted;\r\n-    setIsMuted(!isMuted);\r\n-  };\r\n-  \r\n   if (!isOpen) return null;\r\n \r\n   return (\r\n     <motion.div\r\n@@ -55,9 +30,9 @@\n       animate={{ opacity: 1 }}\r\n       exit={{ opacity: 0 }}\r\n       className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/90\"\r\n     >\r\n-      {/* Top Controls */}\r\n+      {/* Controls */}\r\n       <div className=\"absolute top-4 right-4 flex gap-2\">\r\n         <Button variant=\"ghost\" size=\"sm\" onClick={onClose} className=\"text-white hover:bg-white/20\">\r\n           <Minimize2 className=\"h-5 w-5\" />\r\n         </Button>\r\n@@ -79,39 +54,14 @@\n               fallbackSrc=\"https://placehold.co/600x400?text=Image+Not+Available\"\r\n             />\r\n           </div>\r\n         ) : mediaType === 'video' || mediaType === 'gif' ? (\r\n-          <div className=\"relative w-full h-full flex flex-col items-center justify-center\">\r\n-            <video\r\n-              ref={videoRef}\r\n-              src={mediaUrl}\r\n-              className=\"w-full h-auto max-h-[80vh] object-contain\"\r\n-              autoPlay\r\n-              playsInline\r\n-              controls={false}\r\n-              muted={isMuted}\r\n-              onPlay={() => setIsPlaying(true)}\r\n-              onPause={() => setIsPlaying(false)}\r\n-              onEnded={() => setIsPlaying(false)}\r\n-              onClick={togglePlay}\r\n-            />\r\n-            \r\n-            {/* Video Controls */}\r\n-            <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 flex items-center gap-2 bg-black/50 px-4 py-2 rounded-full text-white\">\r\n-              <Button variant=\"ghost\" size=\"sm\" onClick={togglePlay} className=\"text-white hover:bg-white/20\">\r\n-                {isPlaying ? <Pause className=\"h-5 w-5\" /> : <Play className=\"h-5 w-5\" />}\r\n-              </Button>\r\n-              <Button variant=\"ghost\" size=\"sm\" onClick={toggleMute} className=\"text-white hover:bg-white/20\">\r\n-                {isMuted ? <VolumeX className=\"h-5 w-5\" /> : <Volume2 className=\"h-5 w-5\" />}\r\n-              </Button>\r\n-              <Button variant=\"ghost\" size=\"sm\" onClick={() => videoRef.current && (videoRef.current.currentTime -= 10)} className=\"text-white hover:bg-white/20\">\r\n-                <SkipBack className=\"h-5 w-5\" />\r\n-              </Button>\r\n-              <Button variant=\"ghost\" size=\"sm\" onClick={() => videoRef.current && (videoRef.current.currentTime += 10)} className=\"text-white hover:bg-white/20\">\r\n-                <SkipForward className=\"h-5 w-5\" />\r\n-              </Button>\r\n-            </div>\r\n-          </div>\r\n+          <video\r\n+            src={mediaUrl}\r\n+            controls\r\n+            className=\"w-full h-full object-contain\"\r\n+            autoPlay\r\n+          />\r\n         ) : (\r\n           <div className=\"flex items-center justify-center h-full text-white\">\r\n             <p>Unsupported media type</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1741887910779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,77 +1,1 @@\n-\"use client\";\r\n-\r\n-import React from 'react';\r\n-import Image from 'next/image';\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Minimize2, X } from 'lucide-react';\r\n-import { motion } from 'framer-motion';\r\n-import SafeImage from '@/components/ui/safe-image';\r\n-\r\n-interface FullscreenMediaViewerProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  mediaUrl: string;\r\n-  mediaType: string;\r\n-  mediaTitle: string;\r\n-}\r\n-\r\n-export function FullscreenMediaViewer({\r\n-  isOpen,\r\n-  onClose,\r\n-  mediaUrl,\r\n-  mediaType,\r\n-  mediaTitle\r\n-}: FullscreenMediaViewerProps) {\r\n-  if (!isOpen) return null;\r\n-\r\n-  return (\r\n-    <motion.div\r\n-      initial={{ opacity: 0 }}\r\n-      animate={{ opacity: 1 }}\r\n-      exit={{ opacity: 0 }}\r\n-      className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/90\"\r\n-    >\r\n-      {/* Controls */}\r\n-      <div className=\"absolute top-4 right-4 flex gap-2\">\r\n-        <Button variant=\"ghost\" size=\"sm\" onClick={onClose} className=\"text-white hover:bg-white/20\">\r\n-          <Minimize2 className=\"h-5 w-5\" />\r\n-        </Button>\r\n-        <Button variant=\"ghost\" size=\"sm\" onClick={onClose} className=\"text-white hover:bg-white/20\">\r\n-          <X className=\"h-5 w-5\" />\r\n-        </Button>\r\n-      </div>\r\n-      \r\n-      {/* Media display */}\r\n-      <div className=\"w-[90%] h-[90%] max-w-6xl\">\r\n-        {mediaType === 'image' ? (\r\n-          <div className=\"relative w-full h-full\">\r\n-            <SafeImage\r\n-              src={mediaUrl}\r\n-              alt={mediaTitle}\r\n-              fill\r\n-              containerClassName=\"w-full h-full\"\r\n-              className=\"object-contain\"\r\n-              fallbackSrc=\"https://placehold.co/600x400?text=Image+Not+Available\"\r\n-            />\r\n-          </div>\r\n-        ) : mediaType === 'video' || mediaType === 'gif' ? (\r\n-          <video\r\n-            src={mediaUrl}\r\n-            controls\r\n-            className=\"w-full h-full object-contain\"\r\n-            autoPlay\r\n-          />\r\n-        ) : (\r\n-          <div className=\"flex items-center justify-center h-full text-white\">\r\n-            <p>Unsupported media type</p>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-      \r\n-      {/* Title */}\r\n-      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-black/50 px-4 py-2 rounded-full text-white\">\r\n-        {mediaTitle}\r\n-      </div>\r\n-    </motion.div>\r\n-  );\r\n-} \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1741337347006,
            "name": "Commit-0",
            "content": " "
        }
    ]
}