{
    "sourceFile": "src/db/migrations/20250410-complete-school-models.sql",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746696379091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746696379091,
            "name": "Commit-0",
            "content": "-- Migration: Complete School Models\r\n-- Timestamp: 2025-04-10\r\n\r\n-- Up Migration\r\n---------------------------------------------------------------------------\r\n\r\nBEGIN;\r\n\r\n-- Add school settings table\r\nCREATE TABLE IF NOT EXISTS school_settings (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  school_id uuid NOT NULL,\r\n  setting_key text NOT NULL,\r\n  setting_value jsonb NOT NULL,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT school_settings_pkey PRIMARY KEY (id),\r\n  CONSTRAINT school_settings_school_id_fkey FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE,\r\n  CONSTRAINT school_settings_school_key_key UNIQUE (school_id, setting_key)\r\n);\r\n\r\n-- Create indexes for school settings\r\nCREATE INDEX IF NOT EXISTS idx_school_settings_school_id ON school_settings(school_id);\r\nCREATE INDEX IF NOT EXISTS idx_school_settings_key ON school_settings(setting_key);\r\n\r\n-- Add school analytics table\r\nCREATE TABLE IF NOT EXISTS school_analytics (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  school_id uuid NOT NULL,\r\n  total_students integer DEFAULT 0,\r\n  active_students integer DEFAULT 0,\r\n  total_teachers integer DEFAULT 0,\r\n  active_teachers integer DEFAULT 0,\r\n  total_lessons integer DEFAULT 0,\r\n  completed_lessons integer DEFAULT 0,\r\n  average_engagement_score float,\r\n  last_updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT school_analytics_pkey PRIMARY KEY (id),\r\n  CONSTRAINT school_analytics_school_id_fkey FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE,\r\n  CONSTRAINT school_analytics_school_id_key UNIQUE (school_id)\r\n);\r\n\r\n-- Create indexes for school analytics\r\nCREATE INDEX IF NOT EXISTS idx_school_analytics_school_id ON school_analytics(school_id);\r\nCREATE INDEX IF NOT EXISTS idx_school_analytics_engagement_score ON school_analytics(average_engagement_score);\r\n\r\n-- Add school departments table\r\nCREATE TABLE IF NOT EXISTS school_departments (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  school_id uuid NOT NULL,\r\n  name text NOT NULL,\r\n  description text,\r\n  head_teacher_id uuid,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT school_departments_pkey PRIMARY KEY (id),\r\n  CONSTRAINT school_departments_school_id_fkey FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE,\r\n  CONSTRAINT school_departments_head_teacher_id_fkey FOREIGN KEY (head_teacher_id) REFERENCES users(id),\r\n  CONSTRAINT school_departments_school_name_key UNIQUE (school_id, name)\r\n);\r\n\r\n-- Create indexes for school departments\r\nCREATE INDEX IF NOT EXISTS idx_school_departments_school_id ON school_departments(school_id);\r\nCREATE INDEX IF NOT EXISTS idx_school_departments_head_teacher_id ON school_departments(head_teacher_id);\r\n\r\n-- Add school events table\r\nCREATE TABLE IF NOT EXISTS school_events (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  school_id uuid NOT NULL,\r\n  title text NOT NULL,\r\n  description text,\r\n  event_type text NOT NULL,\r\n  start_date timestamp with time zone NOT NULL,\r\n  end_date timestamp with time zone NOT NULL,\r\n  location text,\r\n  organizer_id uuid,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT school_events_pkey PRIMARY KEY (id),\r\n  CONSTRAINT school_events_school_id_fkey FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE,\r\n  CONSTRAINT school_events_organizer_id_fkey FOREIGN KEY (organizer_id) REFERENCES users(id),\r\n  CONSTRAINT school_events_event_type_check CHECK (event_type IN ('academic', 'cultural', 'sports', 'other'))\r\n);\r\n\r\n-- Create indexes for school events\r\nCREATE INDEX IF NOT EXISTS idx_school_events_school_id ON school_events(school_id);\r\nCREATE INDEX IF NOT EXISTS idx_school_events_organizer_id ON school_events(organizer_id);\r\nCREATE INDEX IF NOT EXISTS idx_school_events_start_date ON school_events(start_date);\r\nCREATE INDEX IF NOT EXISTS idx_school_events_event_type ON school_events(event_type);\r\n\r\n-- Add school announcements table\r\nCREATE TABLE IF NOT EXISTS school_announcements (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  school_id uuid NOT NULL,\r\n  title text NOT NULL,\r\n  content text NOT NULL,\r\n  priority text NOT NULL DEFAULT 'normal',\r\n  start_date timestamp with time zone NOT NULL,\r\n  end_date timestamp with time zone,\r\n  created_by uuid NOT NULL,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT school_announcements_pkey PRIMARY KEY (id),\r\n  CONSTRAINT school_announcements_school_id_fkey FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE,\r\n  CONSTRAINT school_announcements_created_by_fkey FOREIGN KEY (created_by) REFERENCES users(id),\r\n  CONSTRAINT school_announcements_priority_check CHECK (priority IN ('low', 'normal', 'high', 'urgent'))\r\n);\r\n\r\n-- Create indexes for school announcements\r\nCREATE INDEX IF NOT EXISTS idx_school_announcements_school_id ON school_announcements(school_id);\r\nCREATE INDEX IF NOT EXISTS idx_school_announcements_created_by ON school_announcements(created_by);\r\nCREATE INDEX IF NOT EXISTS idx_school_announcements_priority ON school_announcements(priority);\r\nCREATE INDEX IF NOT EXISTS idx_school_announcements_start_date ON school_announcements(start_date);\r\n\r\n-- Add comments for documentation\r\nCOMMENT ON TABLE school_settings IS 'Stores school-specific configuration settings';\r\nCOMMENT ON TABLE school_analytics IS 'Tracks school-wide usage and performance metrics';\r\nCOMMENT ON TABLE school_departments IS 'Manages school departments and their heads';\r\nCOMMENT ON TABLE school_events IS 'Tracks school events and activities';\r\nCOMMENT ON TABLE school_announcements IS 'Manages school-wide announcements';\r\n\r\n-- Create function to update school analytics\r\nCREATE OR REPLACE FUNCTION update_school_analytics(\r\n  p_school_id uuid,\r\n  p_total_students integer DEFAULT NULL,\r\n  p_active_students integer DEFAULT NULL,\r\n  p_total_teachers integer DEFAULT NULL,\r\n  p_active_teachers integer DEFAULT NULL,\r\n  p_total_lessons integer DEFAULT NULL,\r\n  p_completed_lessons integer DEFAULT NULL,\r\n  p_engagement_score float DEFAULT NULL\r\n)\r\nRETURNS void AS $$\r\nBEGIN\r\n  INSERT INTO school_analytics (\r\n    school_id,\r\n    total_students,\r\n    active_students,\r\n    total_teachers,\r\n    active_teachers,\r\n    total_lessons,\r\n    completed_lessons,\r\n    average_engagement_score\r\n  ) VALUES (\r\n    p_school_id,\r\n    COALESCE(p_total_students, 0),\r\n    COALESCE(p_active_students, 0),\r\n    COALESCE(p_total_teachers, 0),\r\n    COALESCE(p_active_teachers, 0),\r\n    COALESCE(p_total_lessons, 0),\r\n    COALESCE(p_completed_lessons, 0),\r\n    p_engagement_score\r\n  )\r\n  ON CONFLICT (school_id) DO UPDATE\r\n  SET\r\n    total_students = COALESCE(p_total_students, school_analytics.total_students),\r\n    active_students = COALESCE(p_active_students, school_analytics.active_students),\r\n    total_teachers = COALESCE(p_total_teachers, school_analytics.total_teachers),\r\n    active_teachers = COALESCE(p_active_teachers, school_analytics.active_teachers),\r\n    total_lessons = COALESCE(p_total_lessons, school_analytics.total_lessons),\r\n    completed_lessons = COALESCE(p_completed_lessons, school_analytics.completed_lessons),\r\n    average_engagement_score = COALESCE(p_engagement_score, school_analytics.average_engagement_score),\r\n    last_updated_at = now();\r\nEND;\r\n$$ LANGUAGE plpgsql;\r\n\r\nCOMMIT;\r\n\r\n-- Down Migration\r\n---------------------------------------------------------------------------\r\n\r\nBEGIN;\r\n\r\n-- Drop functions\r\nDROP FUNCTION IF EXISTS update_school_analytics(uuid, integer, integer, integer, integer, integer, integer, float);\r\n\r\n-- Drop comments\r\nCOMMENT ON TABLE school_announcements IS NULL;\r\nCOMMENT ON TABLE school_events IS NULL;\r\nCOMMENT ON TABLE school_departments IS NULL;\r\nCOMMENT ON TABLE school_analytics IS NULL;\r\nCOMMENT ON TABLE school_settings IS NULL;\r\n\r\n-- Drop indexes\r\nDROP INDEX IF EXISTS idx_school_announcements_start_date;\r\nDROP INDEX IF EXISTS idx_school_announcements_priority;\r\nDROP INDEX IF EXISTS idx_school_announcements_created_by;\r\nDROP INDEX IF EXISTS idx_school_announcements_school_id;\r\nDROP INDEX IF EXISTS idx_school_events_event_type;\r\nDROP INDEX IF EXISTS idx_school_events_start_date;\r\nDROP INDEX IF EXISTS idx_school_events_organizer_id;\r\nDROP INDEX IF EXISTS idx_school_events_school_id;\r\nDROP INDEX IF EXISTS idx_school_departments_head_teacher_id;\r\nDROP INDEX IF EXISTS idx_school_departments_school_id;\r\nDROP INDEX IF EXISTS idx_school_analytics_engagement_score;\r\nDROP INDEX IF EXISTS idx_school_analytics_school_id;\r\nDROP INDEX IF EXISTS idx_school_settings_key;\r\nDROP INDEX IF EXISTS idx_school_settings_school_id;\r\n\r\n-- Drop tables\r\nDROP TABLE IF EXISTS school_announcements;\r\nDROP TABLE IF EXISTS school_events;\r\nDROP TABLE IF EXISTS school_departments;\r\nDROP TABLE IF EXISTS school_analytics;\r\nDROP TABLE IF EXISTS school_settings;\r\n\r\nCOMMIT; "
        }
    ]
}