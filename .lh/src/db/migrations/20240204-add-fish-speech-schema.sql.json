{
    "sourceFile": "src/db/migrations/20240204-add-fish-speech-schema.sql",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1739014929908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739014980346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,196 @@\n- \n\\ No newline at end of file\n+-- Migration: Add Fish Speech Schema\n+-- Timestamp: 2024-02-04\n+\n+-- Up Migration\n+---------------------------------------------------------------------------\n+\n+BEGIN;\n+\n+-- Create voices table for managing TTS voices\n+CREATE TABLE IF NOT EXISTS voices (\n+  id uuid NOT NULL DEFAULT gen_random_uuid(),\n+  name text NOT NULL,\n+  description text,\n+  language text NOT NULL,\n+  gender text NOT NULL CHECK (gender IN ('male', 'female')),\n+  sample_url text NOT NULL,\n+  is_default boolean DEFAULT false,\n+  school_id uuid NOT NULL,\n+  created_at timestamp with time zone DEFAULT now(),\n+  updated_at timestamp with time zone DEFAULT now(),\n+  CONSTRAINT voices_pkey PRIMARY KEY (id),\n+  CONSTRAINT voices_school_id_fkey FOREIGN KEY (school_id) REFERENCES schools(id)\n+);\n+\n+-- Add partial unique index to ensure only one default voice per school\n+CREATE UNIQUE INDEX IF NOT EXISTS idx_voices_school_default \n+ON voices (school_id) \n+WHERE is_default = true;\n+\n+-- Create indexes for voices\n+CREATE INDEX IF NOT EXISTS idx_voices_school_id ON voices(school_id);\n+CREATE INDEX IF NOT EXISTS idx_voices_is_default ON voices(is_default);\n+\n+-- Add voice_id to lessons table\n+ALTER TABLE lessons \n+ADD COLUMN IF NOT EXISTS voice_id uuid REFERENCES voices(id);\n+\n+-- Add voice_id to activities table\n+ALTER TABLE activities \n+ADD COLUMN IF NOT EXISTS voice_id uuid REFERENCES voices(id);\n+\n+-- Add voice_id to questions table\n+ALTER TABLE questions \n+ADD COLUMN IF NOT EXISTS voice_id uuid REFERENCES voices(id);\n+\n+-- Add voice_id to exercise_prompts table\n+ALTER TABLE exercise_prompts \n+ADD COLUMN IF NOT EXISTS voice_id uuid REFERENCES voices(id);\n+\n+-- Create function to ensure only one default voice per school\n+DROP FUNCTION IF EXISTS ensure_single_default_voice() CASCADE;\n+CREATE OR REPLACE FUNCTION ensure_single_default_voice()\n+RETURNS TRIGGER AS $$\n+BEGIN\n+  IF NEW.is_default THEN\n+    UPDATE voices\n+    SET is_default = false\n+    WHERE school_id = NEW.school_id\n+      AND id != NEW.id\n+      AND is_default = true;\n+  END IF;\n+  RETURN NEW;\n+END;\n+$$ LANGUAGE plpgsql;\n+\n+-- Create trigger for voices table\n+DROP TRIGGER IF EXISTS ensure_single_default_voice_trigger ON voices;\n+CREATE TRIGGER ensure_single_default_voice_trigger\n+BEFORE INSERT OR UPDATE ON voices\n+FOR EACH ROW\n+EXECUTE FUNCTION ensure_single_default_voice();\n+\n+-- Create voice_settings table for additional voice configuration\n+CREATE TABLE IF NOT EXISTS voice_settings (\n+  id uuid NOT NULL DEFAULT gen_random_uuid(),\n+  voice_id uuid NOT NULL,\n+  pitch_adjustment float DEFAULT 1.0,\n+  speed_adjustment float DEFAULT 1.0,\n+  volume_adjustment float DEFAULT 1.0,\n+  effects jsonb DEFAULT '{}',\n+  created_at timestamp with time zone DEFAULT now(),\n+  updated_at timestamp with time zone DEFAULT now(),\n+  CONSTRAINT voice_settings_pkey PRIMARY KEY (id),\n+  CONSTRAINT voice_settings_voice_id_fkey FOREIGN KEY (voice_id) REFERENCES voices(id) ON DELETE CASCADE,\n+  CONSTRAINT voice_settings_voice_id_key UNIQUE (voice_id)\n+);\n+\n+-- Create voice_usage_logs table for tracking and analytics\n+CREATE TABLE IF NOT EXISTS voice_usage_logs (\n+  id uuid NOT NULL DEFAULT gen_random_uuid(),\n+  voice_id uuid NOT NULL,\n+  user_id uuid NOT NULL,\n+  content_type text NOT NULL CHECK (content_type IN ('lesson', 'activity', 'question', 'exercise')),\n+  content_id uuid NOT NULL,\n+  duration integer, -- in seconds\n+  characters_processed integer,\n+  performance_metrics jsonb DEFAULT '{}',\n+  created_at timestamp with time zone DEFAULT now(),\n+  CONSTRAINT voice_usage_logs_pkey PRIMARY KEY (id),\n+  CONSTRAINT voice_usage_logs_voice_id_fkey FOREIGN KEY (voice_id) REFERENCES voices(id),\n+  CONSTRAINT voice_usage_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)\n+);\n+\n+-- Create index for voice usage analytics\n+CREATE INDEX IF NOT EXISTS idx_voice_usage_logs_voice_id ON voice_usage_logs(voice_id);\n+CREATE INDEX IF NOT EXISTS idx_voice_usage_logs_user_id ON voice_usage_logs(user_id);\n+CREATE INDEX IF NOT EXISTS idx_voice_usage_logs_created_at ON voice_usage_logs(created_at);\n+\n+-- Add voice preference to user_preferences\n+ALTER TABLE user_preferences\n+ADD COLUMN IF NOT EXISTS preferred_voice_id uuid REFERENCES voices(id);\n+\n+-- Create function to log voice usage\n+DROP FUNCTION IF EXISTS log_voice_usage(uuid, uuid, text, uuid, integer, integer, jsonb);\n+CREATE OR REPLACE FUNCTION log_voice_usage(\n+  p_voice_id uuid,\n+  p_user_id uuid,\n+  p_content_type text,\n+  p_content_id uuid,\n+  p_duration integer,\n+  p_characters_processed integer,\n+  p_performance_metrics jsonb DEFAULT '{}'\n+)\n+RETURNS uuid AS $$\n+DECLARE\n+  v_log_id uuid;\n+BEGIN\n+  INSERT INTO voice_usage_logs (\n+    voice_id,\n+    user_id,\n+    content_type,\n+    content_id,\n+    duration,\n+    characters_processed,\n+    performance_metrics\n+  ) VALUES (\n+    p_voice_id,\n+    p_user_id,\n+    p_content_type,\n+    p_content_id,\n+    p_duration,\n+    p_characters_processed,\n+    p_performance_metrics\n+  ) RETURNING id INTO v_log_id;\n+  \n+  RETURN v_log_id;\n+END;\n+$$ LANGUAGE plpgsql;\n+\n+-- Add comments for documentation\n+COMMENT ON TABLE voices IS 'Stores TTS voices available in the system';\n+COMMENT ON TABLE voice_settings IS 'Stores configuration settings for each voice';\n+COMMENT ON TABLE voice_usage_logs IS 'Tracks usage of TTS voices for analytics';\n+COMMENT ON FUNCTION ensure_single_default_voice() IS 'Ensures only one default voice exists per school';\n+COMMENT ON FUNCTION log_voice_usage(uuid, uuid, text, uuid, integer, integer, jsonb) IS 'Helper function to log voice usage with performance metrics';\n+\n+COMMIT;\n+\n+-- Down Migration\n+---------------------------------------------------------------------------\n+\n+BEGIN;\n+\n+-- Drop comments\n+COMMENT ON FUNCTION log_voice_usage(uuid, uuid, text, uuid, integer, integer, jsonb) IS NULL;\n+COMMENT ON FUNCTION ensure_single_default_voice() IS NULL;\n+COMMENT ON TABLE voice_usage_logs IS NULL;\n+COMMENT ON TABLE voice_settings IS NULL;\n+COMMENT ON TABLE voices IS NULL;\n+\n+-- Drop functions and triggers\n+DROP FUNCTION IF EXISTS log_voice_usage(uuid, uuid, text, uuid, integer, integer, jsonb);\n+DROP TRIGGER IF EXISTS ensure_single_default_voice_trigger ON voices;\n+DROP FUNCTION IF EXISTS ensure_single_default_voice();\n+\n+-- Drop indexes\n+DROP INDEX IF EXISTS idx_voice_usage_logs_created_at;\n+DROP INDEX IF EXISTS idx_voice_usage_logs_user_id;\n+DROP INDEX IF EXISTS idx_voice_usage_logs_voice_id;\n+DROP INDEX IF EXISTS idx_voices_is_default;\n+DROP INDEX IF EXISTS idx_voices_school_id;\n+DROP INDEX IF EXISTS idx_voices_school_default;\n+\n+-- Remove voice_id columns\n+ALTER TABLE exercise_prompts DROP COLUMN IF EXISTS voice_id;\n+ALTER TABLE questions DROP COLUMN IF EXISTS voice_id;\n+ALTER TABLE activities DROP COLUMN IF EXISTS voice_id;\n+ALTER TABLE lessons DROP COLUMN IF EXISTS voice_id;\n+ALTER TABLE user_preferences DROP COLUMN IF EXISTS preferred_voice_id;\n+\n+-- Drop tables\n+DROP TABLE IF EXISTS voice_usage_logs;\n+DROP TABLE IF EXISTS voice_settings;\n+DROP TABLE IF EXISTS voices;\n+\n+COMMIT; \n\\ No newline at end of file\n"
                }
            ],
            "date": 1739014929908,
            "name": "Commit-0",
            "content": " "
        }
    ]
}