{
    "sourceFile": "src/db/migrations/20250410-complete-content-models.sql",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746696344806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746696344806,
            "name": "Commit-0",
            "content": "-- Migration: Complete Content Models\r\n-- Timestamp: 2025-04-10\r\n\r\n-- Up Migration\r\n---------------------------------------------------------------------------\r\n\r\nBEGIN;\r\n\r\n-- Add content versioning support\r\nCREATE TABLE IF NOT EXISTS content_versions (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  content_id uuid NOT NULL,\r\n  version_number integer NOT NULL,\r\n  content_data jsonb NOT NULL,\r\n  created_by uuid NOT NULL,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT content_versions_pkey PRIMARY KEY (id),\r\n  CONSTRAINT content_versions_content_id_fkey FOREIGN KEY (content_id) REFERENCES lessons(id) ON DELETE CASCADE,\r\n  CONSTRAINT content_versions_created_by_fkey FOREIGN KEY (created_by) REFERENCES users(id),\r\n  CONSTRAINT content_versions_content_version_key UNIQUE (content_id, version_number)\r\n);\r\n\r\n-- Create indexes for content versions\r\nCREATE INDEX IF NOT EXISTS idx_content_versions_content_id ON content_versions(content_id);\r\nCREATE INDEX IF NOT EXISTS idx_content_versions_created_by ON content_versions(created_by);\r\n\r\n-- Add content metadata table\r\nCREATE TABLE IF NOT EXISTS content_metadata (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  content_id uuid NOT NULL,\r\n  metadata_type text NOT NULL,\r\n  metadata_value jsonb NOT NULL,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT content_metadata_pkey PRIMARY KEY (id),\r\n  CONSTRAINT content_metadata_content_id_fkey FOREIGN KEY (content_id) REFERENCES lessons(id) ON DELETE CASCADE,\r\n  CONSTRAINT content_metadata_content_type_key UNIQUE (content_id, metadata_type)\r\n);\r\n\r\n-- Create indexes for content metadata\r\nCREATE INDEX IF NOT EXISTS idx_content_metadata_content_id ON content_metadata(content_id);\r\nCREATE INDEX IF NOT EXISTS idx_content_metadata_type ON content_metadata(metadata_type);\r\n\r\n-- Add content tags table\r\nCREATE TABLE IF NOT EXISTS content_tags (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  name text NOT NULL,\r\n  description text,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT content_tags_pkey PRIMARY KEY (id),\r\n  CONSTRAINT content_tags_name_key UNIQUE (name)\r\n);\r\n\r\n-- Create content-tag relationship table\r\nCREATE TABLE IF NOT EXISTS content_tag_relations (\r\n  content_id uuid NOT NULL,\r\n  tag_id uuid NOT NULL,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT content_tag_relations_pkey PRIMARY KEY (content_id, tag_id),\r\n  CONSTRAINT content_tag_relations_content_id_fkey FOREIGN KEY (content_id) REFERENCES lessons(id) ON DELETE CASCADE,\r\n  CONSTRAINT content_tag_relations_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES content_tags(id) ON DELETE CASCADE\r\n);\r\n\r\n-- Create indexes for content tag relations\r\nCREATE INDEX IF NOT EXISTS idx_content_tag_relations_content_id ON content_tag_relations(content_id);\r\nCREATE INDEX IF NOT EXISTS idx_content_tag_relations_tag_id ON content_tag_relations(tag_id);\r\n\r\n-- Add content approval workflow tables\r\nCREATE TABLE IF NOT EXISTS content_approvals (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  content_id uuid NOT NULL,\r\n  status text NOT NULL CHECK (status IN ('pending', 'approved', 'rejected')),\r\n  requested_by uuid NOT NULL,\r\n  reviewed_by uuid,\r\n  review_notes text,\r\n  created_at timestamp with time zone DEFAULT now(),\r\n  updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT content_approvals_pkey PRIMARY KEY (id),\r\n  CONSTRAINT content_approvals_content_id_fkey FOREIGN KEY (content_id) REFERENCES lessons(id) ON DELETE CASCADE,\r\n  CONSTRAINT content_approvals_requested_by_fkey FOREIGN KEY (requested_by) REFERENCES users(id),\r\n  CONSTRAINT content_approvals_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES users(id)\r\n);\r\n\r\n-- Create indexes for content approvals\r\nCREATE INDEX IF NOT EXISTS idx_content_approvals_content_id ON content_approvals(content_id);\r\nCREATE INDEX IF NOT EXISTS idx_content_approvals_status ON content_approvals(status);\r\nCREATE INDEX IF NOT EXISTS idx_content_approvals_requested_by ON content_approvals(requested_by);\r\nCREATE INDEX IF NOT EXISTS idx_content_approvals_reviewed_by ON content_approvals(reviewed_by);\r\n\r\n-- Add content analytics table\r\nCREATE TABLE IF NOT EXISTS content_analytics (\r\n  id uuid NOT NULL DEFAULT gen_random_uuid(),\r\n  content_id uuid NOT NULL,\r\n  view_count integer DEFAULT 0,\r\n  completion_count integer DEFAULT 0,\r\n  average_completion_time integer,\r\n  difficulty_rating float,\r\n  engagement_score float,\r\n  last_updated_at timestamp with time zone DEFAULT now(),\r\n  CONSTRAINT content_analytics_pkey PRIMARY KEY (id),\r\n  CONSTRAINT content_analytics_content_id_fkey FOREIGN KEY (content_id) REFERENCES lessons(id) ON DELETE CASCADE,\r\n  CONSTRAINT content_analytics_content_id_key UNIQUE (content_id)\r\n);\r\n\r\n-- Create indexes for content analytics\r\nCREATE INDEX IF NOT EXISTS idx_content_analytics_content_id ON content_analytics(content_id);\r\nCREATE INDEX IF NOT EXISTS idx_content_analytics_engagement_score ON content_analytics(engagement_score);\r\n\r\n-- Add comments for documentation\r\nCOMMENT ON TABLE content_versions IS 'Tracks version history of content';\r\nCOMMENT ON TABLE content_metadata IS 'Stores additional metadata for content';\r\nCOMMENT ON TABLE content_tags IS 'Manages content categorization tags';\r\nCOMMENT ON TABLE content_tag_relations IS 'Maps content to tags';\r\nCOMMENT ON TABLE content_approvals IS 'Manages content approval workflow';\r\nCOMMENT ON TABLE content_analytics IS 'Tracks content usage and performance metrics';\r\n\r\n-- Create function to update content analytics\r\nCREATE OR REPLACE FUNCTION update_content_analytics(\r\n  p_content_id uuid,\r\n  p_view_count integer DEFAULT NULL,\r\n  p_completion_count integer DEFAULT NULL,\r\n  p_completion_time integer DEFAULT NULL,\r\n  p_difficulty_rating float DEFAULT NULL,\r\n  p_engagement_score float DEFAULT NULL\r\n)\r\nRETURNS void AS $$\r\nBEGIN\r\n  INSERT INTO content_analytics (\r\n    content_id,\r\n    view_count,\r\n    completion_count,\r\n    average_completion_time,\r\n    difficulty_rating,\r\n    engagement_score\r\n  ) VALUES (\r\n    p_content_id,\r\n    COALESCE(p_view_count, 0),\r\n    COALESCE(p_completion_count, 0),\r\n    p_completion_time,\r\n    p_difficulty_rating,\r\n    p_engagement_score\r\n  )\r\n  ON CONFLICT (content_id) DO UPDATE\r\n  SET\r\n    view_count = content_analytics.view_count + COALESCE(p_view_count, 0),\r\n    completion_count = content_analytics.completion_count + COALESCE(p_completion_count, 0),\r\n    average_completion_time = CASE \r\n      WHEN p_completion_time IS NOT NULL \r\n      THEN (content_analytics.average_completion_time + p_completion_time) / 2\r\n      ELSE content_analytics.average_completion_time\r\n    END,\r\n    difficulty_rating = COALESCE(p_difficulty_rating, content_analytics.difficulty_rating),\r\n    engagement_score = COALESCE(p_engagement_score, content_analytics.engagement_score),\r\n    last_updated_at = now();\r\nEND;\r\n$$ LANGUAGE plpgsql;\r\n\r\nCOMMIT;\r\n\r\n-- Down Migration\r\n---------------------------------------------------------------------------\r\n\r\nBEGIN;\r\n\r\n-- Drop functions\r\nDROP FUNCTION IF EXISTS update_content_analytics(uuid, integer, integer, integer, float, float);\r\n\r\n-- Drop comments\r\nCOMMENT ON TABLE content_analytics IS NULL;\r\nCOMMENT ON TABLE content_approvals IS NULL;\r\nCOMMENT ON TABLE content_tag_relations IS NULL;\r\nCOMMENT ON TABLE content_tags IS NULL;\r\nCOMMENT ON TABLE content_metadata IS NULL;\r\nCOMMENT ON TABLE content_versions IS NULL;\r\n\r\n-- Drop indexes\r\nDROP INDEX IF EXISTS idx_content_analytics_engagement_score;\r\nDROP INDEX IF EXISTS idx_content_analytics_content_id;\r\nDROP INDEX IF EXISTS idx_content_approvals_reviewed_by;\r\nDROP INDEX IF EXISTS idx_content_approvals_requested_by;\r\nDROP INDEX IF EXISTS idx_content_approvals_status;\r\nDROP INDEX IF EXISTS idx_content_approvals_content_id;\r\nDROP INDEX IF EXISTS idx_content_tag_relations_tag_id;\r\nDROP INDEX IF EXISTS idx_content_tag_relations_content_id;\r\nDROP INDEX IF EXISTS idx_content_metadata_type;\r\nDROP INDEX IF EXISTS idx_content_metadata_content_id;\r\nDROP INDEX IF EXISTS idx_content_versions_created_by;\r\nDROP INDEX IF EXISTS idx_content_versions_content_id;\r\n\r\n-- Drop tables\r\nDROP TABLE IF EXISTS content_analytics;\r\nDROP TABLE IF EXISTS content_approvals;\r\nDROP TABLE IF EXISTS content_tag_relations;\r\nDROP TABLE IF EXISTS content_tags;\r\nDROP TABLE IF EXISTS content_metadata;\r\nDROP TABLE IF EXISTS content_versions;\r\n\r\nCOMMIT; "
        }
    ]
}