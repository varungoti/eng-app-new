{
    "sourceFile": "src/lib/navigation.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1739349249493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1739349249493,
            "name": "Commit-0",
            "content": "import { ROLE_PERMISSIONS } from '../types/roles';\r\nimport { \r\n  LayoutDashboard,\r\n  Settings,\r\n  Users,\r\n  BookOpen,\r\n  FolderPlus,\r\n  GraduationCap,\r\n  FileText,\r\n  BarChart,\r\n  type LucideIcon \r\n} from 'lucide-react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {   Home,   DollarSign, Eye, Code, Server, Calendar, AlertTriangle, FileBarChart, CalendarDays, Building,} from 'lucide-react';\r\nimport { TEACHER_ROUTES } from './content/routes';\r\n  // ... import other icons you need\r\n\r\n\r\n// Add type for sidebar consumption\r\nexport interface SidebarItem {\r\n  label: string;\r\n  href: string;\r\n  icon: LucideIcon;\r\n  isActive: boolean;\r\n}\r\n\r\n// Cache for navigation items\r\nconst navigationCache = new Map<string, SidebarItem[]>();\r\n\r\nexport const getNavigationItems = (role: string, pathname: string = ''): SidebarItem[] => {\r\n  // Check cache first\r\n  const cacheKey = `${role}-${pathname}`;\r\n  if (navigationCache.has(cacheKey)) {\r\n    return navigationCache.get(cacheKey)!;\r\n  }\r\n\r\n  const permissions = ROLE_PERMISSIONS[role]?.permissions;\r\n  if (!permissions) return [];\r\n  \r\n  // Debug permissions\r\n  console.log('Navigation Initialization:', {\r\n    role,\r\n    permissions,\r\n    hasContentManagement: permissions.content_management,\r\n    pathname\r\n  });\r\n\r\n  const navigationItems: SidebarItem[] = [];\r\n\r\n  // 1. Always add Dashboard first\r\n  navigationItems.push({\r\n    label: 'Dashboard',\r\n    href: '/dashboard',\r\n    icon: LayoutDashboard,\r\n    isActive: pathname === '/dashboard'\r\n  });\r\n\r\n  // Debug after Dashboard\r\n  console.log('After Dashboard:', navigationItems);\r\n\r\n  // 2. Add Content Management second (if permitted)\r\n  if (permissions.content_management) {\r\n    console.log('Adding Content Management menu item');\r\n    navigationItems.push({\r\n      label: 'Content Management',\r\n      href: '/content-management/index',\r\n      icon: FolderPlus,\r\n      isActive: pathname === '/content-management/index'\r\n    });\r\n\r\n    // Debug Content Management addition\r\n    console.log('Content Management Added:', {\r\n      itemCount: navigationItems.length,\r\n      items: navigationItems.map(i => i.label)\r\n    });\r\n  }\r\n\r\n  // Debug after Content Management\r\n  console.log('After Content Management:', navigationItems.map(i => i.label));\r\n\r\n  // 3. Add Schools third (if permitted)\r\n  if (permissions.schools) {\r\n    navigationItems.push({\r\n      label: 'Schools',\r\n      href: '/schools',\r\n      icon: Building,\r\n      isActive: pathname === '/schools'\r\n    });\r\n  }\r\n  if (permissions.staff) {\r\n    navigationItems.push({\r\n      label: 'Staff',\r\n      href: '/staff',\r\n      icon: Users,\r\n      isActive: pathname === '/staff'\r\n    });\r\n  } \r\n  \r\n  if (permissions.myclasses) {\r\n    navigationItems.push({\r\n      label: 'My Classes',\r\n      href: TEACHER_ROUTES.LESSONS,\r\n      icon: Users,\r\n      isActive: pathname === TEACHER_ROUTES.LESSONS\r\n    });\r\n  }\r\n\r\n  // Add remaining items directly\r\n  if (permissions.schools || permissions.staff) {\r\n    navigationItems.push({\r\n      label: 'Students',\r\n      href: '/students',\r\n      icon: Users,\r\n      isActive: pathname === '/students'\r\n    });\r\n  }\r\n\r\n  if (permissions.sales) {\r\n    navigationItems.push({\r\n      label: 'Sales',\r\n      href: '/sales',\r\n      icon: DollarSign,\r\n      isActive: pathname === '/sales'\r\n    });\r\n  }\r\n\r\n  if (permissions.content) {\r\n    navigationItems.push({\r\n      label: 'Content',\r\n      href: '/content/view',\r\n      icon: Eye,\r\n      isActive: pathname === '/content/view'\r\n    });\r\n  } else if (permissions.content_editor) {\r\n    navigationItems.push({\r\n      label: 'Lessons',\r\n      href: '/content/lessons',\r\n      icon: FileText,\r\n      isActive: pathname === '/content/lessons'\r\n    });\r\n  }\r\n\r\n  if (permissions.development) {\r\n    navigationItems.push({\r\n      label: 'Development',\r\n      href: '/development',\r\n      icon: Code,\r\n      isActive: pathname === '/development'\r\n    });\r\n  }\r\n\r\n  if (permissions.infrastructure) {\r\n    navigationItems.push({\r\n      label: 'Infrastructure',\r\n      href: '/infrastructure',\r\n      icon: Server,\r\n      isActive: pathname === '/infrastructure'\r\n    });\r\n  }\r\n\r\n  if (permissions.finance) {\r\n    navigationItems.push({\r\n      label: 'Finance',\r\n      href: '/finance',\r\n      icon: DollarSign,\r\n      isActive: pathname === '/finance'\r\n    });\r\n  }\r\n\r\n  if (permissions.staff) {\r\n    navigationItems.push({\r\n      label: 'Staff',\r\n      href: '/staff',\r\n      icon: FileText,\r\n      isActive: pathname === '/staff'\r\n    });\r\n  }\r\n\r\n  if (permissions.schedule) {\r\n    navigationItems.push({\r\n      label: 'Schedule',\r\n      href: '/schedule',\r\n      icon: Calendar,\r\n      isActive: pathname === '/schedule'\r\n    });\r\n  }\r\n\r\n  if (permissions.reports) {\r\n    navigationItems.push({\r\n      label: 'Reports',\r\n      href: '/reports',\r\n      icon: BarChart,\r\n      isActive: pathname === '/reports'\r\n    });\r\n  }\r\n\r\n  navigationItems.push({\r\n    label: 'Events',\r\n    href: '/events',\r\n    icon: CalendarDays,\r\n    isActive: pathname === '/events'\r\n  });\r\n\r\n  if (role === 'super_admin' || role === 'technical_head' || role === 'developer') {\r\n    navigationItems.push({\r\n      label: 'Error Test',\r\n      href: '/error-test',\r\n      icon: AlertTriangle,\r\n      isActive: pathname === '/error-test'\r\n    });\r\n  }\r\n\r\n  if (permissions.settings) {\r\n    navigationItems.push({\r\n      label: 'Settings',\r\n      href: '/settings',\r\n      icon: Settings,\r\n      isActive: pathname === '/settings'\r\n    });\r\n  }\r\n\r\n  // Final debug check\r\n  console.log('Final navigation items:', navigationItems.map(item => ({\r\n    label: item.label,\r\n    href: item.href,\r\n    hasPermission: permissions[item.label.toLowerCase().replace(' ', '_') as keyof typeof permissions]\r\n  })));\r\n\r\n  // Cache the result\r\n  navigationCache.set(cacheKey, navigationItems);\r\n  \r\n  return navigationItems;\r\n}\r\n\r\n// Clear cache when needed (e.g., on role change or logout)\r\nexport const clearNavigationCache = () => {\r\n  navigationCache.clear();\r\n};"
        }
    ]
}