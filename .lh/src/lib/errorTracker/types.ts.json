{
    "sourceFile": "src/lib/errorTracker/types.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1739007301806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739007327513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import { Router } from \"next/router\";\r\n+\r\n export enum ErrorSeverity {\r\n   LOW = 'low',\r\n   MEDIUM = 'medium',\r\n   HIGH = 'high',\r\n@@ -18,4 +20,29 @@\n   retryCount?: number;\r\n   endpoint?: string;\r\n   statusCode?: number;\r\n }\r\n+\r\n+export interface ErrorWatcherConfig {\r\n+  maxErrors?: number;\r\n+  autoResolve?: boolean;\r\n+  retryAttempts?: number;\r\n+  retryDelay?: number;\r\n+  logToConsole?: boolean;\r\n+  router?: Router;\r\n+}\r\n+\r\n+export interface ErrorWatcher {\r\n+  start(): void;\r\n+  stop(): void;\r\n+  addError(error: ErrorEvent): void;\r\n+  getErrors(): ErrorEvent[];\r\n+  clearErrors(): void;\r\n+}\r\n+\r\n+export interface ErrorResolver {\r\n+  resolve(error: ErrorEvent): Promise<void>;\r\n+  retry(error: ErrorEvent): Promise<void>;\r\n+  ignore(error: ErrorEvent): Promise<void>;\r\n+}\r\n+\r\n+\r\n"
                },
                {
                    "date": 1739008413048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,5 +44,15 @@\n   retry(error: ErrorEvent): Promise<void>;\r\n   ignore(error: ErrorEvent): Promise<void>;\r\n }\r\n \r\n+export interface ConsoleError {\r\n+  message: string;\r\n+  stack?: string;\r\n+  timestamp: number;\r\n+  args: any[];\r\n+  severity?: ErrorSeverity;\r\n+  source?: string;\r\n+  context?: Record<string, any>;\r\n+}\r\n \r\n+\r\n"
                },
                {
                    "date": 1739008528679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,5 +54,21 @@\n   source?: string;\r\n   context?: Record<string, any>;\r\n }\r\n \r\n+export interface ErrorResolution {\r\n+  resolution: string;\r\n+  timestamp: number;\r\n+  attempts: number;\r\n+  resolved: boolean;\r\n+  errorId?: string;\r\n+  details?: Record<string, any>;\r\n+}\r\n \r\n+\r\n+\r\n+  errorId: string;\r\n+  timestamp: number;\r\n+  resolution: string;\r\n+  successful: boolean;\r\n+  context?: Record<string, any>;\r\n+}\r\n"
                },
                {
                    "date": 1739008620440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,42 @@\n   errorId?: string;\r\n   details?: Record<string, any>;\r\n }\r\n \r\n+export interface ErrorWatcherConfig {\r\n+  maxErrors?: number;\r\n+  autoResolve?: boolean;\r\n+  retryAttempts?: number;\r\n+  retryDelay?: number;\r\n+  logToConsole?: boolean;\r\n+  router?: Router;\r\n+}\r\n \r\n+export interface ErrorWatcher {\r\n+  start(): void;\r\n+  stop(): void;\r\n+  addError(error: ErrorEvent): void;\r\n+  getErrors(): ErrorEvent[];\r\n+  clearErrors(): void;\r\n+}\r\n \r\n-  errorId: string;\r\n-  timestamp: number;\r\n-  resolution: string;\r\n-  successful: boolean;\r\n-  context?: Record<string, any>;\r\n+export interface ErrorResolver {\r\n+  resolve(error: ErrorEvent): Promise<void>;\r\n+  retry(error: ErrorEvent): Promise<void>;\r\n+  ignore(error: ErrorEvent): Promise<void>;\r\n }\r\n+\r\n+export interface ErrorWatcherConfig {\r\n+  maxErrors?: number;\r\n+  autoResolve?: boolean;\r\n+  retryAttempts?: number;\r\n+  retryDelay?: number;\r\n+  logToConsole?: boolean;\r\n+  router?: Router;\r\n+}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1739008874977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   autoResolve?: boolean;\r\n   retryAttempts?: number;\r\n   retryDelay?: number;\r\n   logToConsole?: boolean;\r\n-  router?: Router;\r\n+  router?: Router | null;\r\n }\r\n \r\n export interface ErrorWatcher {\r\n   start(): void;\r\n"
                },
                {
                    "date": 1739009061860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,13 +55,14 @@\n   context?: Record<string, any>;\r\n }\r\n \r\n export interface ErrorResolution {\r\n+  errorId: string;\r\n   resolution: string;\r\n   timestamp: number;\r\n+  successful: boolean;\r\n   attempts: number;\r\n   resolved: boolean;\r\n-  errorId?: string;\r\n   details?: Record<string, any>;\r\n }\r\n \r\n export interface ErrorWatcherConfig {\r\n@@ -69,11 +70,12 @@\n   autoResolve?: boolean;\r\n   retryAttempts?: number;\r\n   retryDelay?: number;\r\n   logToConsole?: boolean;\r\n-  router?: Router;\r\n+  router?: Router | null;\r\n }\r\n \r\n+\r\n export interface ErrorWatcher {\r\n   start(): void;\r\n   stop(): void;\r\n   addError(error: ErrorEvent): void;\r\n"
                },
                {
                    "date": 1739009069500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n   autoResolve?: boolean;\r\n   retryAttempts?: number;\r\n   retryDelay?: number;\r\n   logToConsole?: boolean;\r\n-  router?: Router;\r\n+  router?: Router | null;\r\n }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1739009621489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n   logToConsole?: boolean;\r\n   router?: Router | null;\r\n }\r\n \r\n-\r\n export interface ErrorWatcher {\r\n   start(): void;\r\n   stop(): void;\r\n   addError(error: ErrorEvent): void;\r\n@@ -97,10 +96,18 @@\n   logToConsole?: boolean;\r\n   router?: Router | null;\r\n }\r\n \r\n+export interface NetworkError {\r\n+  message: string;\r\n+  endpoint?: string;\r\n+  statusCode?: number;\r\n+  timestamp: number;\r\n+  retryCount: number;\r\n+}\r\n \r\n \r\n \r\n \r\n \r\n \r\n+\r\n"
                }
            ],
            "date": 1739007301806,
            "name": "Commit-0",
            "content": "export enum ErrorSeverity {\r\n  LOW = 'low',\r\n  MEDIUM = 'medium',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical'\r\n}\r\n\r\nexport interface ErrorEvent {\r\n  id: string;\r\n  message: string;\r\n  severity: ErrorSeverity;\r\n  timestamp: number;\r\n  componentStack?: string;\r\n  context?: Record<string, any>;\r\n  source: string;\r\n  resolved?: boolean;\r\n  resolution?: string;\r\n  retryCount?: number;\r\n  endpoint?: string;\r\n  statusCode?: number;\r\n}\r\n"
        }
    ]
}