{
    "sourceFile": "src/lib/api/lessons.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1739348759827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1739348759827,
            "name": "Commit-0",
            "content": "import { logger } from '@/lib/logger';\r\n\r\nexport interface Lesson {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  content: string;\r\n  questions: Question[];\r\n  activities?: Activity[];\r\n}\r\n\r\nexport interface Question {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  type: 'speaking' | 'multiplechoice' | 'fill_blanks';\r\n  points: number;\r\n  data: {\r\n    prompt?: string;\r\n    teacherScript?: string;\r\n    options?: string[];\r\n  };\r\n  metadata?: {\r\n    options?: string[];\r\n  };\r\n}\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport async function getLessonById(lessonId: string): Promise<Lesson | null> {\r\n  try {\r\n    logger.info('Fetching lesson by ID', {\r\n      source: 'getLessonById',\r\n      context: { lessonId }\r\n    });\r\n\r\n    // TODO: Replace with actual API call\r\n    // For now, return mock data\r\n    const mockLesson: Lesson = {\r\n      id: lessonId,\r\n      title: 'Sample Lesson',\r\n      description: 'A sample lesson for testing',\r\n      content: 'Sample lesson content',\r\n      questions: [\r\n        {\r\n          id: '1',\r\n          title: 'Sample Question',\r\n          content: 'What is your answer?',\r\n          type: 'multiplechoice',\r\n          points: 10,\r\n          data: {\r\n            prompt: 'Choose the correct answer',\r\n            teacherScript: 'Guide the student through the options',\r\n            options: ['Option A', 'Option B', 'Option C']\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    return mockLesson;\r\n  } catch (error) {\r\n    logger.error('Failed to fetch lesson', {\r\n      source: 'getLessonById',\r\n      context: {\r\n        lessonId,\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    });\r\n    return null;\r\n  }\r\n} "
        }
    ]
}