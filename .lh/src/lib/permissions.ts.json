{
    "sourceFile": "src/lib/permissions.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1739299459997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739299914900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,289 +1,248 @@\n-import Classes from '@/app/teacher/classes/page';\r\n-import type { UserRole } from '../types/roles';\r\n-import { ROLE_PERMISSIONS } from '../types/roles';\r\n-import { TEACHER_ROUTES } from './content/routes';\r\n-import { \r\n-  Home, \r\n-  Users, \r\n-  Calendar, \r\n-  Settings, \r\n-  BookOpen, \r\n-  BarChart2, \r\n-  FolderOpen,\r\n-  GraduationCap,\r\n-  School,\r\n-  FileText,\r\n-  DollarSign,\r\n-  Bell,\r\n-  Bookmark,\r\n-  FolderPlus,\r\n-  Building,\r\n-  Folders,\r\n-  Eye,\r\n-  Edit,\r\n-  Code,\r\n-  ServerIcon,\r\n-  CreditCard,\r\n-  FileBarChart,\r\n-  AlertTriangle,\r\n-  LucideCloudHail,\r\n-  CloudHailIcon\r\n-} from 'lucide-react';\r\n-import type { LucideIcon } from 'lucide-react';\r\n-\r\n-\r\n-// Get allowed roles for staff management based on user role\r\n-export const getAllowedStaffRoles = (userRole: UserRole): string[] => {\r\n-  switch (userRole) {\r\n-    case 'super_admin':\r\n-      return Object.keys(ROLE_PERMISSIONS);\r\n-    case 'admin':\r\n-      return Object.keys(ROLE_PERMISSIONS).filter(role => role !== 'super_admin');\r\n-    case 'school_leader':\r\n-      return ['school_principal', 'teacher_head', 'teacher'];\r\n-    case 'school_principal':\r\n-      return ['teacher_head', 'teacher'];\r\n-    case 'teacher_head':\r\n-      return ['teacher'];\r\n-    default:\r\n-      return [];\r\n-  }\r\n-};\r\n-\r\n-// Check if a user can access a specific role's dashboard\r\n-export const canAccessDashboard = (userRole: UserRole, targetRole: string): boolean => {\r\n-  if (userRole === 'super_admin') return true;\r\n-  return userRole === targetRole;\r\n-};\r\n-\r\n-interface NavigationItem {\r\n-  name: string;\r\n-  href?: string;\r\n-  icon: LucideIcon;\r\n-  submenu?: { \r\n-    name: string; \r\n-    href: string; \r\n-    icon: LucideIcon;\r\n-  }[];\r\n-}\r\n-\r\n-// Get navigation items based on role permissions\r\n-export const getNavigationItems = (role: string): NavigationItem[] => {\r\n-  const permissions = ROLE_PERMISSIONS[role]?.permissions;\r\n-  if (!permissions) return [];\r\n-\r\n-  const items: NavigationItem[] = [];\r\n-\r\n-  // Dashboard is available for all roles\r\n-  items.push({ \r\n-    name: 'Dashboard', \r\n-    href: '/dashboard',\r\n-    icon: Bookmark \r\n-  });\r\n-\r\n-  if (permissions.content) {\r\n-    items.push({ \r\n-      name: 'Learning Management', \r\n-      href: '/app/learning', \r\n-      icon: BookOpen\r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.content_management) {\r\n-    items.push({ \r\n-      name: 'Content Management', \r\n-      href: '/content-management', \r\n-      icon: FolderPlus\r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.myclasses) {\r\n-    items.push({ \r\n-      name: 'My Classes', \r\n-      icon: CloudHailIcon,\r\n-      submenu: [\r\n-        {\r\n-          name: 'Dashboard',\r\n-          href: '/teacher/dashboard',\r\n-          icon: Home\r\n-        },\r\n-        {\r\n-          name: 'My Classes',\r\n-          href: '/teacher/my-class',\r\n-          icon: Users\r\n-        },\r\n-        {\r\n-          name: 'Lessons',\r\n-          href: '/teacher/lessons',\r\n-          icon: BookOpen\r\n-        },\r\n-        {\r\n-          name: 'Assessments',\r\n-          href: '/teacher/assessments',\r\n-          icon: FileText\r\n-        },\r\n-        {\r\n-          name: 'Progress',\r\n-          href: '/teacher/progress',\r\n-          icon: BarChart2\r\n-        },\r\n-        {\r\n-          name: 'AI Assistant',\r\n-          href: '/teacher/ai-assistant',\r\n-          icon: AlertTriangle\r\n-        },\r\n-        {\r\n-          name: 'Schedule',\r\n-          href: '/teacher/schedule',\r\n-          icon: Calendar\r\n-        },\r\n-        {\r\n-          name: 'Settings',\r\n-          href: '/teacher/settings',\r\n-          icon: Settings\r\n-        }\r\n-      ]\r\n-    });\r\n-  }\r\n-\r\n-  // Add menu items based on permissions\r\n-  if (permissions.schools) {\r\n-    items.push({ \r\n-      name: 'Schools', \r\n-      href: '/schools', \r\n-      icon: Building\r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.schools || permissions.staff) {\r\n-    items.push({ \r\n-      name: 'Students', \r\n-      href: '/students', \r\n-      icon: Users\r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.sales) {\r\n-    items.push({ \r\n-      name: 'Sales', \r\n-      href: '/sales', \r\n-      icon: DollarSign \r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.content) {\r\n-    items.push({\r\n-      name: 'Content',\r\n-      icon: Folders,\r\n-      submenu: [\r\n-        { \r\n-          name: 'View Content', \r\n-          href: '/content/view', \r\n-          icon: Eye \r\n-        },\r\n-        { \r\n-          name: 'Edit Content', \r\n-          href: '/content/edit', \r\n-          icon: Edit\r\n-        },\r\n-        {\r\n-          name: 'Lesson Management',\r\n-          href: '/content/lesson-management',\r\n-          icon: BookOpen \r\n-        }\r\n-      ]\r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.development) {\r\n-    items.push({ \r\n-      name: 'Development', \r\n-      href: '/development', \r\n-      icon: Code \r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.infrastructure) {\r\n-    items.push({ \r\n-      name: 'Infrastructure', \r\n-      href: '/infrastructure', \r\n-      icon: ServerIcon \r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.finance) {\r\n-    items.push({\r\n-      name: 'Finance',\r\n-      icon: DollarSign,\r\n-      submenu: [\r\n-        {\r\n-          name: 'Overview',\r\n-          href: '/finance',\r\n-          icon: BarChart2\r\n-        },\r\n-        {\r\n-          name: 'Invoices',\r\n-          href: '/finance/invoices',\r\n-          icon: FileText\r\n-        },\r\n-        {\r\n-          name: 'Payments',\r\n-          href: '/finance/payments',\r\n-          icon: CreditCard\r\n-        }\r\n-      ]\r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.staff) {\r\n-    items.push({ \r\n-      name: 'Staff', \r\n-      href: '/staff', \r\n-      icon: Users \r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.schedule) {\r\n-    items.push({ \r\n-      name: 'Schedule', \r\n-      href: '/schedule', \r\n-      icon: Calendar \r\n-    });\r\n-  }\r\n-\r\n-  if (permissions.reports) {\r\n-    items.push({ \r\n-      name: 'Reports', \r\n-      href: '/reports', \r\n-      icon: FileBarChart \r\n-    });\r\n-  }\r\n-\r\n-  // Events are available for all roles but with different permissions\r\n-  items.push({ \r\n-    name: 'Events', \r\n-    href: '/events', \r\n-    icon: Calendar \r\n-  });\r\n-\r\n-  // Error Test only for technical roles\r\n-  if (role === 'super_admin' || role === 'technical_head' || role === 'developer') {\r\n-    items.push({ \r\n-      name: 'Error Test', \r\n-      href: '/error-test', \r\n-      icon: AlertTriangle \r\n-    });\r\n-  }\r\n-\r\n-  // Settings based on permissions\r\n-  if (permissions.settings) {\r\n-    items.push({ \r\n-      name: 'Settings', \r\n-      href: '/settings', \r\n-      icon: Settings \r\n-    });\r\n-  }\r\n-\r\n-  return items;\r\n-};\r\n-\r\n+import Classes from '@/app/teacher/classes/page';\n+import type { UserRole } from '../types/roles';\n+import { ROLE_PERMISSIONS } from '../types/roles';\n+import { TEACHER_ROUTES } from './content/routes';\n+import { \n+  Home, \n+  Users, \n+  Calendar, \n+  Settings, \n+  BookOpen, \n+  BarChart2, \n+  FolderOpen,\n+  GraduationCap,\n+  School,\n+  FileText,\n+  DollarSign,\n+  Bell,\n+  Bookmark,\n+  FolderPlus,\n+  Building,\n+  Folders,\n+  Eye,\n+  Edit,\n+  Code,\n+  ServerIcon,\n+  CreditCard,\n+  FileBarChart,\n+  AlertTriangle,\n+  LucideCloudHail,\n+  CloudHailIcon\n+} from 'lucide-react';\n+import type { LucideIcon } from 'lucide-react';\n+\n+\n+// Get allowed roles for staff management based on user role\n+export const getAllowedStaffRoles = (userRole: UserRole): string[] => {\n+  switch (userRole) {\n+    case 'super_admin':\n+      return Object.keys(ROLE_PERMISSIONS);\n+    case 'admin':\n+      return Object.keys(ROLE_PERMISSIONS).filter(role => role !== 'super_admin');\n+    case 'school_leader':\n+      return ['school_principal', 'teacher_head', 'teacher'];\n+    case 'school_principal':\n+      return ['teacher_head', 'teacher'];\n+    case 'teacher_head':\n+      return ['teacher'];\n+    default:\n+      return [];\n+  }\n+};\n+\n+// Check if a user can access a specific role's dashboard\n+export const canAccessDashboard = (userRole: UserRole, targetRole: string): boolean => {\n+  if (userRole === 'super_admin') return true;\n+  return userRole === targetRole;\n+};\n+\n+interface NavigationItem {\n+  name: string;\n+  href?: string;\n+  icon: LucideIcon;\n+  submenu?: { \n+    name: string; \n+    href: string; \n+    icon: LucideIcon;\n+  }[];\n+}\n+\n+// Get navigation items based on role permissions\n+export const getNavigationItems = (role: string): NavigationItem[] => {\n+  const permissions = ROLE_PERMISSIONS[role]?.permissions;\n+  if (!permissions) return [];\n+\n+  const items: NavigationItem[] = [];\n+\n+  // Dashboard is available for all roles\n+  items.push({ \n+    name: 'Dashboard', \n+    href: '/dashboard',\n+    icon: Bookmark \n+  });\n+\n+  if (permissions.content) {\n+    items.push({ \n+      name: 'Learning Management', \n+      href: '/app/learning', \n+      icon: BookOpen\n+    });\n+  }\n+\n+  if (permissions.content_management) {\n+    items.push({ \n+      name: 'Content Management', \n+      href: '/content-management', \n+      icon: FolderPlus\n+    });\n+  }\n+\n+  if (permissions.myclasses) {\n+    items.push({ \n+      name: 'My Classes', \n+      href: TEACHER_ROUTES.LESSONS,\n+      icon: CloudHailIcon\n+    });\n+  }\n+\n+  // Add menu items based on permissions\n+  if (permissions.schools) {\n+    items.push({ \n+      name: 'Schools', \n+      href: '/schools', \n+      icon: Building\n+    });\n+  }\n+\n+  if (permissions.schools || permissions.staff) {\n+    items.push({ \n+      name: 'Students', \n+      href: '/students', \n+      icon: Users\n+    });\n+  }\n+\n+  if (permissions.sales) {\n+    items.push({ \n+      name: 'Sales', \n+      href: '/sales', \n+      icon: DollarSign \n+    });\n+  }\n+\n+  if (permissions.content) {\n+    items.push({\n+      name: 'Content',\n+      icon: Folders,\n+      submenu: [\n+        { \n+          name: 'View Content', \n+          href: '/content/view', \n+          icon: Eye \n+        },\n+        { \n+          name: 'Edit Content', \n+          href: '/content/edit', \n+          icon: Edit\n+        },\n+        {\n+          name: 'Lesson Management',\n+          href: '/content/lesson-management',\n+          icon: BookOpen \n+        }\n+      ]\n+    });\n+  }\n+\n+  if (permissions.development) {\n+    items.push({ \n+      name: 'Development', \n+      href: '/development', \n+      icon: Code \n+    });\n+  }\n+\n+  if (permissions.infrastructure) {\n+    items.push({ \n+      name: 'Infrastructure', \n+      href: '/infrastructure', \n+      icon: ServerIcon \n+    });\n+  }\n+\n+  if (permissions.finance) {\n+    items.push({\n+      name: 'Finance',\n+      icon: DollarSign,\n+      submenu: [\n+        {\n+          name: 'Overview',\n+          href: '/finance',\n+          icon: BarChart2\n+        },\n+        {\n+          name: 'Invoices',\n+          href: '/finance/invoices',\n+          icon: FileText\n+        },\n+        {\n+          name: 'Payments',\n+          href: '/finance/payments',\n+          icon: CreditCard\n+        }\n+      ]\n+    });\n+  }\n+\n+  if (permissions.staff) {\n+    items.push({ \n+      name: 'Staff', \n+      href: '/staff', \n+      icon: Users \n+    });\n+  }\n+\n+  if (permissions.schedule) {\n+    items.push({ \n+      name: 'Schedule', \n+      href: '/schedule', \n+      icon: Calendar \n+    });\n+  }\n+\n+  if (permissions.reports) {\n+    items.push({ \n+      name: 'Reports', \n+      href: '/reports', \n+      icon: FileBarChart \n+    });\n+  }\n+\n+  // Events are available for all roles but with different permissions\n+  items.push({ \n+    name: 'Events', \n+    href: '/events', \n+    icon: Calendar \n+  });\n+\n+  // Error Test only for technical roles\n+  if (role === 'super_admin' || role === 'technical_head' || role === 'developer') {\n+    items.push({ \n+      name: 'Error Test', \n+      href: '/error-test', \n+      icon: AlertTriangle \n+    });\n+  }\n+\n+  // Settings based on permissions\n+  if (permissions.settings) {\n+    items.push({ \n+      name: 'Settings', \n+      href: '/settings', \n+      icon: Settings \n+    });\n+  }\n+\n+  return items;\n+};\n+\n"
                },
                {
                    "date": 1739300024717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,98 @@\n     href: '/dashboard',\n     icon: Bookmark \n   });\n \n+  if (role === 'teacher' || role === 'teacher_head') {\n+    // For teachers, nest everything under My Classes\n+    const teacherSubmenu: NavigationItem['submenu'] = [];\n+\n+    if (permissions.content) {\n+      teacherSubmenu.push({ \n+        name: 'Learning Management', \n+        href: '/app/learning', \n+        icon: BookOpen\n+      });\n+    }\n+\n+    if (permissions.content_management) {\n+      teacherSubmenu.push({ \n+        name: 'Content Management', \n+        href: '/content-management', \n+        icon: FolderPlus\n+      });\n+    }\n+\n+    if (permissions.schools || permissions.staff) {\n+      teacherSubmenu.push({ \n+        name: 'Students', \n+        href: '/students', \n+        icon: Users\n+      });\n+    }\n+\n+    if (permissions.content) {\n+      teacherSubmenu.push(\n+        { \n+          name: 'View Content', \n+          href: '/content/view', \n+          icon: Eye \n+        },\n+        { \n+          name: 'Edit Content', \n+          href: '/content/edit', \n+          icon: Edit\n+        },\n+        {\n+          name: 'Lesson Management',\n+          href: '/content/lesson-management',\n+          icon: BookOpen \n+        }\n+      );\n+    }\n+\n+    if (permissions.schedule) {\n+      teacherSubmenu.push({ \n+        name: 'Schedule', \n+        href: '/schedule', \n+        icon: Calendar \n+      });\n+    }\n+\n+    if (permissions.reports) {\n+      teacherSubmenu.push({ \n+        name: 'Reports', \n+        href: '/reports', \n+        icon: FileBarChart \n+      });\n+    }\n+\n+    items.push({\n+      name: 'My Classes',\n+      href: TEACHER_ROUTES.LESSONS,\n+      icon: CloudHailIcon,\n+      submenu: teacherSubmenu\n+    });\n+\n+    // Keep Events and Settings outside\n+    items.push({ \n+      name: 'Events', \n+      href: '/events', \n+      icon: Calendar \n+    });\n+\n+    if (permissions.settings) {\n+      items.push({ \n+        name: 'Settings', \n+        href: '/settings', \n+        icon: Settings \n+      });\n+    }\n+\n+    return items;\n+  }\n+\n+  // For non-teacher roles, keep the original structure\n   if (permissions.content) {\n     items.push({ \n       name: 'Learning Management', \n       href: '/app/learning', \n"
                },
                {
                    "date": 1739304237381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,13 +85,30 @@\n     // For teachers, nest everything under My Classes\n     const teacherSubmenu: NavigationItem['submenu'] = [];\n \n     if (permissions.content) {\n-      teacherSubmenu.push({ \n-        name: 'Learning Management', \n-        href: '/app/learning', \n-        icon: BookOpen\n-      });\n+      teacherSubmenu.push(\n+        { \n+          name: 'Learning Management', \n+          href: '/app/learning', \n+          icon: BookOpen\n+        },\n+        {\n+          name: 'Lesson Management',\n+          href: '/content/lesson-management',\n+          icon: BookOpen \n+        },\n+        { \n+          name: 'View Content', \n+          href: '/content/view', \n+          icon: Eye \n+        },\n+        { \n+          name: 'Edit Content', \n+          href: '/content/edit', \n+          icon: Edit\n+        }\n+      );\n     }\n \n     if (permissions.content_management) {\n       teacherSubmenu.push({ \n@@ -108,28 +125,8 @@\n         icon: Users\n       });\n     }\n \n-    if (permissions.content) {\n-      teacherSubmenu.push(\n-        { \n-          name: 'View Content', \n-          href: '/content/view', \n-          icon: Eye \n-        },\n-        { \n-          name: 'Edit Content', \n-          href: '/content/edit', \n-          icon: Edit\n-        },\n-        {\n-          name: 'Lesson Management',\n-          href: '/content/lesson-management',\n-          icon: BookOpen \n-        }\n-      );\n-    }\n-\n     if (permissions.schedule) {\n       teacherSubmenu.push({ \n         name: 'Schedule', \n         href: '/schedule', \n@@ -151,9 +148,9 @@\n       icon: CloudHailIcon,\n       submenu: teacherSubmenu\n     });\n \n-    // Keep Events and Settings outside\n+    // Keep only Events and Settings outside\n     items.push({ \n       name: 'Events', \n       href: '/events', \n       icon: Calendar \n@@ -169,34 +166,44 @@\n \n     return items;\n   }\n \n-  // For non-teacher roles, keep the original structure\n-  if (permissions.content) {\n-    items.push({ \n-      name: 'Learning Management', \n-      href: '/app/learning', \n-      icon: BookOpen\n-    });\n-  }\n+  // For non-teacher roles, update the structure\n+  if (permissions.myclasses) {\n+    const classesSubmenu: NavigationItem['submenu'] = [];\n \n-  if (permissions.content_management) {\n-    items.push({ \n-      name: 'Content Management', \n-      href: '/content-management', \n-      icon: FolderPlus\n-    });\n-  }\n+    if (permissions.content) {\n+      classesSubmenu.push(\n+        { \n+          name: 'Learning Management', \n+          href: '/app/learning', \n+          icon: BookOpen\n+        },\n+        {\n+          name: 'Lesson Management',\n+          href: '/content/lesson-management',\n+          icon: BookOpen \n+        }\n+      );\n+    }\n \n-  if (permissions.myclasses) {\n+    if (permissions.content_management) {\n+      classesSubmenu.push({ \n+        name: 'Content Management', \n+        href: '/content-management', \n+        icon: FolderPlus\n+      });\n+    }\n+\n     items.push({ \n       name: 'My Classes', \n       href: TEACHER_ROUTES.LESSONS,\n-      icon: CloudHailIcon\n+      icon: CloudHailIcon,\n+      submenu: classesSubmenu\n     });\n   }\n \n-  // Add menu items based on permissions\n+  // Add remaining menu items based on permissions\n   if (permissions.schools) {\n     items.push({ \n       name: 'Schools', \n       href: '/schools', \n@@ -233,13 +240,8 @@\n         { \n           name: 'Edit Content', \n           href: '/content/edit', \n           icon: Edit\n-        },\n-        {\n-          name: 'Lesson Management',\n-          href: '/content/lesson-management',\n-          icon: BookOpen \n         }\n       ]\n     });\n   }\n"
                },
                {
                    "date": 1739304486685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,30 +85,13 @@\n     // For teachers, nest everything under My Classes\n     const teacherSubmenu: NavigationItem['submenu'] = [];\n \n     if (permissions.content) {\n-      teacherSubmenu.push(\n-        { \n-          name: 'Learning Management', \n-          href: '/app/learning', \n-          icon: BookOpen\n-        },\n-        {\n-          name: 'Lesson Management',\n-          href: '/content/lesson-management',\n-          icon: BookOpen \n-        },\n-        { \n-          name: 'View Content', \n-          href: '/content/view', \n-          icon: Eye \n-        },\n-        { \n-          name: 'Edit Content', \n-          href: '/content/edit', \n-          icon: Edit\n-        }\n-      );\n+      teacherSubmenu.push({ \n+        name: 'Learning Management', \n+        href: '/app/learning', \n+        icon: BookOpen\n+      });\n     }\n \n     if (permissions.content_management) {\n       teacherSubmenu.push({ \n@@ -125,8 +108,28 @@\n         icon: Users\n       });\n     }\n \n+    if (permissions.content) {\n+      teacherSubmenu.push(\n+        { \n+          name: 'View Content', \n+          href: '/content/view', \n+          icon: Eye \n+        },\n+        { \n+          name: 'Edit Content', \n+          href: '/content/edit', \n+          icon: Edit\n+        },\n+        {\n+          name: 'Lesson Management',\n+          href: '/content/lesson-management',\n+          icon: BookOpen \n+        }\n+      );\n+    }\n+\n     if (permissions.schedule) {\n       teacherSubmenu.push({ \n         name: 'Schedule', \n         href: '/schedule', \n@@ -148,9 +151,9 @@\n       icon: CloudHailIcon,\n       submenu: teacherSubmenu\n     });\n \n-    // Keep only Events and Settings outside\n+    // Keep Events and Settings outside\n     items.push({ \n       name: 'Events', \n       href: '/events', \n       icon: Calendar \n@@ -166,44 +169,34 @@\n \n     return items;\n   }\n \n-  // For non-teacher roles, update the structure\n-  if (permissions.myclasses) {\n-    const classesSubmenu: NavigationItem['submenu'] = [];\n+  // For non-teacher roles, keep the original structure\n+  if (permissions.content) {\n+    items.push({ \n+      name: 'Learning Management', \n+      href: '/app/learning', \n+      icon: BookOpen\n+    });\n+  }\n \n-    if (permissions.content) {\n-      classesSubmenu.push(\n-        { \n-          name: 'Learning Management', \n-          href: '/app/learning', \n-          icon: BookOpen\n-        },\n-        {\n-          name: 'Lesson Management',\n-          href: '/content/lesson-management',\n-          icon: BookOpen \n-        }\n-      );\n-    }\n+  if (permissions.content_management) {\n+    items.push({ \n+      name: 'Content Management', \n+      href: '/content-management', \n+      icon: FolderPlus\n+    });\n+  }\n \n-    if (permissions.content_management) {\n-      classesSubmenu.push({ \n-        name: 'Content Management', \n-        href: '/content-management', \n-        icon: FolderPlus\n-      });\n-    }\n-\n+  if (permissions.myclasses) {\n     items.push({ \n       name: 'My Classes', \n       href: TEACHER_ROUTES.LESSONS,\n-      icon: CloudHailIcon,\n-      submenu: classesSubmenu\n+      icon: CloudHailIcon\n     });\n   }\n \n-  // Add remaining menu items based on permissions\n+  // Add menu items based on permissions\n   if (permissions.schools) {\n     items.push({ \n       name: 'Schools', \n       href: '/schools', \n@@ -240,8 +233,13 @@\n         { \n           name: 'Edit Content', \n           href: '/content/edit', \n           icon: Edit\n+        },\n+        {\n+          name: 'Lesson Management',\n+          href: '/content/lesson-management',\n+          icon: BookOpen \n         }\n       ]\n     });\n   }\n"
                },
                {
                    "date": 1739304731252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,13 @@\n   CreditCard,\n   FileBarChart,\n   AlertTriangle,\n   LucideCloudHail,\n-  CloudHailIcon\n+  CloudHailIcon,\n+  Activity,\n+  Award,\n+  MessageSquare,\n+  Layout\n } from 'lucide-react';\n import type { LucideIcon } from 'lucide-react';\n \n \n@@ -81,118 +85,102 @@\n     icon: Bookmark \n   });\n \n   if (role === 'teacher' || role === 'teacher_head') {\n-    // For teachers, nest everything under My Classes\n-    const teacherSubmenu: NavigationItem['submenu'] = [];\n-\n-    if (permissions.content) {\n-      teacherSubmenu.push({ \n-        name: 'Learning Management', \n-        href: '/app/learning', \n-        icon: BookOpen\n-      });\n-    }\n-\n-    if (permissions.content_management) {\n-      teacherSubmenu.push({ \n-        name: 'Content Management', \n-        href: '/content-management', \n-        icon: FolderPlus\n-      });\n-    }\n-\n-    if (permissions.schools || permissions.staff) {\n-      teacherSubmenu.push({ \n-        name: 'Students', \n-        href: '/students', \n-        icon: Users\n-      });\n-    }\n-\n-    if (permissions.content) {\n-      teacherSubmenu.push(\n-        { \n-          name: 'View Content', \n-          href: '/content/view', \n-          icon: Eye \n-        },\n-        { \n-          name: 'Edit Content', \n-          href: '/content/edit', \n-          icon: Edit\n-        },\n-        {\n-          name: 'Lesson Management',\n-          href: '/content/lesson-management',\n-          icon: BookOpen \n-        }\n-      );\n-    }\n-\n-    if (permissions.schedule) {\n-      teacherSubmenu.push({ \n+    // For teachers, keep the original structure\n+    items.push(\n+      { \n+        name: 'Dashboard', \n+        href: '/teacher/dashboard',\n+        icon: Layout \n+      },\n+      { \n+        name: 'My Classes', \n+        href: '/teacher/my-class',\n+        icon: Users \n+      },\n+      { \n+        name: 'Lessons', \n+        href: '/teacher/lessons',\n+        icon: BookOpen \n+      },\n+      { \n+        name: 'Assessments', \n+        href: '/teacher/assessments',\n+        icon: Activity \n+      },\n+      { \n+        name: 'Progress', \n+        href: '/teacher/progress',\n+        icon: Award \n+      },\n+      { \n+        name: 'AI Assistant', \n+        href: '/teacher/ai-assistant',\n+        icon: MessageSquare \n+      },\n+      { \n         name: 'Schedule', \n-        href: '/schedule', \n+        href: '/teacher/schedule',\n         icon: Calendar \n-      });\n-    }\n-\n-    if (permissions.reports) {\n-      teacherSubmenu.push({ \n-        name: 'Reports', \n-        href: '/reports', \n-        icon: FileBarChart \n-      });\n-    }\n-\n-    items.push({\n-      name: 'My Classes',\n-      href: TEACHER_ROUTES.LESSONS,\n-      icon: CloudHailIcon,\n-      submenu: teacherSubmenu\n-    });\n-\n-    // Keep Events and Settings outside\n-    items.push({ \n-      name: 'Events', \n-      href: '/events', \n-      icon: Calendar \n-    });\n-\n-    if (permissions.settings) {\n-      items.push({ \n+      },\n+      { \n         name: 'Settings', \n-        href: '/settings', \n+        href: '/teacher/settings',\n         icon: Settings \n-      });\n-    }\n+      }\n+    );\n \n     return items;\n   }\n \n-  // For non-teacher roles, keep the original structure\n-  if (permissions.content) {\n-    items.push({ \n-      name: 'Learning Management', \n-      href: '/app/learning', \n-      icon: BookOpen\n-    });\n-  }\n-\n-  if (permissions.content_management) {\n-    items.push({ \n-      name: 'Content Management', \n-      href: '/content-management', \n-      icon: FolderPlus\n-    });\n-  }\n-\n+  // For non-teacher roles, nest everything under My Classes\n   if (permissions.myclasses) {\n     items.push({ \n-      name: 'My Classes', \n-      href: TEACHER_ROUTES.LESSONS,\n-      icon: CloudHailIcon\n+      name: 'My Classes',\n+      icon: CloudHailIcon,\n+      submenu: [\n+        { \n+          name: 'Dashboard', \n+          href: '/teacher/dashboard',\n+          icon: Layout \n+        },\n+        { \n+          name: 'Class Overview', \n+          href: '/teacher/my-class',\n+          icon: Users \n+        },\n+        { \n+          name: 'Lessons', \n+          href: '/teacher/lessons',\n+          icon: BookOpen \n+        },\n+        { \n+          name: 'Assessments', \n+          href: '/teacher/assessments',\n+          icon: Activity \n+        },\n+        { \n+          name: 'Progress', \n+          href: '/teacher/progress',\n+          icon: Award \n+        },\n+        { \n+          name: 'AI Assistant', \n+          href: '/teacher/ai-assistant',\n+          icon: MessageSquare \n+        },\n+        { \n+          name: 'Schedule', \n+          href: '/teacher/schedule',\n+          icon: Calendar \n+        },\n+        { \n+          name: 'Settings', \n+          href: '/teacher/settings',\n+          icon: Settings \n+        }\n+      ]\n     });\n   }\n \n   // Add menu items based on permissions\n"
                },
                {
                    "date": 1739352344347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,8 +229,9 @@\n           icon: BookOpen \n         }\n       ]\n     });\n+    \n   }\n \n   if (permissions.development) {\n     items.push({ \n"
                },
                {
                    "date": 1739352353409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,13 @@\n           icon: BookOpen \n         }\n       ]\n     });\n-    \n+    items.push({\n+      name: 'Content Management',\n+      href: '/content-management',\n+      icon: FolderPlus\n+    });\n   }\n \n   if (permissions.development) {\n     items.push({ \n"
                },
                {
                    "date": 1739352835858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,16 +244,8 @@\n       icon: Code \n     });\n   }\n \n-  if (permissions.infrastructure) {\n-    items.push({ \n-      name: 'Infrastructure', \n-      href: '/infrastructure', \n-      icon: ServerIcon \n-    });\n-  }\n-\n   if (permissions.finance) {\n     items.push({\n       name: 'Finance',\n       icon: DollarSign,\n@@ -276,8 +268,16 @@\n       ]\n     });\n   }\n \n+  if (permissions.infrastructure) {\n+    items.push({ \n+      name: 'Infrastructure', \n+      href: '/infrastructure', \n+      icon: ServerIcon \n+    });\n+  }\n+\n   if (permissions.staff) {\n     items.push({ \n       name: 'Staff', \n       href: '/staff', \n"
                }
            ],
            "date": 1739299459997,
            "name": "Commit-0",
            "content": "import Classes from '@/app/teacher/classes/page';\r\nimport type { UserRole } from '../types/roles';\r\nimport { ROLE_PERMISSIONS } from '../types/roles';\r\nimport { TEACHER_ROUTES } from './content/routes';\r\nimport { \r\n  Home, \r\n  Users, \r\n  Calendar, \r\n  Settings, \r\n  BookOpen, \r\n  BarChart2, \r\n  FolderOpen,\r\n  GraduationCap,\r\n  School,\r\n  FileText,\r\n  DollarSign,\r\n  Bell,\r\n  Bookmark,\r\n  FolderPlus,\r\n  Building,\r\n  Folders,\r\n  Eye,\r\n  Edit,\r\n  Code,\r\n  ServerIcon,\r\n  CreditCard,\r\n  FileBarChart,\r\n  AlertTriangle,\r\n  LucideCloudHail,\r\n  CloudHailIcon\r\n} from 'lucide-react';\r\nimport type { LucideIcon } from 'lucide-react';\r\n\r\n\r\n// Get allowed roles for staff management based on user role\r\nexport const getAllowedStaffRoles = (userRole: UserRole): string[] => {\r\n  switch (userRole) {\r\n    case 'super_admin':\r\n      return Object.keys(ROLE_PERMISSIONS);\r\n    case 'admin':\r\n      return Object.keys(ROLE_PERMISSIONS).filter(role => role !== 'super_admin');\r\n    case 'school_leader':\r\n      return ['school_principal', 'teacher_head', 'teacher'];\r\n    case 'school_principal':\r\n      return ['teacher_head', 'teacher'];\r\n    case 'teacher_head':\r\n      return ['teacher'];\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\n// Check if a user can access a specific role's dashboard\r\nexport const canAccessDashboard = (userRole: UserRole, targetRole: string): boolean => {\r\n  if (userRole === 'super_admin') return true;\r\n  return userRole === targetRole;\r\n};\r\n\r\ninterface NavigationItem {\r\n  name: string;\r\n  href?: string;\r\n  icon: LucideIcon;\r\n  submenu?: { \r\n    name: string; \r\n    href: string; \r\n    icon: LucideIcon;\r\n  }[];\r\n}\r\n\r\n// Get navigation items based on role permissions\r\nexport const getNavigationItems = (role: string): NavigationItem[] => {\r\n  const permissions = ROLE_PERMISSIONS[role]?.permissions;\r\n  if (!permissions) return [];\r\n\r\n  const items: NavigationItem[] = [];\r\n\r\n  // Dashboard is available for all roles\r\n  items.push({ \r\n    name: 'Dashboard', \r\n    href: '/dashboard',\r\n    icon: Bookmark \r\n  });\r\n\r\n  if (permissions.content) {\r\n    items.push({ \r\n      name: 'Learning Management', \r\n      href: '/app/learning', \r\n      icon: BookOpen\r\n    });\r\n  }\r\n\r\n  if (permissions.content_management) {\r\n    items.push({ \r\n      name: 'Content Management', \r\n      href: '/content-management', \r\n      icon: FolderPlus\r\n    });\r\n  }\r\n\r\n  if (permissions.myclasses) {\r\n    items.push({ \r\n      name: 'My Classes', \r\n      icon: CloudHailIcon,\r\n      submenu: [\r\n        {\r\n          name: 'Dashboard',\r\n          href: '/teacher/dashboard',\r\n          icon: Home\r\n        },\r\n        {\r\n          name: 'My Classes',\r\n          href: '/teacher/my-class',\r\n          icon: Users\r\n        },\r\n        {\r\n          name: 'Lessons',\r\n          href: '/teacher/lessons',\r\n          icon: BookOpen\r\n        },\r\n        {\r\n          name: 'Assessments',\r\n          href: '/teacher/assessments',\r\n          icon: FileText\r\n        },\r\n        {\r\n          name: 'Progress',\r\n          href: '/teacher/progress',\r\n          icon: BarChart2\r\n        },\r\n        {\r\n          name: 'AI Assistant',\r\n          href: '/teacher/ai-assistant',\r\n          icon: AlertTriangle\r\n        },\r\n        {\r\n          name: 'Schedule',\r\n          href: '/teacher/schedule',\r\n          icon: Calendar\r\n        },\r\n        {\r\n          name: 'Settings',\r\n          href: '/teacher/settings',\r\n          icon: Settings\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  // Add menu items based on permissions\r\n  if (permissions.schools) {\r\n    items.push({ \r\n      name: 'Schools', \r\n      href: '/schools', \r\n      icon: Building\r\n    });\r\n  }\r\n\r\n  if (permissions.schools || permissions.staff) {\r\n    items.push({ \r\n      name: 'Students', \r\n      href: '/students', \r\n      icon: Users\r\n    });\r\n  }\r\n\r\n  if (permissions.sales) {\r\n    items.push({ \r\n      name: 'Sales', \r\n      href: '/sales', \r\n      icon: DollarSign \r\n    });\r\n  }\r\n\r\n  if (permissions.content) {\r\n    items.push({\r\n      name: 'Content',\r\n      icon: Folders,\r\n      submenu: [\r\n        { \r\n          name: 'View Content', \r\n          href: '/content/view', \r\n          icon: Eye \r\n        },\r\n        { \r\n          name: 'Edit Content', \r\n          href: '/content/edit', \r\n          icon: Edit\r\n        },\r\n        {\r\n          name: 'Lesson Management',\r\n          href: '/content/lesson-management',\r\n          icon: BookOpen \r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  if (permissions.development) {\r\n    items.push({ \r\n      name: 'Development', \r\n      href: '/development', \r\n      icon: Code \r\n    });\r\n  }\r\n\r\n  if (permissions.infrastructure) {\r\n    items.push({ \r\n      name: 'Infrastructure', \r\n      href: '/infrastructure', \r\n      icon: ServerIcon \r\n    });\r\n  }\r\n\r\n  if (permissions.finance) {\r\n    items.push({\r\n      name: 'Finance',\r\n      icon: DollarSign,\r\n      submenu: [\r\n        {\r\n          name: 'Overview',\r\n          href: '/finance',\r\n          icon: BarChart2\r\n        },\r\n        {\r\n          name: 'Invoices',\r\n          href: '/finance/invoices',\r\n          icon: FileText\r\n        },\r\n        {\r\n          name: 'Payments',\r\n          href: '/finance/payments',\r\n          icon: CreditCard\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  if (permissions.staff) {\r\n    items.push({ \r\n      name: 'Staff', \r\n      href: '/staff', \r\n      icon: Users \r\n    });\r\n  }\r\n\r\n  if (permissions.schedule) {\r\n    items.push({ \r\n      name: 'Schedule', \r\n      href: '/schedule', \r\n      icon: Calendar \r\n    });\r\n  }\r\n\r\n  if (permissions.reports) {\r\n    items.push({ \r\n      name: 'Reports', \r\n      href: '/reports', \r\n      icon: FileBarChart \r\n    });\r\n  }\r\n\r\n  // Events are available for all roles but with different permissions\r\n  items.push({ \r\n    name: 'Events', \r\n    href: '/events', \r\n    icon: Calendar \r\n  });\r\n\r\n  // Error Test only for technical roles\r\n  if (role === 'super_admin' || role === 'technical_head' || role === 'developer') {\r\n    items.push({ \r\n      name: 'Error Test', \r\n      href: '/error-test', \r\n      icon: AlertTriangle \r\n    });\r\n  }\r\n\r\n  // Settings based on permissions\r\n  if (permissions.settings) {\r\n    items.push({ \r\n      name: 'Settings', \r\n      href: '/settings', \r\n      icon: Settings \r\n    });\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\n"
        }
    ]
}