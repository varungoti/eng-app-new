{
    "sourceFile": "src/hooks/useRoleSettings.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1740924291242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740924312061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,9 @@\n               view: true,\r\n               create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n               edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n               delete: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+              assignStudents: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n               assignStudents: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n             },\r\n             grades: {\r\n               view: true,\r\n"
                },
                {
                    "date": 1740924324498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,12 +135,30 @@\n               create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n               edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n               delete: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n               assignStudents: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n-              assignStudents: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n             },\r\n             grades: {\r\n               view: true,\r\n+              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+              edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+              delete: role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n+            }\r\n+          },\r\n+          features: {\r\n+            aiAssistant: role !== 'STUDENT',\r\n+            advancedReporting: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+            contentCreation: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+            bulkOperations: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+            dataExport: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n+            integrations: role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n+          },\r\n+          preferences: {\r\n+            theme: 'system',\r\n+            language: 'en',\r\n+            timezone: 'UTC',\r\n+            dateFormat: 'MM/DD/YYYY',\r\n+            defaultPageSize: 10\r\n           }\r\n         };\r\n \r\n         setSettings(data?.settings || defaultSettings);\r\n"
                },
                {
                    "date": 1740924397540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,207 +1,100 @@\n-import { useState, useEffect } from 'react';\r\n-import { supabase } from '../lib/supabase';\r\n-import { logger } from '../lib/logger';\r\n-\r\n-export interface RoleSettings {\r\n-  defaultView: string;\r\n-  notifications: {\r\n-    email: boolean;\r\n-    push: boolean;\r\n-    systemAlerts?: boolean;\r\n-    [key: string]: boolean | undefined;\r\n-  };\r\n-  reports: string[];\r\n-  dashboardConfig: {\r\n-    quickStats: string[];\r\n-    charts: string[];\r\n-    recentActivities: boolean;\r\n-    notifications: boolean;\r\n-    [key: string]: any;\r\n-  };\r\n-  permissions: {\r\n-    users: {\r\n-      view: boolean;\r\n-      create: boolean;\r\n-      edit: boolean;\r\n-      delete: boolean;\r\n-    };\r\n-    content: {\r\n-      view: boolean;\r\n-      create: boolean;\r\n-      edit: boolean;\r\n-      delete: boolean;\r\n-    };\r\n-    reports: {\r\n-      view: boolean;\r\n-      create: boolean;\r\n-      export: boolean;\r\n-    };\r\n-    settings: {\r\n-      view: boolean;\r\n-      edit: boolean;\r\n-    };\r\n-    classes: {\r\n-      view: boolean;\r\n-      create: boolean;\r\n-      edit: boolean;\r\n-      delete: boolean;\r\n-      assignStudents: boolean;\r\n-    };\r\n-    grades: {\r\n-      view: boolean;\r\n-      create: boolean;\r\n-      edit: boolean;\r\n-      delete: boolean;\r\n-    };\r\n-  };\r\n-  features: {\r\n-    aiAssistant: boolean;\r\n-    advancedReporting: boolean;\r\n-    contentCreation: boolean;\r\n-    bulkOperations: boolean;\r\n-    dataExport: boolean;\r\n-    integrations: boolean;\r\n-  };\r\n-  preferences: {\r\n-    theme: 'light' | 'dark' | 'system';\r\n-    language: string;\r\n-    timezone: string;\r\n-    dateFormat: string;\r\n-    defaultPageSize: number;\r\n-  };\r\n-  testData?: Record<string, any>;\r\n-}\r\n-\r\n-export const useRoleSettings = (role: string) => {\r\n-  const [settings, setSettings] = useState<RoleSettings | null>(null);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState<string | null>(null);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchSettings = async () => {\r\n-      try {\r\n-        setLoading(true);\r\n-        setError(null);\r\n-\r\n-        const { data, error: fetchError } = await supabase\r\n-          .from('role_settings')\r\n-          .select('settings')\r\n-          .eq('role_key', role)\r\n-          .maybeSingle(); // Use maybeSingle() instead of single()\r\n-\r\n-        if (fetchError) {\r\n-          throw fetchError;\r\n-        }\r\n-\r\n-        // Comprehensive default settings\r\n-        const defaultSettings: RoleSettings = {\r\n-          defaultView: 'dashboard',\r\n-          notifications: { \r\n-            email: true, \r\n-            push: true,\r\n-            systemAlerts: true \r\n-          },\r\n-          reports: ['attendance', 'progress', 'usage'],\r\n-          dashboardConfig: {\r\n-            quickStats: ['students', 'classes', 'completion'],\r\n-            charts: ['progress', 'activity'],\r\n-            recentActivities: true,\r\n-            notifications: true\r\n-          },\r\n-          permissions: {\r\n-            users: {\r\n-              view: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              create: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              edit: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              delete: role === 'SUPER_ADMIN'\r\n-            },\r\n-            content: {\r\n-              view: true,\r\n-              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              delete: role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n-            },\r\n-            reports: {\r\n-              view: role !== 'STUDENT',\r\n-              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              export: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n-            },\r\n-            settings: {\r\n-              view: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              edit: role === 'SUPER_ADMIN'\r\n-            },\r\n-            classes: {\r\n-              view: true,\r\n-              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              delete: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              assignStudents: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n-            },\r\n-            grades: {\r\n-              view: true,\r\n-              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-              delete: role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n-            }\r\n-          },\r\n-          features: {\r\n-            aiAssistant: role !== 'STUDENT',\r\n-            advancedReporting: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-            contentCreation: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-            bulkOperations: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-            dataExport: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n-            integrations: role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n-          },\r\n-          preferences: {\r\n-            theme: 'system',\r\n-            language: 'en',\r\n-            timezone: 'UTC',\r\n-            dateFormat: 'MM/DD/YYYY',\r\n-            defaultPageSize: 10\r\n-          }\r\n-        };\r\n-\r\n-        setSettings(data?.settings || defaultSettings);\r\n-      } catch (err) {\r\n-        const message = err instanceof Error ? err.message : 'Failed to load role settings';\r\n-        logger.error(message, {\r\n-          context: { error: err, role },\r\n-          source: 'useRoleSettings'\r\n-        });\r\n-        setError(message);\r\n-        // Set default settings even on error\r\n-        setSettings({\r\n-          defaultView: 'dashboard',\r\n-          notifications: { email: true, push: true },\r\n-          reports: [],\r\n-          dashboardConfig: {\r\n-            quickStats: [],\r\n-            charts: [],\r\n-            recentActivities: true,\r\n-            notifications: true\r\n-          }\r\n-        });\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchSettings();\r\n-  }, [role]);\r\n-\r\n-  return { settings, loading, error };\r\n-};\r\n-\r\n-// Add default settings type and value\r\n-interface DefaultSettings {\r\n-  // Add your default settings structure here\r\n-  canManageUsers?: boolean;\r\n-  canManageRoles?: boolean;\r\n-  // ... other settings\r\n-}\r\n-\r\n-const defaultSettings: DefaultSettings = {\r\n-  canManageUsers: false,\r\n-  canManageRoles: false,\r\n-  // ... other default settings\r\n+import { useState, useEffect } from 'react';\n+import { supabase } from '../lib/supabase';\n+import { logger } from '../lib/logger';\n+\n+export interface RoleSettings {\n+  defaultView: string;\n+  notifications: {\n+    email: boolean;\n+    push: boolean;\n+    systemAlerts?: boolean;\n+    [key: string]: boolean | undefined;\n+  };\n+  reports: string[];\n+  dashboardConfig: {\n+    quickStats: string[];\n+    charts: string[];\n+    recentActivities: boolean;\n+    notifications: boolean;\n+    [key: string]: any;\n+  };\n+  testData?: Record<string, any>;\n+}\n+\n+export const useRoleSettings = (role: string) => {\n+  const [settings, setSettings] = useState<RoleSettings | null>(null);\n+  const [loading, setLoading] = useState(true);\n+  const [error, setError] = useState<string | null>(null);\n+\n+  useEffect(() => {\n+    const fetchSettings = async () => {\n+      try {\n+        setLoading(true);\n+        setError(null);\n+\n+        const { data, error: fetchError } = await supabase\n+          .from('role_settings')\n+          .select('settings')\n+          .eq('role_key', role)\n+          .maybeSingle(); // Use maybeSingle() instead of single()\n+\n+        if (fetchError) {\n+          throw fetchError;\n+        }\n+\n+        const defaultSettings: RoleSettings = {\n+          defaultView: 'dashboard',\n+          notifications: { email: true, push: true },\n+          reports: [],\n+          dashboardConfig: {\n+            quickStats: [],\n+            charts: [],\n+            recentActivities: true,\n+            notifications: true\n+          }\n+        };\n+\n+        setSettings(data?.settings || defaultSettings);\n+      } catch (err) {\n+        const message = err instanceof Error ? err.message : 'Failed to load role settings';\n+        logger.error(message, {\n+          context: { error: err, role },\n+          source: 'useRoleSettings'\n+        });\n+        setError(message);\n+        // Set default settings even on error\n+        setSettings({\n+          defaultView: 'dashboard',\n+          notifications: { email: true, push: true },\n+          reports: [],\n+          dashboardConfig: {\n+            quickStats: [],\n+            charts: [],\n+            recentActivities: true,\n+            notifications: true\n+          }\n+        });\n+      } finally {\n+        setLoading(false);\n+      }\n+    };\n+\n+    fetchSettings();\n+  }, [role]);\n+\n+  return { settings, loading, error };\n+};\n+\n+// Add default settings type and value\n+interface DefaultSettings {\n+  // Add your default settings structure here\n+  canManageUsers?: boolean;\n+  canManageRoles?: boolean;\n+  // ... other settings\n+}\n+\n+const defaultSettings: DefaultSettings = {\n+  canManageUsers: false,\n+  canManageRoles: false,\n+  // ... other default settings\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740924443628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,23 +2,94 @@\n import { supabase } from '../lib/supabase';\n import { logger } from '../lib/logger';\n \n export interface RoleSettings {\n+  // General preferences\n   defaultView: string;\n+  theme?: 'light' | 'dark' | 'system';\n+  language?: string;\n+  \n+  // Notification settings\n   notifications: {\n     email: boolean;\n     push: boolean;\n     systemAlerts?: boolean;\n+    lessonReminders?: boolean;\n+    studentProgress?: boolean;\n+    assessmentResults?: boolean;\n+    adminAnnouncements?: boolean;\n     [key: string]: boolean | undefined;\n   };\n+  \n+  // Content access permissions\n+  contentAccess: {\n+    canCreateContent: boolean;\n+    canEditContent: boolean;\n+    canDeleteContent: boolean;\n+    canPublishContent: boolean;\n+    canReviewContent: boolean;\n+    visibleGrades: string[]; // IDs of grades accessible to this role\n+    restrictedTopics?: string[]; // Topics that should be restricted\n+  };\n+  \n+  // User management permissions\n+  userManagement: {\n+    canCreateUsers: boolean;\n+    canEditUsers: boolean;\n+    canDeleteUsers: boolean;\n+    canAssignRoles: boolean;\n+    canViewStudentData: boolean;\n+    canManageClasses: boolean;\n+    userAccessLevel: 'none' | 'limited' | 'full';\n+  };\n+  \n+  // Reports and analytics\n   reports: string[];\n+  analytics: {\n+    canAccessAnalytics: boolean;\n+    availableDashboards: string[];\n+    exportFormats: ('pdf' | 'excel' | 'csv')[];\n+    scheduledReports: boolean;\n+  };\n+  \n+  // Dashboard configuration\n   dashboardConfig: {\n     quickStats: string[];\n     charts: string[];\n     recentActivities: boolean;\n     notifications: boolean;\n+    upcomingLessons: boolean;\n+    studentProgress: boolean;\n     [key: string]: any;\n   };\n+  \n+  // Learning features\n+  learningFeatures: {\n+    aiAssistant: boolean;\n+    pronunciationTrainer: boolean;\n+    instantFeedback: boolean;\n+    gameBasedLearning: boolean;\n+    collaborativeExercises: boolean;\n+  };\n+  \n+  // Communication tools\n+  communicationTools: {\n+    inAppChat: boolean;\n+    canMessageStudents: boolean;\n+    canMessageParents: boolean;\n+    canMessageTeachers: boolean;\n+    canSendAnnouncements: boolean;\n+  };\n+  \n+  // System settings\n+  systemAccess: {\n+    canAccessSettings: boolean;\n+    canConfigureSystem: boolean;\n+    canViewLogs: boolean;\n+    canManageIntegrations: boolean;\n+    canManageSchoolProfile: boolean;\n+  };\n+  \n   testData?: Record<string, any>;\n }\n \n export const useRoleSettings = (role: string) => {\n@@ -43,15 +114,72 @@\n         }\n \n         const defaultSettings: RoleSettings = {\n           defaultView: 'dashboard',\n-          notifications: { email: true, push: true },\n+          theme: 'system',\n+          language: 'en',\n+          notifications: { \n+            email: true, \n+            push: true, \n+            systemAlerts: true,\n+            lessonReminders: true,\n+            studentProgress: true,\n+            assessmentResults: true,\n+            adminAnnouncements: true\n+          },\n+          contentAccess: {\n+            canCreateContent: role === 'ADMIN' || role === 'TEACHER',\n+            canEditContent: role === 'ADMIN' || role === 'TEACHER',\n+            canDeleteContent: role === 'ADMIN',\n+            canPublishContent: role === 'ADMIN' || role === 'TEACHER',\n+            canReviewContent: role === 'ADMIN' || role === 'TEACHER',\n+            visibleGrades: [],\n+            restrictedTopics: []\n+          },\n+          userManagement: {\n+            canCreateUsers: role === 'ADMIN',\n+            canEditUsers: role === 'ADMIN',\n+            canDeleteUsers: role === 'ADMIN',\n+            canAssignRoles: role === 'ADMIN',\n+            canViewStudentData: role === 'ADMIN' || role === 'TEACHER',\n+            canManageClasses: role === 'ADMIN' || role === 'TEACHER',\n+            userAccessLevel: role === 'ADMIN' ? 'full' : (role === 'TEACHER' ? 'limited' : 'none')\n+          },\n           reports: [],\n+          analytics: {\n+            canAccessAnalytics: role === 'ADMIN' || role === 'TEACHER',\n+            availableDashboards: ['overview', 'students', 'progress'],\n+            exportFormats: ['pdf', 'excel', 'csv'],\n+            scheduledReports: role === 'ADMIN'\n+          },\n           dashboardConfig: {\n             quickStats: [],\n             charts: [],\n             recentActivities: true,\n-            notifications: true\n+            notifications: true,\n+            upcomingLessons: true,\n+            studentProgress: true\n+          },\n+          learningFeatures: {\n+            aiAssistant: true,\n+            pronunciationTrainer: true,\n+            instantFeedback: true,\n+            gameBasedLearning: true,\n+            collaborativeExercises: role !== 'STUDENT' ? false : true\n+          },\n+          communicationTools: {\n+            inAppChat: role !== 'STUDENT',\n+            canMessageStudents: role === 'ADMIN' || role === 'TEACHER',\n+            canMessageParents: role === 'ADMIN' || role === 'TEACHER',\n+            canMessageTeachers: role === 'ADMIN' || role === 'STUDENT',\n+            canSendAnnouncements: role === 'ADMIN'\n+          },\n+          systemAccess: {\n+            canAccessSettings: role === 'ADMIN',\n+            canConfigureSystem: role === 'ADMIN',\n+            canViewLogs: role === 'ADMIN',\n+            canManageIntegrations: role === 'ADMIN',\n+            canManageSchoolProfile: role === 'ADMIN'\n           }\n         };\n \n         setSettings(data?.settings || defaultSettings);\n@@ -64,15 +192,66 @@\n         setError(message);\n         // Set default settings even on error\n         setSettings({\n           defaultView: 'dashboard',\n-          notifications: { email: true, push: true },\n+          theme: 'system',\n+          language: 'en',\n+          notifications: { \n+            email: true, \n+            push: true \n+          },\n+          contentAccess: {\n+            canCreateContent: false,\n+            canEditContent: false,\n+            canDeleteContent: false,\n+            canPublishContent: false,\n+            canReviewContent: false,\n+            visibleGrades: [],\n+          },\n+          userManagement: {\n+            canCreateUsers: false,\n+            canEditUsers: false,\n+            canDeleteUsers: false,\n+            canAssignRoles: false,\n+            canViewStudentData: false,\n+            canManageClasses: false,\n+            userAccessLevel: 'none'\n+          },\n           reports: [],\n+          analytics: {\n+            canAccessAnalytics: false,\n+            availableDashboards: [],\n+            exportFormats: ['pdf'],\n+            scheduledReports: false\n+          },\n           dashboardConfig: {\n             quickStats: [],\n             charts: [],\n             recentActivities: true,\n-            notifications: true\n+            notifications: true,\n+            upcomingLessons: false,\n+            studentProgress: false\n+          },\n+          learningFeatures: {\n+            aiAssistant: false,\n+            pronunciationTrainer: false,\n+            instantFeedback: false,\n+            gameBasedLearning: false,\n+            collaborativeExercises: false\n+          },\n+          communicationTools: {\n+            inAppChat: false,\n+            canMessageStudents: false,\n+            canMessageParents: false,\n+            canMessageTeachers: false,\n+            canSendAnnouncements: false\n+          },\n+          systemAccess: {\n+            canAccessSettings: false,\n+            canConfigureSystem: false,\n+            canViewLogs: false,\n+            canManageIntegrations: false,\n+            canManageSchoolProfile: false\n           }\n         });\n       } finally {\n         setLoading(false);\n"
                },
                {
                    "date": 1740924480494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,9 +271,9 @@\n   canManageRoles?: boolean;\n   // ... other settings\n }\n \n-const defaultSettings: DefaultSettings = {\n-  canManageUsers: false,\n-  canManageRoles: false,\n-  // ... other default settings\n-};\n\\ No newline at end of file\n+// const defaultSettings: DefaultSettings = {\n+//   canManageUsers: false,\n+//   canManageRoles: false,\n+//   // ... other default settings\n+// };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740924491501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,9 +271,9 @@\n   canManageRoles?: boolean;\n   // ... other settings\n }\n \n-// const defaultSettings: DefaultSettings = {\n-//   canManageUsers: false,\n-//   canManageRoles: false,\n-//   // ... other default settings\n-// };\n\\ No newline at end of file\n+const _defaultSettings: DefaultSettings = {\n+  canManageUsers: false,\n+  canManageRoles: false,\n+  // ... other default settings\n+};\n\\ No newline at end of file\n"
                }
            ],
            "date": 1740924291242,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\nimport { logger } from '../lib/logger';\r\n\r\nexport interface RoleSettings {\r\n  defaultView: string;\r\n  notifications: {\r\n    email: boolean;\r\n    push: boolean;\r\n    systemAlerts?: boolean;\r\n    [key: string]: boolean | undefined;\r\n  };\r\n  reports: string[];\r\n  dashboardConfig: {\r\n    quickStats: string[];\r\n    charts: string[];\r\n    recentActivities: boolean;\r\n    notifications: boolean;\r\n    [key: string]: any;\r\n  };\r\n  permissions: {\r\n    users: {\r\n      view: boolean;\r\n      create: boolean;\r\n      edit: boolean;\r\n      delete: boolean;\r\n    };\r\n    content: {\r\n      view: boolean;\r\n      create: boolean;\r\n      edit: boolean;\r\n      delete: boolean;\r\n    };\r\n    reports: {\r\n      view: boolean;\r\n      create: boolean;\r\n      export: boolean;\r\n    };\r\n    settings: {\r\n      view: boolean;\r\n      edit: boolean;\r\n    };\r\n    classes: {\r\n      view: boolean;\r\n      create: boolean;\r\n      edit: boolean;\r\n      delete: boolean;\r\n      assignStudents: boolean;\r\n    };\r\n    grades: {\r\n      view: boolean;\r\n      create: boolean;\r\n      edit: boolean;\r\n      delete: boolean;\r\n    };\r\n  };\r\n  features: {\r\n    aiAssistant: boolean;\r\n    advancedReporting: boolean;\r\n    contentCreation: boolean;\r\n    bulkOperations: boolean;\r\n    dataExport: boolean;\r\n    integrations: boolean;\r\n  };\r\n  preferences: {\r\n    theme: 'light' | 'dark' | 'system';\r\n    language: string;\r\n    timezone: string;\r\n    dateFormat: string;\r\n    defaultPageSize: number;\r\n  };\r\n  testData?: Record<string, any>;\r\n}\r\n\r\nexport const useRoleSettings = (role: string) => {\r\n  const [settings, setSettings] = useState<RoleSettings | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSettings = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const { data, error: fetchError } = await supabase\r\n          .from('role_settings')\r\n          .select('settings')\r\n          .eq('role_key', role)\r\n          .maybeSingle(); // Use maybeSingle() instead of single()\r\n\r\n        if (fetchError) {\r\n          throw fetchError;\r\n        }\r\n\r\n        // Comprehensive default settings\r\n        const defaultSettings: RoleSettings = {\r\n          defaultView: 'dashboard',\r\n          notifications: { \r\n            email: true, \r\n            push: true,\r\n            systemAlerts: true \r\n          },\r\n          reports: ['attendance', 'progress', 'usage'],\r\n          dashboardConfig: {\r\n            quickStats: ['students', 'classes', 'completion'],\r\n            charts: ['progress', 'activity'],\r\n            recentActivities: true,\r\n            notifications: true\r\n          },\r\n          permissions: {\r\n            users: {\r\n              view: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              create: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              edit: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              delete: role === 'SUPER_ADMIN'\r\n            },\r\n            content: {\r\n              view: true,\r\n              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              delete: role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n            },\r\n            reports: {\r\n              view: role !== 'STUDENT',\r\n              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              export: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN'\r\n            },\r\n            settings: {\r\n              view: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              edit: role === 'SUPER_ADMIN'\r\n            },\r\n            classes: {\r\n              view: true,\r\n              create: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              edit: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              delete: role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n              assignStudents: role === 'TEACHER' || role === 'ADMIN' || role === 'SUPER_ADMIN',\r\n            },\r\n            grades: {\r\n              view: true,\r\n          }\r\n        };\r\n\r\n        setSettings(data?.settings || defaultSettings);\r\n      } catch (err) {\r\n        const message = err instanceof Error ? err.message : 'Failed to load role settings';\r\n        logger.error(message, {\r\n          context: { error: err, role },\r\n          source: 'useRoleSettings'\r\n        });\r\n        setError(message);\r\n        // Set default settings even on error\r\n        setSettings({\r\n          defaultView: 'dashboard',\r\n          notifications: { email: true, push: true },\r\n          reports: [],\r\n          dashboardConfig: {\r\n            quickStats: [],\r\n            charts: [],\r\n            recentActivities: true,\r\n            notifications: true\r\n          }\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSettings();\r\n  }, [role]);\r\n\r\n  return { settings, loading, error };\r\n};\r\n\r\n// Add default settings type and value\r\ninterface DefaultSettings {\r\n  // Add your default settings structure here\r\n  canManageUsers?: boolean;\r\n  canManageRoles?: boolean;\r\n  // ... other settings\r\n}\r\n\r\nconst defaultSettings: DefaultSettings = {\r\n  canManageUsers: false,\r\n  canManageRoles: false,\r\n  // ... other default settings\r\n};"
        }
    ]
}