{
    "sourceFile": "src/features/content-management/components/questions/QuestionList.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740085980747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740087195398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n import { ChevronDown, ChevronRight, Plus, Save, Trash2 } from 'lucide-react';\r\n-import { Card, CardContent, CardHeader } from '@/components/ui/card';\r\n+import { Card, CardContent, CardHeader, CardDescription } from '@/components/ui/card';\r\n import { Button } from '@/components/ui/button';\r\n import { Badge } from '@/components/ui/badge';\r\n import { QuestionTypeSelect } from './QuestionTypeSelect';\r\n import { QuestionForm } from './QuestionForm';\r\n import { Question, SaveStatus } from '../../api/types';\r\n import { QUESTION_TYPES } from '../../utils/constants';\r\n import { cn } from '@/lib/utils';\r\n+import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n \r\n interface QuestionListProps {\r\n   questions: Question[];\r\n   selectedQuestionType: string;\r\n@@ -33,102 +34,158 @@\n   onSaveQuestion,\r\n   onExpandQuestion,\r\n }: QuestionListProps) => {\r\n   return (\r\n-    <div className=\"space-y-4\">\r\n-      {questions.map((question, index) => (\r\n-        <Card \r\n-          key={question.id} \r\n-          className={cn(\r\n-            \"relative border-l-4 transition-colors duration-200\",\r\n-            expandedQuestion === index \r\n-              ? \"border-l-primary\" \r\n-              : \"border-l-primary/40 hover:border-l-primary\"\r\n-          )}\r\n-        >\r\n-          <CardHeader className=\"pb-3\">\r\n-            <div className=\"flex items-center justify-between gap-4\">\r\n-              <div className=\"flex items-center gap-3 min-w-0 flex-1\">\r\n-                <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n-                  <span className=\"px-2 py-1 bg-primary/10 rounded-md text-sm font-semibold text-primary whitespace-nowrap\">\r\n-                    Q {index + 1}\r\n-                  </span>\r\n-                  <Badge variant=\"outline\" className=\"whitespace-nowrap\">\r\n-                    {QUESTION_TYPES[question.type]?.label || question.type}\r\n-                  </Badge>\r\n-                  {question.isDraft && (\r\n-                    <Badge variant=\"secondary\" className=\"whitespace-nowrap\">\r\n-                      Draft\r\n+    <div className=\"space-y-6\">\r\n+      <CardHeader className=\"px-0\">\r\n+        <CardDescription>\r\n+          Add and manage questions for this lesson. Each question can have multiple exercise prompts and follow-up questions.\r\n+        </CardDescription>\r\n+      </CardHeader>\r\n+\r\n+      {/* Questions List */}\r\n+      <div className=\"space-y-4\">\r\n+        {questions.map((question, index) => (\r\n+          <Card \r\n+            key={question.id} \r\n+            className={cn(\r\n+              \"relative border-l-4 transition-colors duration-200\",\r\n+              expandedQuestion === index \r\n+                ? \"border-l-primary shadow-md\" \r\n+                : \"border-l-primary/40 hover:border-l-primary\"\r\n+            )}\r\n+          >\r\n+            <CardHeader className=\"pb-3\">\r\n+              <div className=\"flex items-center justify-between gap-4\">\r\n+                <div className=\"flex items-center gap-3 min-w-0 flex-1\">\r\n+                  <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n+                    <span className=\"px-2 py-1 bg-primary/10 rounded-md text-sm font-semibold text-primary whitespace-nowrap\">\r\n+                      Q {index + 1}\r\n+                    </span>\r\n+                    <Badge variant=\"outline\" className=\"whitespace-nowrap\">\r\n+                      {QUESTION_TYPES[question.type]?.label || question.type}\r\n                     </Badge>\r\n+                    {question.isDraft && (\r\n+                      <Badge variant=\"secondary\" className=\"whitespace-nowrap\">\r\n+                        Draft\r\n+                      </Badge>\r\n+                    )}\r\n+                  </div>\r\n+                  {expandedQuestion !== index && (\r\n+                    <div className=\"text-sm text-muted-foreground truncate\">\r\n+                      {question.title || 'No question text'}\r\n+                    </div>\r\n                   )}\r\n                 </div>\r\n-                {expandedQuestion !== index && (\r\n-                  <div className=\"text-sm text-muted-foreground truncate\">\r\n-                    {question.title || 'No question text'} - {question.data?.content || 'No question content'}\r\n-                  </div>\r\n-                )}\r\n+                <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n+                  <TooltipProvider>\r\n+                    <Tooltip>\r\n+                      <TooltipTrigger asChild>\r\n+                        <Button\r\n+                          variant=\"ghost\"\r\n+                          size=\"sm\"\r\n+                          onClick={() => onExpandQuestion(expandedQuestion === index ? null : index)}\r\n+                        >\r\n+                          {expandedQuestion === index ? (\r\n+                            <ChevronDown className=\"h-4 w-4\" />\r\n+                          ) : (\r\n+                            <ChevronRight className=\"h-4 w-4\" />\r\n+                          )}\r\n+                        </Button>\r\n+                      </TooltipTrigger>\r\n+                      <TooltipContent>\r\n+                        {expandedQuestion === index ? 'Collapse' : 'Expand'}\r\n+                      </TooltipContent>\r\n+                    </Tooltip>\r\n+                  </TooltipProvider>\r\n+\r\n+                  <TooltipProvider>\r\n+                    <Tooltip>\r\n+                      <TooltipTrigger asChild>\r\n+                        <Button\r\n+                          variant=\"ghost\"\r\n+                          size=\"sm\"\r\n+                          onClick={() => onRemoveQuestion(index)}\r\n+                        >\r\n+                          <Trash2 className=\"h-4 w-4 text-destructive\" />\r\n+                        </Button>\r\n+                      </TooltipTrigger>\r\n+                      <TooltipContent>Delete question</TooltipContent>\r\n+                    </Tooltip>\r\n+                  </TooltipProvider>\r\n+                </div>\r\n               </div>\r\n-              <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n-                <Button\r\n-                  variant=\"ghost\"\r\n-                  size=\"sm\"\r\n-                  onClick={() => onExpandQuestion(index)}\r\n-                >\r\n-                  {expandedQuestion === index ? (\r\n-                    <ChevronDown className=\"h-4 w-4\" />\r\n-                  ) : (\r\n-                    <ChevronRight className=\"h-4 w-4\" />\r\n-                  )}\r\n-                </Button>\r\n-                <Button\r\n-                  variant=\"ghost\"\r\n-                  size=\"sm\"\r\n-                  onClick={() => onRemoveQuestion(index)}\r\n-                >\r\n-                  <Trash2 className=\"h-4 w-4 text-destructive\" />\r\n-                </Button>\r\n-              </div>\r\n-            </div>\r\n-          </CardHeader>\r\n-          {expandedQuestion === index && (\r\n-            <CardContent>\r\n-              <QuestionForm\r\n-                question={question}\r\n-                index={index}\r\n-                onUpdate={(updatedQuestion) => onUpdateQuestion(index, updatedQuestion)}\r\n-              />\r\n-              <Button \r\n-                size=\"sm\"\r\n-                variant=\"outline\"\r\n-                onClick={() => onSaveQuestion(question, index)}\r\n-                className=\"mt-4\"\r\n-                disabled={questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving'}\r\n-              >\r\n-                {questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving' ? (\r\n-                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary mr-2\" />\r\n-                ) : (\r\n-                  <Save className=\"h-4 w-4 mr-2\" />\r\n-                )}\r\n-                Save Question\r\n-              </Button>\r\n-            </CardContent>\r\n-          )}\r\n-        </Card>\r\n-      ))}\r\n+            </CardHeader>\r\n \r\n+            {expandedQuestion === index && (\r\n+              <CardContent>\r\n+                <QuestionForm\r\n+                  question={question}\r\n+                  index={index}\r\n+                  onUpdate={(updatedQuestion) => onUpdateQuestion(index, updatedQuestion)}\r\n+                />\r\n+                <div className=\"flex items-center justify-end gap-2 mt-4\">\r\n+                  <TooltipProvider>\r\n+                    <Tooltip>\r\n+                      <TooltipTrigger asChild>\r\n+                        <Button \r\n+                          size=\"sm\"\r\n+                          variant=\"outline\"\r\n+                          onClick={() => onSaveQuestion(question, index)}\r\n+                          disabled={questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving'}\r\n+                        >\r\n+                          {questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving' ? (\r\n+                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary mr-2\" />\r\n+                          ) : (\r\n+                            <Save className=\"h-4 w-4 mr-2\" />\r\n+                          )}\r\n+                          Save Question\r\n+                        </Button>\r\n+                      </TooltipTrigger>\r\n+                      <TooltipContent>\r\n+                        {`Status: ${questionSaveStatuses.find(s => s.id === question.id)?.status || 'draft'}`}\r\n+                      </TooltipContent>\r\n+                    </Tooltip>\r\n+                  </TooltipProvider>\r\n+                  <Badge variant={\r\n+                    questionSaveStatuses.find(s => s.id === question.id)?.status === 'saved'\r\n+                      ? 'secondary'\r\n+                      : questionSaveStatuses.find(s => s.id === question.id)?.status === 'error'\r\n+                        ? 'destructive'\r\n+                        : 'default'\r\n+                  }>\r\n+                    {questionSaveStatuses.find(s => s.id === question.id)?.status || 'draft'}\r\n+                  </Badge>\r\n+                </div>\r\n+              </CardContent>\r\n+            )}\r\n+          </Card>\r\n+        ))}\r\n+      </div>\r\n+\r\n       {/* Add Question Section */}\r\n-      <div className=\"flex items-center justify-between\">\r\n-        <QuestionTypeSelect \r\n-          value={selectedQuestionType} \r\n-          onChange={onQuestionTypeChange}\r\n-        />\r\n+      <div className=\"flex items-center justify-between gap-4 pt-4\">\r\n+        <div className=\"flex-1 max-w-xs\">\r\n+          <QuestionTypeSelect \r\n+            value={selectedQuestionType} \r\n+            onChange={onQuestionTypeChange}\r\n+          />\r\n+        </div>\r\n         <Button\r\n           onClick={onAddQuestion}\r\n           disabled={!selectedQuestionType}\r\n         >\r\n           <Plus className=\"h-4 w-4 mr-2\" />\r\n           Add Question\r\n         </Button>\r\n       </div>\r\n+\r\n+      {/* Empty State */}\r\n+      {questions.length === 0 && (\r\n+        <div className=\"text-center py-8 text-muted-foreground\">\r\n+          <p>No questions added yet.</p>\r\n+          <p className=\"text-sm\">Select a question type and click 'Add Question' to get started.</p>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n }; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740091624144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,10 @@\n import { Question, SaveStatus } from '../../api/types';\r\n import { QUESTION_TYPES } from '../../utils/constants';\r\n import { cn } from '@/lib/utils';\r\n import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n+import { ScrollArea } from '@/components/ui/scroll-area';\r\n+import { useState } from 'react';\r\n \r\n interface QuestionListProps {\r\n   questions: Question[];\r\n   selectedQuestionType: string;\r\n@@ -33,159 +35,229 @@\n   onRemoveQuestion,\r\n   onSaveQuestion,\r\n   onExpandQuestion,\r\n }: QuestionListProps) => {\r\n+  const [hoveredQuestion, setHoveredQuestion] = useState<number | null>(null);\r\n+\r\n   return (\r\n-    <div className=\"space-y-6\">\r\n-      <CardHeader className=\"px-0\">\r\n-        <CardDescription>\r\n-          Add and manage questions for this lesson. Each question can have multiple exercise prompts and follow-up questions.\r\n-        </CardDescription>\r\n-      </CardHeader>\r\n+    <ScrollArea className=\"h-[calc(100vh-20rem)]\">\r\n+      <div className=\"space-y-6 px-1\">\r\n+        <CardHeader className=\"px-0 animate-fade-in-up\">\r\n+          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n+            <div>\r\n+              <h3 className=\"text-lg font-semibold bg-gradient-to-r from-primary to-primary/60 bg-clip-text text-transparent\">\r\n+                Questions\r\n+              </h3>\r\n+              <CardDescription className=\"mt-1\">\r\n+                Add and manage questions for this lesson. Each question can have multiple exercise prompts and follow-up questions.\r\n+              </CardDescription>\r\n+            </div>\r\n+            <div className=\"flex flex-col sm:flex-row gap-2 sm:items-center\">\r\n+              <div className=\"w-full sm:w-[200px]\">\r\n+                <QuestionTypeSelect \r\n+                  value={selectedQuestionType} \r\n+                  onChange={onQuestionTypeChange}\r\n+                />\r\n+              </div>\r\n+              <Button\r\n+                onClick={onAddQuestion}\r\n+                disabled={!selectedQuestionType}\r\n+                className={cn(\r\n+                  \"transition-all duration-200\",\r\n+                  \"hover:shadow-md\",\r\n+                  \"group\",\r\n+                  !selectedQuestionType && \"opacity-50\"\r\n+                )}\r\n+              >\r\n+                <Plus className=\"h-4 w-4 mr-2 transition-transform duration-200 group-hover:scale-110\" />\r\n+                Add Question\r\n+              </Button>\r\n+            </div>\r\n+          </div>\r\n+        </CardHeader>\r\n \r\n-      {/* Questions List */}\r\n-      <div className=\"space-y-4\">\r\n-        {questions.map((question, index) => (\r\n-          <Card \r\n-            key={question.id} \r\n-            className={cn(\r\n-              \"relative border-l-4 transition-colors duration-200\",\r\n-              expandedQuestion === index \r\n-                ? \"border-l-primary shadow-md\" \r\n-                : \"border-l-primary/40 hover:border-l-primary\"\r\n-            )}\r\n-          >\r\n-            <CardHeader className=\"pb-3\">\r\n-              <div className=\"flex items-center justify-between gap-4\">\r\n-                <div className=\"flex items-center gap-3 min-w-0 flex-1\">\r\n-                  <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n-                    <span className=\"px-2 py-1 bg-primary/10 rounded-md text-sm font-semibold text-primary whitespace-nowrap\">\r\n-                      Q {index + 1}\r\n-                    </span>\r\n-                    <Badge variant=\"outline\" className=\"whitespace-nowrap\">\r\n-                      {QUESTION_TYPES[question.type]?.label || question.type}\r\n-                    </Badge>\r\n-                    {question.isDraft && (\r\n-                      <Badge variant=\"secondary\" className=\"whitespace-nowrap\">\r\n-                        Draft\r\n+        {/* Questions List */}\r\n+        <div className=\"grid gap-4\">\r\n+          {questions.map((question, index) => (\r\n+            <Card \r\n+              key={question.id} \r\n+              className={cn(\r\n+                \"relative border-l-4 transition-all duration-200\",\r\n+                expandedQuestion === index \r\n+                  ? \"border-l-primary shadow-lg scale-[1.01] bg-card\" \r\n+                  : \"border-l-primary/40 hover:border-l-primary hover:shadow-md hover:scale-[1.005] bg-card/50\",\r\n+                \"animate-fade-in-up\"\r\n+              )}\r\n+              style={{ animationDelay: `${index * 50}ms` }}\r\n+              onMouseEnter={() => setHoveredQuestion(index)}\r\n+              onMouseLeave={() => setHoveredQuestion(null)}\r\n+            >\r\n+              <CardHeader className=\"pb-3\">\r\n+                <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\r\n+                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-3 min-w-0 flex-1\">\r\n+                    <div className=\"flex flex-wrap items-center gap-2\">\r\n+                      <div className={cn(\r\n+                        \"px-2 py-1 bg-primary/10 rounded-md\",\r\n+                        \"text-sm font-semibold text-primary\",\r\n+                        \"transition-all duration-200\",\r\n+                        hoveredQuestion === index && \"bg-primary/20\"\r\n+                      )}>\r\n+                        Question {index + 1}\r\n+                      </div>\r\n+                      <Badge variant=\"outline\" className={cn(\r\n+                        \"whitespace-nowrap capitalize\",\r\n+                        \"transition-all duration-200\",\r\n+                        hoveredQuestion === index && \"bg-primary/5 border-primary/30\"\r\n+                      )}>\r\n+                        {QUESTION_TYPES[question.type]?.label || question.type}\r\n                       </Badge>\r\n+                      {question.isDraft && (\r\n+                        <Badge variant=\"secondary\" className=\"whitespace-nowrap animate-fade-in\">\r\n+                          Draft\r\n+                        </Badge>\r\n+                      )}\r\n+                      {questionSaveStatuses.find(s => s.id === question.id)?.status === 'saved' && (\r\n+                        <Badge variant=\"success\" className=\"animate-fade-in\">Saved</Badge>\r\n+                      )}\r\n+                    </div>\r\n+                    {expandedQuestion !== index && (\r\n+                      <div className=\"text-sm text-muted-foreground truncate mt-2 sm:mt-0\">\r\n+                        {question.title || 'No question text'}\r\n+                      </div>\r\n                     )}\r\n                   </div>\r\n-                  {expandedQuestion !== index && (\r\n-                    <div className=\"text-sm text-muted-foreground truncate\">\r\n-                      {question.title || 'No question text'}\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n-                <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n-                  <TooltipProvider>\r\n-                    <Tooltip>\r\n-                      <TooltipTrigger asChild>\r\n-                        <Button\r\n-                          variant=\"ghost\"\r\n-                          size=\"sm\"\r\n-                          onClick={() => onExpandQuestion(expandedQuestion === index ? null : index)}\r\n-                        >\r\n-                          {expandedQuestion === index ? (\r\n-                            <ChevronDown className=\"h-4 w-4\" />\r\n-                          ) : (\r\n-                            <ChevronRight className=\"h-4 w-4\" />\r\n-                          )}\r\n-                        </Button>\r\n-                      </TooltipTrigger>\r\n-                      <TooltipContent>\r\n-                        {expandedQuestion === index ? 'Collapse' : 'Expand'}\r\n-                      </TooltipContent>\r\n-                    </Tooltip>\r\n-                  </TooltipProvider>\r\n+                  <div className=\"flex items-center gap-2 flex-shrink-0 self-end sm:self-auto\">\r\n+                    <TooltipProvider>\r\n+                      <Tooltip>\r\n+                        <TooltipTrigger asChild>\r\n+                          <Button\r\n+                            variant=\"ghost\"\r\n+                            size=\"sm\"\r\n+                            onClick={() => onExpandQuestion(expandedQuestion === index ? null : index)}\r\n+                            className={cn(\r\n+                              \"transition-all duration-200\",\r\n+                              \"hover:bg-primary/10\",\r\n+                              \"group\"\r\n+                            )}\r\n+                          >\r\n+                            {expandedQuestion === index ? (\r\n+                              <ChevronDown className=\"h-4 w-4 transition-transform duration-200 group-hover:scale-110\" />\r\n+                            ) : (\r\n+                              <ChevronRight className=\"h-4 w-4 transition-transform duration-200 group-hover:scale-110\" />\r\n+                            )}\r\n+                          </Button>\r\n+                        </TooltipTrigger>\r\n+                        <TooltipContent>\r\n+                          {expandedQuestion === index ? 'Collapse' : 'Expand'}\r\n+                        </TooltipContent>\r\n+                      </Tooltip>\r\n+                    </TooltipProvider>\r\n \r\n-                  <TooltipProvider>\r\n-                    <Tooltip>\r\n-                      <TooltipTrigger asChild>\r\n-                        <Button\r\n-                          variant=\"ghost\"\r\n-                          size=\"sm\"\r\n-                          onClick={() => onRemoveQuestion(index)}\r\n-                        >\r\n-                          <Trash2 className=\"h-4 w-4 text-destructive\" />\r\n-                        </Button>\r\n-                      </TooltipTrigger>\r\n-                      <TooltipContent>Delete question</TooltipContent>\r\n-                    </Tooltip>\r\n-                  </TooltipProvider>\r\n+                    <TooltipProvider>\r\n+                      <Tooltip>\r\n+                        <TooltipTrigger asChild>\r\n+                          <Button\r\n+                            variant=\"ghost\"\r\n+                            size=\"sm\"\r\n+                            onClick={() => onRemoveQuestion(index)}\r\n+                            className={cn(\r\n+                              \"transition-all duration-200\",\r\n+                              \"hover:bg-destructive/10\",\r\n+                              \"group\"\r\n+                            )}\r\n+                          >\r\n+                            <Trash2 className=\"h-4 w-4 text-destructive transition-transform duration-200 group-hover:scale-110\" />\r\n+                          </Button>\r\n+                        </TooltipTrigger>\r\n+                        <TooltipContent>Delete question</TooltipContent>\r\n+                      </Tooltip>\r\n+                    </TooltipProvider>\r\n+                  </div>\r\n                 </div>\r\n-              </div>\r\n-            </CardHeader>\r\n+              </CardHeader>\r\n \r\n-            {expandedQuestion === index && (\r\n-              <CardContent>\r\n-                <QuestionForm\r\n-                  question={question}\r\n-                  index={index}\r\n-                  onUpdate={(updatedQuestion) => onUpdateQuestion(index, updatedQuestion)}\r\n-                />\r\n-                <div className=\"flex items-center justify-end gap-2 mt-4\">\r\n-                  <TooltipProvider>\r\n-                    <Tooltip>\r\n-                      <TooltipTrigger asChild>\r\n-                        <Button \r\n-                          size=\"sm\"\r\n-                          variant=\"outline\"\r\n-                          onClick={() => onSaveQuestion(question, index)}\r\n-                          disabled={questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving'}\r\n-                        >\r\n-                          {questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving' ? (\r\n-                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary mr-2\" />\r\n-                          ) : (\r\n-                            <Save className=\"h-4 w-4 mr-2\" />\r\n-                          )}\r\n-                          Save Question\r\n-                        </Button>\r\n-                      </TooltipTrigger>\r\n-                      <TooltipContent>\r\n-                        {`Status: ${questionSaveStatuses.find(s => s.id === question.id)?.status || 'draft'}`}\r\n-                      </TooltipContent>\r\n-                    </Tooltip>\r\n-                  </TooltipProvider>\r\n-                  <Badge variant={\r\n-                    questionSaveStatuses.find(s => s.id === question.id)?.status === 'saved'\r\n-                      ? 'secondary'\r\n-                      : questionSaveStatuses.find(s => s.id === question.id)?.status === 'error'\r\n-                        ? 'destructive'\r\n-                        : 'default'\r\n-                  }>\r\n-                    {questionSaveStatuses.find(s => s.id === question.id)?.status || 'draft'}\r\n-                  </Badge>\r\n-                </div>\r\n-              </CardContent>\r\n-            )}\r\n-          </Card>\r\n-        ))}\r\n-      </div>\r\n+              {expandedQuestion === index && (\r\n+                <CardContent className=\"animate-fade-in\">\r\n+                  <QuestionForm\r\n+                    question={question}\r\n+                    index={index}\r\n+                    onUpdate={(updatedQuestion) => onUpdateQuestion(index, updatedQuestion)}\r\n+                  />\r\n+                  <div className=\"flex items-center justify-end gap-2 mt-4\">\r\n+                    <TooltipProvider>\r\n+                      <Tooltip>\r\n+                        <TooltipTrigger asChild>\r\n+                          <Button \r\n+                            size=\"sm\"\r\n+                            variant=\"outline\"\r\n+                            onClick={() => onSaveQuestion(question, index)}\r\n+                            disabled={questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving'}\r\n+                            className={cn(\r\n+                              \"transition-all duration-200\",\r\n+                              \"hover:bg-primary hover:text-primary-foreground\",\r\n+                              \"group\"\r\n+                            )}\r\n+                          >\r\n+                            {questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving' ? (\r\n+                              <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-primary border-t-transparent mr-2\" />\r\n+                            ) : (\r\n+                              <Save className=\"h-4 w-4 mr-2 transition-transform duration-200 group-hover:scale-110\" />\r\n+                            )}\r\n+                            Save Question\r\n+                          </Button>\r\n+                        </TooltipTrigger>\r\n+                        <TooltipContent>\r\n+                          {`Status: ${questionSaveStatuses.find(s => s.id === question.id)?.status || 'draft'}`}\r\n+                        </TooltipContent>\r\n+                      </Tooltip>\r\n+                    </TooltipProvider>\r\n+                    <Badge variant={\r\n+                      questionSaveStatuses.find(s => s.id === question.id)?.status === 'saved'\r\n+                        ? 'success'\r\n+                        : questionSaveStatuses.find(s => s.id === question.id)?.status === 'error'\r\n+                          ? 'destructive'\r\n+                          : 'default'\r\n+                    } className=\"animate-fade-in\">\r\n+                      {questionSaveStatuses.find(s => s.id === question.id)?.status || 'draft'}\r\n+                    </Badge>\r\n+                  </div>\r\n+                </CardContent>\r\n+              )}\r\n+            </Card>\r\n+          ))}\r\n+        </div>\r\n \r\n-      {/* Add Question Section */}\r\n-      <div className=\"flex items-center justify-between gap-4 pt-4\">\r\n-        <div className=\"flex-1 max-w-xs\">\r\n-          <QuestionTypeSelect \r\n-            value={selectedQuestionType} \r\n-            onChange={onQuestionTypeChange}\r\n-          />\r\n-        </div>\r\n-        <Button\r\n-          onClick={onAddQuestion}\r\n-          disabled={!selectedQuestionType}\r\n-        >\r\n-          <Plus className=\"h-4 w-4 mr-2\" />\r\n-          Add Question\r\n-        </Button>\r\n+        {/* Empty State */}\r\n+        {questions.length === 0 && (\r\n+          <div className={cn(\r\n+            \"text-center py-12 px-4 rounded-lg\",\r\n+            \"border-2 border-dashed border-primary/20\",\r\n+            \"bg-card/50\",\r\n+            \"animate-fade-in-up\",\r\n+            \"transition-all duration-200\",\r\n+            \"hover:border-primary/30 hover:bg-card/80\"\r\n+          )}>\r\n+            <div className=\"max-w-sm mx-auto space-y-3\">\r\n+              <h3 className=\"text-lg font-semibold text-primary\">No questions yet</h3>\r\n+              <p className=\"text-sm text-muted-foreground\">\r\n+                Get started by selecting a question type and clicking 'Add Question'.\r\n+              </p>\r\n+              <Button\r\n+                onClick={onAddQuestion}\r\n+                disabled={!selectedQuestionType}\r\n+                className={cn(\r\n+                  \"mt-4 transition-all duration-200\",\r\n+                  \"hover:shadow-md\",\r\n+                  \"group\",\r\n+                  !selectedQuestionType && \"opacity-50\"\r\n+                )}\r\n+              >\r\n+                <Plus className=\"h-4 w-4 mr-2 transition-transform duration-200 group-hover:scale-110\" />\r\n+                Add Your First Question\r\n+              </Button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n       </div>\r\n-\r\n-      {/* Empty State */}\r\n-      {questions.length === 0 && (\r\n-        <div className=\"text-center py-8 text-muted-foreground\">\r\n-          <p>No questions added yet.</p>\r\n-          <p className=\"text-sm\">Select a question type and click 'Add Question' to get started.</p>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n+    </ScrollArea>\r\n   );\r\n }; \n\\ No newline at end of file\n"
                }
            ],
            "date": 1740085980747,
            "name": "Commit-0",
            "content": "import { ChevronDown, ChevronRight, Plus, Save, Trash2 } from 'lucide-react';\r\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { QuestionTypeSelect } from './QuestionTypeSelect';\r\nimport { QuestionForm } from './QuestionForm';\r\nimport { Question, SaveStatus } from '../../api/types';\r\nimport { QUESTION_TYPES } from '../../utils/constants';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface QuestionListProps {\r\n  questions: Question[];\r\n  selectedQuestionType: string;\r\n  questionSaveStatuses: SaveStatus[];\r\n  expandedQuestion: number | null;\r\n  onQuestionTypeChange: (type: string) => void;\r\n  onAddQuestion: () => void;\r\n  onUpdateQuestion: (index: number, question: Question) => void;\r\n  onRemoveQuestion: (index: number) => void;\r\n  onSaveQuestion: (question: Question, index: number) => void;\r\n  onExpandQuestion: (index: number | null) => void;\r\n}\r\n\r\nexport const QuestionList = ({\r\n  questions,\r\n  selectedQuestionType,\r\n  questionSaveStatuses,\r\n  expandedQuestion,\r\n  onQuestionTypeChange,\r\n  onAddQuestion,\r\n  onUpdateQuestion,\r\n  onRemoveQuestion,\r\n  onSaveQuestion,\r\n  onExpandQuestion,\r\n}: QuestionListProps) => {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {questions.map((question, index) => (\r\n        <Card \r\n          key={question.id} \r\n          className={cn(\r\n            \"relative border-l-4 transition-colors duration-200\",\r\n            expandedQuestion === index \r\n              ? \"border-l-primary\" \r\n              : \"border-l-primary/40 hover:border-l-primary\"\r\n          )}\r\n        >\r\n          <CardHeader className=\"pb-3\">\r\n            <div className=\"flex items-center justify-between gap-4\">\r\n              <div className=\"flex items-center gap-3 min-w-0 flex-1\">\r\n                <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n                  <span className=\"px-2 py-1 bg-primary/10 rounded-md text-sm font-semibold text-primary whitespace-nowrap\">\r\n                    Q {index + 1}\r\n                  </span>\r\n                  <Badge variant=\"outline\" className=\"whitespace-nowrap\">\r\n                    {QUESTION_TYPES[question.type]?.label || question.type}\r\n                  </Badge>\r\n                  {question.isDraft && (\r\n                    <Badge variant=\"secondary\" className=\"whitespace-nowrap\">\r\n                      Draft\r\n                    </Badge>\r\n                  )}\r\n                </div>\r\n                {expandedQuestion !== index && (\r\n                  <div className=\"text-sm text-muted-foreground truncate\">\r\n                    {question.title || 'No question text'} - {question.data?.content || 'No question content'}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() => onExpandQuestion(index)}\r\n                >\r\n                  {expandedQuestion === index ? (\r\n                    <ChevronDown className=\"h-4 w-4\" />\r\n                  ) : (\r\n                    <ChevronRight className=\"h-4 w-4\" />\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() => onRemoveQuestion(index)}\r\n                >\r\n                  <Trash2 className=\"h-4 w-4 text-destructive\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          {expandedQuestion === index && (\r\n            <CardContent>\r\n              <QuestionForm\r\n                question={question}\r\n                index={index}\r\n                onUpdate={(updatedQuestion) => onUpdateQuestion(index, updatedQuestion)}\r\n              />\r\n              <Button \r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => onSaveQuestion(question, index)}\r\n                className=\"mt-4\"\r\n                disabled={questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving'}\r\n              >\r\n                {questionSaveStatuses.find(s => s.id === question.id)?.status === 'saving' ? (\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary mr-2\" />\r\n                ) : (\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                )}\r\n                Save Question\r\n              </Button>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n      ))}\r\n\r\n      {/* Add Question Section */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <QuestionTypeSelect \r\n          value={selectedQuestionType} \r\n          onChange={onQuestionTypeChange}\r\n        />\r\n        <Button\r\n          onClick={onAddQuestion}\r\n          disabled={!selectedQuestionType}\r\n        >\r\n          <Plus className=\"h-4 w-4 mr-2\" />\r\n          Add Question\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "
        }
    ]
}