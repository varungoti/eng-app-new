{
    "sourceFile": "src/features/content-management/components/layout/ContentHeader.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1740085761259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740089451122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,55 +1,139 @@\n import Link from 'next/link';\r\n-import { ArrowLeft, Eye, EyeOff, RefreshCw } from 'lucide-react';\r\n+import { ArrowLeft, Eye, EyeOff, HelpCircle, RefreshCw } from 'lucide-react';\r\n import { Button } from '@/components/ui/button';\r\n+import { Badge } from '@/components/ui/badge';\r\n+import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n import { cn } from '@/lib/utils';\r\n \r\n interface ContentHeaderProps {\r\n   showHelpTips: boolean;\r\n   onToggleHelpTips: () => void;\r\n   onRefresh: () => void;\r\n+  isViewMode?: boolean;\r\n+  onToggleViewMode?: () => void;\r\n+  saveProgress?: 'idle' | 'saving' | 'saved' | 'error';\r\n   className?: string;\r\n }\r\n \r\n export const ContentHeader = ({\r\n   showHelpTips,\r\n   onToggleHelpTips,\r\n   onRefresh,\r\n+  isViewMode,\r\n+  onToggleViewMode,\r\n+  saveProgress,\r\n   className\r\n }: ContentHeaderProps) => {\r\n   return (\r\n-    <div className={cn(\"flex items-center justify-between mb-2\", className)}>\r\n+    <div className={cn(\"flex items-center justify-between mb-6\", className)}>\r\n+      {/* Left Section */}\r\n       <div className=\"flex items-center gap-4\">\r\n-        <Link href=\"/super-admin\">\r\n+        <Link href=\"/dashboard\">\r\n           <Button variant=\"outline\" className=\"gap-2\">\r\n             <ArrowLeft className=\"h-4 w-4\" />\r\n-            Back\r\n+            Back to Dashboard\r\n           </Button>\r\n         </Link>\r\n-        <div className=\"flex items-center gap-2\">\r\n-          <h1 className=\"text-2xl font-bold\">Lesson Management</h1>\r\n-          <Button\r\n-            variant=\"ghost\"\r\n-            size=\"icon\"\r\n-            onClick={onRefresh}\r\n-            className=\"ml-2\"\r\n-            title=\"Refresh lesson content\"\r\n-          >\r\n-            <RefreshCw className=\"h-4 w-4\" />\r\n-          </Button>\r\n+        <div className=\"flex flex-col\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <h1 className=\"text-2xl font-bold\">Lesson Management</h1>\r\n+            <TooltipProvider>\r\n+              <Tooltip>\r\n+                <TooltipTrigger asChild>\r\n+                  <Button\r\n+                    variant=\"ghost\"\r\n+                    size=\"icon\"\r\n+                    onClick={onRefresh}\r\n+                    className=\"h-8 w-8\"\r\n+                  >\r\n+                    <RefreshCw className=\"h-4 w-4\" />\r\n+                  </Button>\r\n+                </TooltipTrigger>\r\n+                <TooltipContent>\r\n+                  Refresh lesson content\r\n+                </TooltipContent>\r\n+              </Tooltip>\r\n+            </TooltipProvider>\r\n+            {saveProgress && saveProgress !== 'idle' && (\r\n+              <Badge variant={\r\n+                saveProgress === 'saved' \r\n+                  ? 'secondary' \r\n+                  : saveProgress === 'error' \r\n+                    ? 'destructive' \r\n+                    : 'outline'\r\n+              }>\r\n+                {saveProgress === 'saving' ? 'Saving...' : saveProgress === 'saved' ? 'Saved' : 'Error'}\r\n+              </Badge>\r\n+            )}\r\n+          </div>\r\n+          <p className=\"text-sm text-muted-foreground\">\r\n+            Create and manage your educational content\r\n+          </p>\r\n         </div>\r\n-        <p className=\"text-sm text-muted-foreground\">Create and manage your educational content</p>\r\n       </div>\r\n+\r\n+      {/* Right Section */}\r\n       <div className=\"flex items-center gap-2\">\r\n-        <Button\r\n-          variant=\"outline\"\r\n-          size=\"sm\"\r\n-          onClick={onToggleHelpTips}\r\n-          className=\"gap-2\"\r\n-        >\r\n-          {showHelpTips ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n-          {showHelpTips ? 'Hide Tips' : 'Show Tips'}\r\n-        </Button>\r\n+        {/* View/Edit Mode Toggle */}\r\n+        {typeof isViewMode !== 'undefined' && onToggleViewMode && (\r\n+          <TooltipProvider>\r\n+            <Tooltip>\r\n+              <TooltipTrigger asChild>\r\n+                <Button\r\n+                  variant=\"outline\"\r\n+                  size=\"sm\"\r\n+                  onClick={onToggleViewMode}\r\n+                  className=\"gap-2\"\r\n+                >\r\n+                  {isViewMode ? (\r\n+                    <>\r\n+                      <Eye className=\"h-4 w-4\" />\r\n+                      View Mode\r\n+                    </>\r\n+                  ) : (\r\n+                    <>\r\n+                      <EyeOff className=\"h-4 w-4\" />\r\n+                      Edit Mode\r\n+                    </>\r\n+                  )}\r\n+                </Button>\r\n+              </TooltipTrigger>\r\n+              <TooltipContent>\r\n+                {isViewMode ? 'Switch to edit mode' : 'Switch to view mode'}\r\n+              </TooltipContent>\r\n+            </Tooltip>\r\n+          </TooltipProvider>\r\n+        )}\r\n+\r\n+        {/* Help Tips Toggle */}\r\n+        <TooltipProvider>\r\n+          <Tooltip>\r\n+            <TooltipTrigger asChild>\r\n+              <Button\r\n+                variant=\"outline\"\r\n+                size=\"sm\"\r\n+                onClick={onToggleHelpTips}\r\n+                className=\"gap-2\"\r\n+              >\r\n+                {showHelpTips ? (\r\n+                  <>\r\n+                    <EyeOff className=\"h-4 w-4\" />\r\n+                    Hide Tips\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <HelpCircle className=\"h-4 w-4\" />\r\n+                    Show Tips\r\n+                  </>\r\n+                )}\r\n+              </Button>\r\n+            </TooltipTrigger>\r\n+            <TooltipContent>\r\n+              {showHelpTips ? 'Hide help tips' : 'Show help tips'}\r\n+            </TooltipContent>\r\n+          </Tooltip>\r\n+        </TooltipProvider>\r\n       </div>\r\n     </div>\r\n   );\r\n }; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740089694841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,18 @@\n import { Button } from '@/components/ui/button';\r\n import { Badge } from '@/components/ui/badge';\r\n import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n import { cn } from '@/lib/utils';\r\n+import { ReactNode } from 'react';\r\n \r\n interface ContentHeaderProps {\r\n   showHelpTips: boolean;\r\n   onToggleHelpTips: () => void;\r\n   onRefresh: () => void;\r\n   isViewMode?: boolean;\r\n   onToggleViewMode?: () => void;\r\n   saveProgress?: 'idle' | 'saving' | 'saved' | 'error';\r\n+  children?: ReactNode;\r\n   className?: string;\r\n }\r\n \r\n export const ContentHeader = ({\r\n@@ -21,8 +23,9 @@\n   onRefresh,\r\n   isViewMode,\r\n   onToggleViewMode,\r\n   saveProgress,\r\n+  children,\r\n   className\r\n }: ContentHeaderProps) => {\r\n   return (\r\n     <div className={cn(\"flex items-center justify-between mb-6\", className)}>\r\n@@ -132,8 +135,11 @@\n               {showHelpTips ? 'Hide help tips' : 'Show help tips'}\r\n             </TooltipContent>\r\n           </Tooltip>\r\n         </TooltipProvider>\r\n+\r\n+        {/* Additional Content */}\r\n+        {children}\r\n       </div>\r\n     </div>\r\n   );\r\n }; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740091146852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,57 +27,68 @@\n   children,\r\n   className\r\n }: ContentHeaderProps) => {\r\n   return (\r\n-    <div className={cn(\"flex items-center justify-between mb-6\", className)}>\r\n+    <div className={cn(\r\n+      \"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\",\r\n+      \"p-4 sm:p-6 rounded-lg border bg-card shadow-sm\",\r\n+      \"transition-all duration-200 hover:shadow-md\",\r\n+      className\r\n+    )}>\r\n       {/* Left Section */}\r\n-      <div className=\"flex items-center gap-4\">\r\n-        <Link href=\"/dashboard\">\r\n-          <Button variant=\"outline\" className=\"gap-2\">\r\n+      <div className=\"flex flex-col sm:flex-row sm:items-center gap-4\">\r\n+        <Link href=\"/dashboard\" className=\"self-start\">\r\n+          <Button \r\n+            variant=\"outline\" \r\n+            className=\"gap-2 hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n+          >\r\n             <ArrowLeft className=\"h-4 w-4\" />\r\n-            Back to Dashboard\r\n+            <span className=\"hidden sm:inline\">Back to Dashboard</span>\r\n+            <span className=\"sm:hidden\">Back</span>\r\n           </Button>\r\n         </Link>\r\n         <div className=\"flex flex-col\">\r\n-          <div className=\"flex items-center gap-2\">\r\n-            <h1 className=\"text-2xl font-bold\">Lesson Management</h1>\r\n-            <TooltipProvider>\r\n-              <Tooltip>\r\n-                <TooltipTrigger asChild>\r\n-                  <Button\r\n-                    variant=\"ghost\"\r\n-                    size=\"icon\"\r\n-                    onClick={onRefresh}\r\n-                    className=\"h-8 w-8\"\r\n-                  >\r\n-                    <RefreshCw className=\"h-4 w-4\" />\r\n-                  </Button>\r\n-                </TooltipTrigger>\r\n-                <TooltipContent>\r\n-                  Refresh lesson content\r\n-                </TooltipContent>\r\n-              </Tooltip>\r\n-            </TooltipProvider>\r\n-            {saveProgress && saveProgress !== 'idle' && (\r\n-              <Badge variant={\r\n-                saveProgress === 'saved' \r\n-                  ? 'secondary' \r\n-                  : saveProgress === 'error' \r\n-                    ? 'destructive' \r\n-                    : 'outline'\r\n-              }>\r\n-                {saveProgress === 'saving' ? 'Saving...' : saveProgress === 'saved' ? 'Saved' : 'Error'}\r\n-              </Badge>\r\n-            )}\r\n+          <div className=\"flex items-center gap-2 flex-wrap\">\r\n+            <h1 className=\"text-2xl font-bold bg-gradient-to-r from-primary to-primary/60 bg-clip-text text-transparent\">\r\n+              Lesson Management\r\n+            </h1>\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <TooltipProvider>\r\n+                <Tooltip>\r\n+                  <TooltipTrigger asChild>\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      onClick={onRefresh}\r\n+                      className=\"h-8 w-8 hover:bg-primary/10 transition-colors\"\r\n+                    >\r\n+                      <RefreshCw className=\"h-4 w-4\" />\r\n+                    </Button>\r\n+                  </TooltipTrigger>\r\n+                  <TooltipContent>Refresh lesson content</TooltipContent>\r\n+                </Tooltip>\r\n+              </TooltipProvider>\r\n+              {saveProgress && saveProgress !== 'idle' && (\r\n+                <Badge variant={\r\n+                  saveProgress === 'saved' \r\n+                    ? 'success' \r\n+                    : saveProgress === 'error' \r\n+                      ? 'destructive' \r\n+                      : 'outline'\r\n+                } className=\"animate-fade-in\">\r\n+                  {saveProgress === 'saving' ? 'Saving...' : saveProgress === 'saved' ? 'Saved' : 'Error'}\r\n+                </Badge>\r\n+              )}\r\n+            </div>\r\n           </div>\r\n-          <p className=\"text-sm text-muted-foreground\">\r\n-            Create and manage your educational content\r\n+          <p className=\"text-sm text-muted-foreground mt-1\">\r\n+            Create and manage your educational content with ease\r\n           </p>\r\n         </div>\r\n       </div>\r\n \r\n       {/* Right Section */}\r\n-      <div className=\"flex items-center gap-2\">\r\n+      <div className=\"flex items-center gap-2 self-end sm:self-auto\">\r\n         {/* View/Edit Mode Toggle */}\r\n         {typeof isViewMode !== 'undefined' && onToggleViewMode && (\r\n           <TooltipProvider>\r\n             <Tooltip>\r\n@@ -85,19 +96,24 @@\n                 <Button\r\n                   variant=\"outline\"\r\n                   size=\"sm\"\r\n                   onClick={onToggleViewMode}\r\n-                  className=\"gap-2\"\r\n+                  className={cn(\r\n+                    \"gap-2 transition-all duration-200\",\r\n+                    isViewMode \r\n+                      ? \"hover:bg-primary hover:text-primary-foreground\" \r\n+                      : \"hover:bg-destructive hover:text-destructive-foreground\"\r\n+                  )}\r\n                 >\r\n                   {isViewMode ? (\r\n                     <>\r\n                       <Eye className=\"h-4 w-4\" />\r\n-                      View Mode\r\n+                      <span className=\"hidden sm:inline\">View Mode</span>\r\n                     </>\r\n                   ) : (\r\n                     <>\r\n                       <EyeOff className=\"h-4 w-4\" />\r\n-                      Edit Mode\r\n+                      <span className=\"hidden sm:inline\">Edit Mode</span>\r\n                     </>\r\n                   )}\r\n                 </Button>\r\n               </TooltipTrigger>\r\n@@ -115,19 +131,24 @@\n               <Button\r\n                 variant=\"outline\"\r\n                 size=\"sm\"\r\n                 onClick={onToggleHelpTips}\r\n-                className=\"gap-2\"\r\n+                className={cn(\r\n+                  \"gap-2 transition-all duration-200\",\r\n+                  showHelpTips \r\n+                    ? \"hover:bg-primary hover:text-primary-foreground\" \r\n+                    : \"hover:bg-accent hover:text-accent-foreground\"\r\n+                )}\r\n               >\r\n                 {showHelpTips ? (\r\n                   <>\r\n                     <EyeOff className=\"h-4 w-4\" />\r\n-                    Hide Tips\r\n+                    <span className=\"hidden sm:inline\">Hide Tips</span>\r\n                   </>\r\n                 ) : (\r\n                   <>\r\n                     <HelpCircle className=\"h-4 w-4\" />\r\n-                    Show Tips\r\n+                    <span className=\"hidden sm:inline\">Show Tips</span>\r\n                   </>\r\n                 )}\r\n               </Button>\r\n             </TooltipTrigger>\r\n"
                }
            ],
            "date": 1740085761259,
            "name": "Commit-0",
            "content": "import Link from 'next/link';\r\nimport { ArrowLeft, Eye, EyeOff, RefreshCw } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface ContentHeaderProps {\r\n  showHelpTips: boolean;\r\n  onToggleHelpTips: () => void;\r\n  onRefresh: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const ContentHeader = ({\r\n  showHelpTips,\r\n  onToggleHelpTips,\r\n  onRefresh,\r\n  className\r\n}: ContentHeaderProps) => {\r\n  return (\r\n    <div className={cn(\"flex items-center justify-between mb-2\", className)}>\r\n      <div className=\"flex items-center gap-4\">\r\n        <Link href=\"/super-admin\">\r\n          <Button variant=\"outline\" className=\"gap-2\">\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </Button>\r\n        </Link>\r\n        <div className=\"flex items-center gap-2\">\r\n          <h1 className=\"text-2xl font-bold\">Lesson Management</h1>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            onClick={onRefresh}\r\n            className=\"ml-2\"\r\n            title=\"Refresh lesson content\"\r\n          >\r\n            <RefreshCw className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n        <p className=\"text-sm text-muted-foreground\">Create and manage your educational content</p>\r\n      </div>\r\n      <div className=\"flex items-center gap-2\">\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={onToggleHelpTips}\r\n          className=\"gap-2\"\r\n        >\r\n          {showHelpTips ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n          {showHelpTips ? 'Hide Tips' : 'Show Tips'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "
        }
    ]
}